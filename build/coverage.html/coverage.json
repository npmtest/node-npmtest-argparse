{"/home/travis/build/npmtest/node-npmtest-argparse/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_argparse */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-argparse/lib.npmtest_argparse.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/lib.npmtest_argparse.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_argparse */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_argparse = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_argparse = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-argparse/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-argparse && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_argparse */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_argparse","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_argparse.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_argparse.rollup.js'] =","            local.assetsDict['/assets.npmtest_argparse.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_argparse.__dirname + '/lib.npmtest_argparse.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}}},"branchMap":{},"code":["'use strict';","","module.exports = require('./lib/argparse');",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argparse.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argparse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":64}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"6":{"start":{"line":9,"column":0},"end":{"line":10,"column":70}},"7":{"start":{"line":11,"column":0},"end":{"line":12,"column":68}},"8":{"start":{"line":13,"column":0},"end":{"line":14,"column":61}}},"branchMap":{},"code":["'use strict';","","module.exports.ArgumentParser = require('./argument_parser.js');","module.exports.Namespace = require('./namespace');","module.exports.Action = require('./action');","module.exports.HelpFormatter = require('./help/formatter.js');","module.exports.Const = require('./const.js');","","module.exports.ArgumentDefaultsHelpFormatter =","  require('./help/added_formatters.js').ArgumentDefaultsHelpFormatter;","module.exports.RawDescriptionHelpFormatter =","  require('./help/added_formatters.js').RawDescriptionHelpFormatter;","module.exports.RawTextHelpFormatter =","  require('./help/added_formatters.js').RawTextHelpFormatter;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"11":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument_parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument_parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":1,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":1,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":1,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":1,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":1,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":1,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":1,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":1,"475":0,"476":0,"477":0,"478":1,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":1,"490":0,"491":0,"492":0,"493":1,"494":0,"495":1,"496":0,"497":1,"498":0,"499":0,"500":0,"501":0,"502":1,"503":0,"504":0,"505":0,"506":0,"507":0,"508":1,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0,0,0,0,0,0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0,0],"100":[0,0],"101":[0,0],"102":[0,0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0,0],"112":[0,0],"113":[0,0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},"fnMap":{"1":{"name":"ArgumentParser","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":33}}},"2":{"name":"FUNCTION_IDENTITY","line":86,"loc":{"start":{"line":86,"column":2},"end":{"line":86,"column":32}}},"3":{"name":"(anonymous_3)","line":91,"loc":{"start":{"line":91,"column":31},"end":{"line":91,"column":44}}},"4":{"name":"(anonymous_4)","line":98,"loc":{"start":{"line":98,"column":33},"end":{"line":98,"column":46}}},"5":{"name":"(anonymous_5)","line":105,"loc":{"start":{"line":105,"column":34},"end":{"line":105,"column":47}}},"6":{"name":"(anonymous_6)","line":134,"loc":{"start":{"line":134,"column":26},"end":{"line":134,"column":44}}},"7":{"name":"(anonymous_7)","line":156,"loc":{"start":{"line":156,"column":41},"end":{"line":156,"column":60}}},"8":{"name":"(anonymous_8)","line":199,"loc":{"start":{"line":199,"column":38},"end":{"line":199,"column":56}}},"9":{"name":"(anonymous_9)","line":208,"loc":{"start":{"line":208,"column":47},"end":{"line":208,"column":59}}},"10":{"name":"(anonymous_10)","line":209,"loc":{"start":{"line":209,"column":30},"end":{"line":209,"column":48}}},"11":{"name":"(anonymous_11)","line":214,"loc":{"start":{"line":214,"column":49},"end":{"line":214,"column":61}}},"12":{"name":"(anonymous_12)","line":215,"loc":{"start":{"line":215,"column":30},"end":{"line":215,"column":48}}},"13":{"name":"(anonymous_13)","line":232,"loc":{"start":{"line":232,"column":37},"end":{"line":232,"column":64}}},"14":{"name":"(anonymous_14)","line":258,"loc":{"start":{"line":258,"column":42},"end":{"line":258,"column":69}}},"15":{"name":"(anonymous_15)","line":267,"loc":{"start":{"line":267,"column":24},"end":{"line":267,"column":42}}},"16":{"name":"(anonymous_16)","line":281,"loc":{"start":{"line":281,"column":38},"end":{"line":281,"column":54}}},"17":{"name":"(anonymous_17)","line":301,"loc":{"start":{"line":301,"column":43},"end":{"line":301,"column":76}}},"18":{"name":"actionHash","line":316,"loc":{"start":{"line":316,"column":2},"end":{"line":316,"column":30}}},"19":{"name":"(anonymous_19)","line":326,"loc":{"start":{"line":326,"column":40},"end":{"line":326,"column":62}}},"20":{"name":"(anonymous_20)","line":327,"loc":{"start":{"line":327,"column":37},"end":{"line":327,"column":77}}},"21":{"name":"(anonymous_21)","line":345,"loc":{"start":{"line":345,"column":21},"end":{"line":345,"column":58}}},"22":{"name":"takeAction","line":372,"loc":{"start":{"line":372,"column":2},"end":{"line":372,"column":61}}},"23":{"name":"(anonymous_23)","line":382,"loc":{"start":{"line":382,"column":52},"end":{"line":382,"column":78}}},"24":{"name":"consumeOptional","line":398,"loc":{"start":{"line":398,"column":2},"end":{"line":398,"column":39}}},"25":{"name":"consumePositionals","line":482,"loc":{"start":{"line":482,"column":2},"end":{"line":482,"column":42}}},"26":{"name":"(anonymous_26)","line":514,"loc":{"start":{"line":514,"column":43},"end":{"line":514,"column":63}}},"27":{"name":"(anonymous_27)","line":572,"loc":{"start":{"line":572,"column":24},"end":{"line":572,"column":42}}},"28":{"name":"(anonymous_28)","line":582,"loc":{"start":{"line":582,"column":40},"end":{"line":582,"column":57}}},"29":{"name":"(anonymous_29)","line":584,"loc":{"start":{"line":584,"column":44},"end":{"line":584,"column":62}}},"30":{"name":"(anonymous_30)","line":591,"loc":{"start":{"line":591,"column":36},"end":{"line":591,"column":54}}},"31":{"name":"(anonymous_31)","line":607,"loc":{"start":{"line":607,"column":46},"end":{"line":607,"column":68}}},"32":{"name":"(anonymous_32)","line":612,"loc":{"start":{"line":612,"column":21},"end":{"line":612,"column":42}}},"33":{"name":"(anonymous_33)","line":623,"loc":{"start":{"line":623,"column":24},"end":{"line":623,"column":43}}},"34":{"name":"(anonymous_34)","line":624,"loc":{"start":{"line":624,"column":53},"end":{"line":624,"column":68}}},"35":{"name":"(anonymous_35)","line":638,"loc":{"start":{"line":638,"column":48},"end":{"line":638,"column":67}}},"36":{"name":"(anonymous_36)","line":642,"loc":{"start":{"line":642,"column":42},"end":{"line":642,"column":78}}},"37":{"name":"(anonymous_37)","line":676,"loc":{"start":{"line":676,"column":50},"end":{"line":676,"column":87}}},"38":{"name":"getLength","line":684,"loc":{"start":{"line":684,"column":2},"end":{"line":684,"column":29}}},"39":{"name":"(anonymous_39)","line":710,"loc":{"start":{"line":710,"column":42},"end":{"line":710,"column":63}}},"40":{"name":"(anonymous_40)","line":750,"loc":{"start":{"line":750,"column":41},"end":{"line":750,"column":64}}},"41":{"name":"(anonymous_41)","line":781,"loc":{"start":{"line":781,"column":44},"end":{"line":781,"column":68}}},"42":{"name":"(anonymous_42)","line":837,"loc":{"start":{"line":837,"column":44},"end":{"line":837,"column":62}}},"43":{"name":"(anonymous_43)","line":887,"loc":{"start":{"line":887,"column":38},"end":{"line":887,"column":68}}},"44":{"name":"(anonymous_44)","line":892,"loc":{"start":{"line":892,"column":35},"end":{"line":892,"column":59}}},"45":{"name":"(anonymous_45)","line":927,"loc":{"start":{"line":927,"column":27},"end":{"line":927,"column":40}}},"46":{"name":"(anonymous_46)","line":933,"loc":{"start":{"line":933,"column":27},"end":{"line":933,"column":40}}},"47":{"name":"(anonymous_47)","line":940,"loc":{"start":{"line":940,"column":27},"end":{"line":940,"column":40}}},"48":{"name":"(anonymous_48)","line":943,"loc":{"start":{"line":943,"column":18},"end":{"line":943,"column":31}}},"49":{"name":"(anonymous_49)","line":952,"loc":{"start":{"line":952,"column":37},"end":{"line":952,"column":66}}},"50":{"name":"(anonymous_50)","line":984,"loc":{"start":{"line":984,"column":39},"end":{"line":984,"column":64}}},"51":{"name":"(anonymous_51)","line":1023,"loc":{"start":{"line":1023,"column":39},"end":{"line":1023,"column":51}}},"52":{"name":"(anonymous_52)","line":1038,"loc":{"start":{"line":1038,"column":38},"end":{"line":1038,"column":50}}},"53":{"name":"(anonymous_53)","line":1048,"loc":{"start":{"line":1048,"column":29},"end":{"line":1048,"column":52}}},"54":{"name":"(anonymous_54)","line":1062,"loc":{"start":{"line":1062,"column":41},"end":{"line":1062,"column":53}}},"55":{"name":"(anonymous_55)","line":1081,"loc":{"start":{"line":1081,"column":38},"end":{"line":1081,"column":50}}},"56":{"name":"(anonymous_56)","line":1094,"loc":{"start":{"line":1094,"column":37},"end":{"line":1094,"column":49}}},"57":{"name":"(anonymous_57)","line":1098,"loc":{"start":{"line":1098,"column":41},"end":{"line":1098,"column":68}}},"58":{"name":"(anonymous_58)","line":1118,"loc":{"start":{"line":1118,"column":32},"end":{"line":1118,"column":59}}},"59":{"name":"(anonymous_59)","line":1140,"loc":{"start":{"line":1140,"column":33},"end":{"line":1140,"column":48}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":52}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":54}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":48}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":39}},"11":{"start":{"line":55,"column":0},"end":{"line":144,"column":1}},"12":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":39}},"14":{"start":{"line":59,"column":2},"end":{"line":59,"column":18}},"15":{"start":{"line":60,"column":2},"end":{"line":60,"column":26}},"16":{"start":{"line":62,"column":2},"end":{"line":62,"column":54}},"17":{"start":{"line":63,"column":2},"end":{"line":63,"column":62}},"18":{"start":{"line":64,"column":2},"end":{"line":64,"column":53}},"19":{"start":{"line":65,"column":2},"end":{"line":65,"column":65}},"20":{"start":{"line":66,"column":2},"end":{"line":66,"column":38}},"21":{"start":{"line":68,"column":2},"end":{"line":68,"column":80}},"22":{"start":{"line":69,"column":2},"end":{"line":69,"column":42}},"23":{"start":{"line":71,"column":2},"end":{"line":71,"column":66}},"24":{"start":{"line":72,"column":2},"end":{"line":72,"column":27}},"25":{"start":{"line":73,"column":2},"end":{"line":73,"column":29}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":31}},"27":{"start":{"line":75,"column":2},"end":{"line":75,"column":33}},"28":{"start":{"line":77,"column":2},"end":{"line":77,"column":40}},"29":{"start":{"line":79,"column":2},"end":{"line":79,"column":66}},"30":{"start":{"line":80,"column":2},"end":{"line":80,"column":65}},"31":{"start":{"line":81,"column":2},"end":{"line":81,"column":79}},"32":{"start":{"line":82,"column":2},"end":{"line":82,"column":75}},"33":{"start":{"line":83,"column":2},"end":{"line":83,"column":26}},"34":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"35":{"start":{"line":87,"column":4},"end":{"line":87,"column":13}},"36":{"start":{"line":89,"column":2},"end":{"line":89,"column":51}},"37":{"start":{"line":90,"column":2},"end":{"line":90,"column":49}},"38":{"start":{"line":91,"column":2},"end":{"line":97,"column":5}},"39":{"start":{"line":92,"column":4},"end":{"line":92,"column":33}},"40":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"41":{"start":{"line":94,"column":6},"end":{"line":94,"column":54}},"42":{"start":{"line":96,"column":4},"end":{"line":96,"column":18}},"43":{"start":{"line":98,"column":2},"end":{"line":104,"column":5}},"44":{"start":{"line":99,"column":4},"end":{"line":99,"column":31}},"45":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"46":{"start":{"line":101,"column":6},"end":{"line":101,"column":52}},"47":{"start":{"line":103,"column":4},"end":{"line":103,"column":18}},"48":{"start":{"line":105,"column":2},"end":{"line":107,"column":5}},"49":{"start":{"line":106,"column":4},"end":{"line":106,"column":18}},"50":{"start":{"line":110,"column":2},"end":{"line":110,"column":87}},"51":{"start":{"line":111,"column":2},"end":{"line":120,"column":3}},"52":{"start":{"line":112,"column":4},"end":{"line":119,"column":6}},"53":{"start":{"line":121,"column":2},"end":{"line":131,"column":3}},"54":{"start":{"line":122,"column":4},"end":{"line":130,"column":6}},"55":{"start":{"line":134,"column":2},"end":{"line":143,"column":5}},"56":{"start":{"line":135,"column":4},"end":{"line":135,"column":38}},"57":{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},"58":{"start":{"line":137,"column":6},"end":{"line":141,"column":7}},"59":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"60":{"start":{"line":139,"column":10},"end":{"line":139,"column":68}},"61":{"start":{"line":146,"column":0},"end":{"line":146,"column":47}},"62":{"start":{"line":156,"column":0},"end":{"line":197,"column":2}},"63":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"64":{"start":{"line":158,"column":4},"end":{"line":158,"column":60}},"65":{"start":{"line":161,"column":2},"end":{"line":161,"column":26}},"66":{"start":{"line":162,"column":2},"end":{"line":162,"column":40}},"67":{"start":{"line":163,"column":2},"end":{"line":163,"column":29}},"68":{"start":{"line":164,"column":2},"end":{"line":164,"column":64}},"69":{"start":{"line":167,"column":2},"end":{"line":178,"column":3}},"70":{"start":{"line":169,"column":4},"end":{"line":172,"column":7}},"71":{"start":{"line":173,"column":4},"end":{"line":173,"column":25}},"72":{"start":{"line":174,"column":4},"end":{"line":174,"column":31}},"73":{"start":{"line":177,"column":4},"end":{"line":177,"column":41}},"74":{"start":{"line":182,"column":2},"end":{"line":188,"column":3}},"75":{"start":{"line":183,"column":4},"end":{"line":183,"column":41}},"76":{"start":{"line":184,"column":4},"end":{"line":184,"column":51}},"77":{"start":{"line":185,"column":4},"end":{"line":185,"column":47}},"78":{"start":{"line":186,"column":4},"end":{"line":186,"column":60}},"79":{"start":{"line":187,"column":4},"end":{"line":187,"column":49}},"80":{"start":{"line":191,"column":2},"end":{"line":191,"column":62}},"81":{"start":{"line":192,"column":2},"end":{"line":192,"column":41}},"82":{"start":{"line":193,"column":2},"end":{"line":193,"column":38}},"83":{"start":{"line":196,"column":2},"end":{"line":196,"column":16}},"84":{"start":{"line":199,"column":0},"end":{"line":206,"column":2}},"85":{"start":{"line":200,"column":2},"end":{"line":204,"column":3}},"86":{"start":{"line":201,"column":4},"end":{"line":201,"column":39}},"87":{"start":{"line":203,"column":4},"end":{"line":203,"column":41}},"88":{"start":{"line":205,"column":2},"end":{"line":205,"column":16}},"89":{"start":{"line":208,"column":0},"end":{"line":212,"column":2}},"90":{"start":{"line":209,"column":2},"end":{"line":211,"column":5}},"91":{"start":{"line":210,"column":4},"end":{"line":210,"column":31}},"92":{"start":{"line":214,"column":0},"end":{"line":218,"column":2}},"93":{"start":{"line":215,"column":2},"end":{"line":217,"column":5}},"94":{"start":{"line":216,"column":4},"end":{"line":216,"column":33}},"95":{"start":{"line":232,"column":0},"end":{"line":244,"column":2}},"96":{"start":{"line":233,"column":2},"end":{"line":233,"column":11}},"97":{"start":{"line":234,"column":2},"end":{"line":234,"column":52}},"98":{"start":{"line":236,"column":2},"end":{"line":236,"column":19}},"99":{"start":{"line":237,"column":2},"end":{"line":237,"column":19}},"100":{"start":{"line":238,"column":2},"end":{"line":242,"column":3}},"101":{"start":{"line":239,"column":4},"end":{"line":241,"column":6}},"102":{"start":{"line":243,"column":2},"end":{"line":243,"column":14}},"103":{"start":{"line":258,"column":0},"end":{"line":299,"column":2}},"104":{"start":{"line":259,"column":2},"end":{"line":259,"column":18}},"105":{"start":{"line":262,"column":2},"end":{"line":262,"column":39}},"106":{"start":{"line":265,"column":2},"end":{"line":265,"column":43}},"107":{"start":{"line":267,"column":2},"end":{"line":279,"column":5}},"108":{"start":{"line":268,"column":4},"end":{"line":278,"column":5}},"109":{"start":{"line":269,"column":6},"end":{"line":277,"column":7}},"110":{"start":{"line":270,"column":8},"end":{"line":276,"column":9}},"111":{"start":{"line":271,"column":10},"end":{"line":271,"column":49}},"112":{"start":{"line":272,"column":10},"end":{"line":274,"column":11}},"113":{"start":{"line":273,"column":12},"end":{"line":273,"column":64}},"114":{"start":{"line":275,"column":10},"end":{"line":275,"column":48}},"115":{"start":{"line":281,"column":2},"end":{"line":283,"column":5}},"116":{"start":{"line":282,"column":4},"end":{"line":282,"column":43}},"117":{"start":{"line":286,"column":2},"end":{"line":298,"column":3}},"118":{"start":{"line":287,"column":4},"end":{"line":287,"column":52}},"119":{"start":{"line":289,"column":4},"end":{"line":289,"column":23}},"120":{"start":{"line":290,"column":4},"end":{"line":290,"column":18}},"121":{"start":{"line":291,"column":4},"end":{"line":294,"column":5}},"122":{"start":{"line":292,"column":6},"end":{"line":292,"column":71}},"123":{"start":{"line":293,"column":6},"end":{"line":293,"column":50}},"124":{"start":{"line":295,"column":4},"end":{"line":295,"column":31}},"125":{"start":{"line":297,"column":4},"end":{"line":297,"column":18}},"126":{"start":{"line":301,"column":0},"end":{"line":605,"column":2}},"127":{"start":{"line":302,"column":2},"end":{"line":302,"column":18}},"128":{"start":{"line":304,"column":2},"end":{"line":304,"column":18}},"129":{"start":{"line":307,"column":2},"end":{"line":309,"column":3}},"130":{"start":{"line":308,"column":4},"end":{"line":308,"column":53}},"131":{"start":{"line":316,"column":2},"end":{"line":321,"column":3}},"132":{"start":{"line":320,"column":4},"end":{"line":320,"column":28}},"133":{"start":{"line":323,"column":2},"end":{"line":323,"column":21}},"134":{"start":{"line":324,"column":2},"end":{"line":324,"column":27}},"135":{"start":{"line":326,"column":2},"end":{"line":336,"column":5}},"136":{"start":{"line":327,"column":4},"end":{"line":335,"column":7}},"137":{"start":{"line":328,"column":6},"end":{"line":328,"column":36}},"138":{"start":{"line":329,"column":6},"end":{"line":331,"column":7}},"139":{"start":{"line":330,"column":8},"end":{"line":330,"column":34}},"140":{"start":{"line":332,"column":6},"end":{"line":332,"column":39}},"141":{"start":{"line":333,"column":6},"end":{"line":333,"column":64}},"142":{"start":{"line":334,"column":6},"end":{"line":334,"column":65}},"143":{"start":{"line":341,"column":2},"end":{"line":341,"column":31}},"144":{"start":{"line":343,"column":2},"end":{"line":343,"column":33}},"145":{"start":{"line":345,"column":2},"end":{"line":365,"column":5}},"146":{"start":{"line":346,"column":4},"end":{"line":364,"column":5}},"147":{"start":{"line":347,"column":6},"end":{"line":347,"column":38}},"148":{"start":{"line":348,"column":6},"end":{"line":351,"column":7}},"149":{"start":{"line":349,"column":8},"end":{"line":349,"column":40}},"150":{"start":{"line":350,"column":8},"end":{"line":350,"column":25}},"151":{"start":{"line":355,"column":6},"end":{"line":355,"column":18}},"152":{"start":{"line":356,"column":6},"end":{"line":356,"column":55}},"153":{"start":{"line":357,"column":6},"end":{"line":362,"column":7}},"154":{"start":{"line":358,"column":8},"end":{"line":358,"column":22}},"155":{"start":{"line":360,"column":8},"end":{"line":360,"column":58}},"156":{"start":{"line":361,"column":8},"end":{"line":361,"column":22}},"157":{"start":{"line":363,"column":6},"end":{"line":363,"column":42}},"158":{"start":{"line":366,"column":2},"end":{"line":366,"column":57}},"159":{"start":{"line":368,"column":2},"end":{"line":368,"column":23}},"160":{"start":{"line":369,"column":2},"end":{"line":369,"column":33}},"161":{"start":{"line":372,"column":2},"end":{"line":396,"column":3}},"162":{"start":{"line":373,"column":4},"end":{"line":373,"column":29}},"163":{"start":{"line":374,"column":4},"end":{"line":374,"column":66}},"164":{"start":{"line":379,"column":4},"end":{"line":391,"column":5}},"165":{"start":{"line":380,"column":6},"end":{"line":380,"column":41}},"166":{"start":{"line":381,"column":6},"end":{"line":390,"column":7}},"167":{"start":{"line":382,"column":8},"end":{"line":389,"column":11}},"168":{"start":{"line":383,"column":10},"end":{"line":388,"column":11}},"169":{"start":{"line":384,"column":12},"end":{"line":387,"column":14}},"170":{"start":{"line":393,"column":4},"end":{"line":395,"column":5}},"171":{"start":{"line":394,"column":6},"end":{"line":394,"column":65}},"172":{"start":{"line":398,"column":2},"end":{"line":476,"column":3}},"173":{"start":{"line":400,"column":4},"end":{"line":400,"column":54}},"174":{"start":{"line":401,"column":4},"end":{"line":401,"column":32}},"175":{"start":{"line":402,"column":4},"end":{"line":402,"column":38}},"176":{"start":{"line":403,"column":4},"end":{"line":403,"column":37}},"177":{"start":{"line":407,"column":4},"end":{"line":407,"column":26}},"178":{"start":{"line":409,"column":4},"end":{"line":409,"column":36}},"179":{"start":{"line":411,"column":4},"end":{"line":465,"column":5}},"180":{"start":{"line":412,"column":6},"end":{"line":415,"column":7}},"181":{"start":{"line":413,"column":8},"end":{"line":413,"column":44}},"182":{"start":{"line":414,"column":8},"end":{"line":414,"column":30}},"183":{"start":{"line":416,"column":6},"end":{"line":463,"column":7}},"184":{"start":{"line":417,"column":8},"end":{"line":417,"column":52}},"185":{"start":{"line":422,"column":8},"end":{"line":422,"column":37}},"186":{"start":{"line":423,"column":8},"end":{"line":446,"column":9}},"187":{"start":{"line":424,"column":10},"end":{"line":424,"column":58}},"188":{"start":{"line":425,"column":10},"end":{"line":425,"column":58}},"189":{"start":{"line":426,"column":10},"end":{"line":426,"column":60}},"190":{"start":{"line":427,"column":10},"end":{"line":427,"column":55}},"191":{"start":{"line":429,"column":10},"end":{"line":434,"column":11}},"192":{"start":{"line":430,"column":12},"end":{"line":430,"column":48}},"193":{"start":{"line":431,"column":12},"end":{"line":431,"column":41}},"194":{"start":{"line":433,"column":12},"end":{"line":433,"column":100}},"195":{"start":{"line":435,"column":15},"end":{"line":446,"column":9}},"196":{"start":{"line":438,"column":10},"end":{"line":438,"column":32}},"197":{"start":{"line":439,"column":10},"end":{"line":439,"column":33}},"198":{"start":{"line":440,"column":10},"end":{"line":440,"column":60}},"199":{"start":{"line":441,"column":10},"end":{"line":441,"column":16}},"200":{"start":{"line":445,"column":10},"end":{"line":445,"column":98}},"201":{"start":{"line":452,"column":8},"end":{"line":452,"column":31}},"202":{"start":{"line":453,"column":8},"end":{"line":453,"column":63}},"203":{"start":{"line":455,"column":8},"end":{"line":455,"column":65}},"204":{"start":{"line":456,"column":8},"end":{"line":456,"column":32}},"205":{"start":{"line":459,"column":8},"end":{"line":459,"column":45}},"206":{"start":{"line":461,"column":8},"end":{"line":461,"column":58}},"207":{"start":{"line":462,"column":8},"end":{"line":462,"column":14}},"208":{"start":{"line":469,"column":4},"end":{"line":471,"column":5}},"209":{"start":{"line":470,"column":6},"end":{"line":470,"column":46}},"210":{"start":{"line":472,"column":4},"end":{"line":474,"column":5}},"211":{"start":{"line":473,"column":6},"end":{"line":473,"column":46}},"212":{"start":{"line":475,"column":4},"end":{"line":475,"column":16}},"213":{"start":{"line":480,"column":2},"end":{"line":480,"column":49}},"214":{"start":{"line":482,"column":2},"end":{"line":505,"column":3}},"215":{"start":{"line":484,"column":4},"end":{"line":484,"column":63}},"216":{"start":{"line":485,"column":4},"end":{"line":485,"column":78}},"217":{"start":{"line":489,"column":4},"end":{"line":499,"column":5}},"218":{"start":{"line":490,"column":6},"end":{"line":490,"column":34}},"219":{"start":{"line":491,"column":6},"end":{"line":491,"column":34}},"220":{"start":{"line":492,"column":6},"end":{"line":494,"column":7}},"221":{"start":{"line":493,"column":8},"end":{"line":493,"column":17}},"222":{"start":{"line":495,"column":6},"end":{"line":495,"column":69}},"223":{"start":{"line":497,"column":6},"end":{"line":497,"column":29}},"224":{"start":{"line":498,"column":6},"end":{"line":498,"column":31}},"225":{"start":{"line":503,"column":4},"end":{"line":503,"column":54}},"226":{"start":{"line":504,"column":4},"end":{"line":504,"column":22}},"227":{"start":{"line":509,"column":2},"end":{"line":509,"column":21}},"228":{"start":{"line":510,"column":2},"end":{"line":510,"column":15}},"229":{"start":{"line":512,"column":2},"end":{"line":512,"column":32}},"230":{"start":{"line":514,"column":2},"end":{"line":516,"column":5}},"231":{"start":{"line":515,"column":4},"end":{"line":515,"column":82}},"232":{"start":{"line":518,"column":2},"end":{"line":518,"column":49}},"233":{"start":{"line":520,"column":2},"end":{"line":557,"column":3}},"234":{"start":{"line":522,"column":4},"end":{"line":522,"column":33}},"235":{"start":{"line":523,"column":4},"end":{"line":534,"column":5}},"236":{"start":{"line":524,"column":6},"end":{"line":524,"column":70}},"237":{"start":{"line":524,"column":59},"end":{"line":524,"column":68}},"238":{"start":{"line":526,"column":6},"end":{"line":526,"column":40}},"239":{"start":{"line":527,"column":6},"end":{"line":533,"column":7}},"240":{"start":{"line":528,"column":8},"end":{"line":532,"column":9}},"241":{"start":{"line":529,"column":10},"end":{"line":529,"column":76}},"242":{"start":{"line":531,"column":10},"end":{"line":531,"column":43}},"243":{"start":{"line":536,"column":4},"end":{"line":546,"column":5}},"244":{"start":{"line":537,"column":6},"end":{"line":537,"column":59}},"245":{"start":{"line":540,"column":6},"end":{"line":545,"column":7}},"246":{"start":{"line":541,"column":8},"end":{"line":541,"column":41}},"247":{"start":{"line":542,"column":8},"end":{"line":542,"column":17}},"248":{"start":{"line":544,"column":8},"end":{"line":544,"column":41}},"249":{"start":{"line":550,"column":4},"end":{"line":554,"column":5}},"250":{"start":{"line":551,"column":6},"end":{"line":551,"column":72}},"251":{"start":{"line":552,"column":6},"end":{"line":552,"column":38}},"252":{"start":{"line":553,"column":6},"end":{"line":553,"column":41}},"253":{"start":{"line":556,"column":4},"end":{"line":556,"column":45}},"254":{"start":{"line":560,"column":2},"end":{"line":560,"column":49}},"255":{"start":{"line":563,"column":2},"end":{"line":563,"column":54}},"256":{"start":{"line":567,"column":2},"end":{"line":569,"column":3}},"257":{"start":{"line":568,"column":4},"end":{"line":568,"column":36}},"258":{"start":{"line":572,"column":2},"end":{"line":578,"column":5}},"259":{"start":{"line":573,"column":4},"end":{"line":577,"column":5}},"260":{"start":{"line":574,"column":6},"end":{"line":576,"column":7}},"261":{"start":{"line":575,"column":8},"end":{"line":575,"column":74}},"262":{"start":{"line":581,"column":2},"end":{"line":581,"column":25}},"263":{"start":{"line":582,"column":2},"end":{"line":601,"column":5}},"264":{"start":{"line":583,"column":4},"end":{"line":600,"column":5}},"265":{"start":{"line":584,"column":6},"end":{"line":586,"column":9}},"266":{"start":{"line":585,"column":8},"end":{"line":585,"column":60}},"267":{"start":{"line":589,"column":6},"end":{"line":599,"column":7}},"268":{"start":{"line":590,"column":8},"end":{"line":590,"column":23}},"269":{"start":{"line":591,"column":8},"end":{"line":595,"column":11}},"270":{"start":{"line":592,"column":10},"end":{"line":594,"column":11}},"271":{"start":{"line":593,"column":12},"end":{"line":593,"column":41}},"272":{"start":{"line":596,"column":8},"end":{"line":596,"column":32}},"273":{"start":{"line":597,"column":8},"end":{"line":597,"column":67}},"274":{"start":{"line":598,"column":8},"end":{"line":598,"column":24}},"275":{"start":{"line":604,"column":2},"end":{"line":604,"column":31}},"276":{"start":{"line":607,"column":0},"end":{"line":636,"column":2}},"277":{"start":{"line":609,"column":2},"end":{"line":609,"column":18}},"278":{"start":{"line":610,"column":2},"end":{"line":610,"column":25}},"279":{"start":{"line":611,"column":2},"end":{"line":611,"column":25}},"280":{"start":{"line":612,"column":2},"end":{"line":634,"column":5}},"281":{"start":{"line":613,"column":4},"end":{"line":633,"column":5}},"282":{"start":{"line":615,"column":6},"end":{"line":615,"column":36}},"283":{"start":{"line":618,"column":6},"end":{"line":632,"column":7}},"284":{"start":{"line":619,"column":8},"end":{"line":619,"column":25}},"285":{"start":{"line":620,"column":8},"end":{"line":620,"column":42}},"286":{"start":{"line":621,"column":8},"end":{"line":621,"column":56}},"287":{"start":{"line":622,"column":8},"end":{"line":622,"column":45}},"288":{"start":{"line":623,"column":8},"end":{"line":628,"column":11}},"289":{"start":{"line":624,"column":10},"end":{"line":626,"column":13}},"290":{"start":{"line":625,"column":12},"end":{"line":625,"column":30}},"291":{"start":{"line":627,"column":10},"end":{"line":627,"column":53}},"292":{"start":{"line":629,"column":8},"end":{"line":629,"column":57}},"293":{"start":{"line":631,"column":8},"end":{"line":631,"column":41}},"294":{"start":{"line":635,"column":2},"end":{"line":635,"column":23}},"295":{"start":{"line":638,"column":0},"end":{"line":640,"column":2}},"296":{"start":{"line":639,"column":2},"end":{"line":639,"column":21}},"297":{"start":{"line":642,"column":0},"end":{"line":674,"column":2}},"298":{"start":{"line":645,"column":2},"end":{"line":645,"column":68}},"299":{"start":{"line":646,"column":2},"end":{"line":646,"column":52}},"300":{"start":{"line":647,"column":2},"end":{"line":647,"column":14}},"301":{"start":{"line":650,"column":2},"end":{"line":671,"column":3}},"302":{"start":{"line":651,"column":4},"end":{"line":665,"column":5}},"303":{"start":{"line":655,"column":8},"end":{"line":655,"column":43}},"304":{"start":{"line":656,"column":8},"end":{"line":656,"column":14}},"305":{"start":{"line":658,"column":8},"end":{"line":658,"column":51}},"306":{"start":{"line":659,"column":8},"end":{"line":659,"column":14}},"307":{"start":{"line":661,"column":8},"end":{"line":661,"column":52}},"308":{"start":{"line":662,"column":8},"end":{"line":662,"column":14}},"309":{"start":{"line":664,"column":8},"end":{"line":664,"column":44}},"310":{"start":{"line":667,"column":4},"end":{"line":670,"column":6}},"311":{"start":{"line":673,"column":2},"end":{"line":673,"column":27}},"312":{"start":{"line":676,"column":0},"end":{"line":708,"column":2}},"313":{"start":{"line":679,"column":2},"end":{"line":679,"column":18}},"314":{"start":{"line":680,"column":2},"end":{"line":680,"column":18}},"315":{"start":{"line":681,"column":2},"end":{"line":681,"column":36}},"316":{"start":{"line":682,"column":2},"end":{"line":682,"column":11}},"317":{"start":{"line":684,"column":2},"end":{"line":686,"column":3}},"318":{"start":{"line":685,"column":4},"end":{"line":685,"column":25}},"319":{"start":{"line":688,"column":2},"end":{"line":704,"column":3}},"320":{"start":{"line":689,"column":4},"end":{"line":689,"column":17}},"321":{"start":{"line":690,"column":4},"end":{"line":690,"column":38}},"322":{"start":{"line":691,"column":4},"end":{"line":693,"column":5}},"323":{"start":{"line":692,"column":6},"end":{"line":692,"column":55}},"324":{"start":{"line":695,"column":4},"end":{"line":695,"column":40}},"325":{"start":{"line":696,"column":4},"end":{"line":696,"column":46}},"326":{"start":{"line":698,"column":4},"end":{"line":703,"column":5}},"327":{"start":{"line":700,"column":6},"end":{"line":700,"column":34}},"328":{"start":{"line":701,"column":6},"end":{"line":701,"column":53}},"329":{"start":{"line":702,"column":6},"end":{"line":702,"column":12}},"330":{"start":{"line":707,"column":2},"end":{"line":707,"column":16}},"331":{"start":{"line":710,"column":0},"end":{"line":779,"column":2}},"332":{"start":{"line":711,"column":2},"end":{"line":711,"column":54}},"333":{"start":{"line":714,"column":2},"end":{"line":716,"column":3}},"334":{"start":{"line":715,"column":4},"end":{"line":715,"column":16}},"335":{"start":{"line":719,"column":2},"end":{"line":721,"column":3}},"336":{"start":{"line":720,"column":4},"end":{"line":720,"column":16}},"337":{"start":{"line":724,"column":2},"end":{"line":726,"column":3}},"338":{"start":{"line":725,"column":4},"end":{"line":725,"column":69}},"339":{"start":{"line":729,"column":2},"end":{"line":731,"column":3}},"340":{"start":{"line":730,"column":4},"end":{"line":730,"column":16}},"341":{"start":{"line":734,"column":2},"end":{"line":742,"column":3}},"342":{"start":{"line":735,"column":4},"end":{"line":735,"column":46}},"343":{"start":{"line":736,"column":4},"end":{"line":736,"column":59}},"344":{"start":{"line":738,"column":4},"end":{"line":741,"column":5}},"345":{"start":{"line":739,"column":6},"end":{"line":739,"column":55}},"346":{"start":{"line":740,"column":6},"end":{"line":740,"column":51}},"347":{"start":{"line":746,"column":2},"end":{"line":746,"column":50}},"348":{"start":{"line":749,"column":2},"end":{"line":761,"column":3}},"349":{"start":{"line":750,"column":4},"end":{"line":752,"column":7}},"350":{"start":{"line":751,"column":6},"end":{"line":751,"column":28}},"351":{"start":{"line":753,"column":4},"end":{"line":756,"column":7}},"352":{"start":{"line":759,"column":9},"end":{"line":761,"column":3}},"353":{"start":{"line":760,"column":4},"end":{"line":760,"column":27}},"354":{"start":{"line":766,"column":2},"end":{"line":770,"column":3}},"355":{"start":{"line":767,"column":4},"end":{"line":769,"column":5}},"356":{"start":{"line":768,"column":6},"end":{"line":768,"column":18}},"357":{"start":{"line":772,"column":2},"end":{"line":774,"column":3}},"358":{"start":{"line":773,"column":4},"end":{"line":773,"column":16}},"359":{"start":{"line":778,"column":2},"end":{"line":778,"column":35}},"360":{"start":{"line":781,"column":0},"end":{"line":835,"column":2}},"361":{"start":{"line":782,"column":2},"end":{"line":782,"column":18}},"362":{"start":{"line":783,"column":2},"end":{"line":783,"column":31}},"363":{"start":{"line":784,"column":2},"end":{"line":784,"column":19}},"364":{"start":{"line":785,"column":2},"end":{"line":785,"column":18}},"365":{"start":{"line":786,"column":2},"end":{"line":786,"column":13}},"366":{"start":{"line":787,"column":2},"end":{"line":787,"column":25}},"367":{"start":{"line":791,"column":2},"end":{"line":832,"column":3}},"368":{"start":{"line":792,"column":4},"end":{"line":800,"column":5}},"369":{"start":{"line":793,"column":6},"end":{"line":793,"column":57}},"370":{"start":{"line":795,"column":6},"end":{"line":795,"column":42}},"371":{"start":{"line":796,"column":6},"end":{"line":796,"column":41}},"372":{"start":{"line":798,"column":6},"end":{"line":798,"column":34}},"373":{"start":{"line":799,"column":6},"end":{"line":799,"column":25}},"374":{"start":{"line":802,"column":4},"end":{"line":807,"column":5}},"375":{"start":{"line":803,"column":6},"end":{"line":806,"column":7}},"376":{"start":{"line":804,"column":8},"end":{"line":804,"column":63}},"377":{"start":{"line":805,"column":8},"end":{"line":805,"column":65}},"378":{"start":{"line":812,"column":9},"end":{"line":832,"column":3}},"379":{"start":{"line":813,"column":4},"end":{"line":813,"column":32}},"380":{"start":{"line":814,"column":4},"end":{"line":814,"column":23}},"381":{"start":{"line":815,"column":4},"end":{"line":815,"column":54}},"382":{"start":{"line":816,"column":4},"end":{"line":816,"column":50}},"383":{"start":{"line":818,"column":4},"end":{"line":827,"column":5}},"384":{"start":{"line":819,"column":6},"end":{"line":819,"column":75}},"385":{"start":{"line":819,"column":66},"end":{"line":819,"column":75}},"386":{"start":{"line":821,"column":6},"end":{"line":821,"column":61}},"387":{"start":{"line":822,"column":6},"end":{"line":826,"column":7}},"388":{"start":{"line":823,"column":8},"end":{"line":823,"column":70}},"389":{"start":{"line":824,"column":13},"end":{"line":826,"column":7}},"390":{"start":{"line":825,"column":8},"end":{"line":825,"column":65}},"391":{"start":{"line":831,"column":4},"end":{"line":831,"column":75}},"392":{"start":{"line":834,"column":2},"end":{"line":834,"column":16}},"393":{"start":{"line":837,"column":0},"end":{"line":881,"column":2}},"394":{"start":{"line":840,"column":2},"end":{"line":840,"column":18}},"395":{"start":{"line":842,"column":2},"end":{"line":871,"column":3}},"396":{"start":{"line":846,"column":6},"end":{"line":846,"column":30}},"397":{"start":{"line":847,"column":6},"end":{"line":847,"column":12}},"398":{"start":{"line":850,"column":6},"end":{"line":850,"column":31}},"399":{"start":{"line":851,"column":6},"end":{"line":851,"column":12}},"400":{"start":{"line":854,"column":6},"end":{"line":854,"column":32}},"401":{"start":{"line":855,"column":6},"end":{"line":855,"column":12}},"402":{"start":{"line":858,"column":6},"end":{"line":858,"column":33}},"403":{"start":{"line":859,"column":6},"end":{"line":859,"column":12}},"404":{"start":{"line":862,"column":6},"end":{"line":862,"column":31}},"405":{"start":{"line":863,"column":6},"end":{"line":863,"column":12}},"406":{"start":{"line":866,"column":6},"end":{"line":866,"column":34}},"407":{"start":{"line":867,"column":6},"end":{"line":867,"column":12}},"408":{"start":{"line":870,"column":6},"end":{"line":870,"column":67}},"409":{"start":{"line":874,"column":2},"end":{"line":877,"column":3}},"410":{"start":{"line":875,"column":4},"end":{"line":875,"column":50}},"411":{"start":{"line":876,"column":4},"end":{"line":876,"column":48}},"412":{"start":{"line":880,"column":2},"end":{"line":880,"column":21}},"413":{"start":{"line":887,"column":0},"end":{"line":950,"column":2}},"414":{"start":{"line":888,"column":2},"end":{"line":888,"column":18}},"415":{"start":{"line":891,"column":2},"end":{"line":895,"column":3}},"416":{"start":{"line":892,"column":4},"end":{"line":894,"column":7}},"417":{"start":{"line":893,"column":6},"end":{"line":893,"column":35}},"418":{"start":{"line":897,"column":2},"end":{"line":897,"column":23}},"419":{"start":{"line":900,"column":2},"end":{"line":946,"column":3}},"420":{"start":{"line":902,"column":4},"end":{"line":902,"column":74}},"421":{"start":{"line":904,"column":4},"end":{"line":907,"column":5}},"422":{"start":{"line":905,"column":6},"end":{"line":905,"column":44}},"423":{"start":{"line":906,"column":6},"end":{"line":906,"column":38}},"424":{"start":{"line":911,"column":9},"end":{"line":946,"column":3}},"425":{"start":{"line":914,"column":4},"end":{"line":914,"column":48}},"426":{"start":{"line":915,"column":4},"end":{"line":915,"column":36}},"427":{"start":{"line":918,"column":9},"end":{"line":946,"column":3}},"428":{"start":{"line":921,"column":4},"end":{"line":921,"column":30}},"429":{"start":{"line":922,"column":4},"end":{"line":922,"column":46}},"430":{"start":{"line":923,"column":4},"end":{"line":923,"column":36}},"431":{"start":{"line":926,"column":9},"end":{"line":946,"column":3}},"432":{"start":{"line":927,"column":4},"end":{"line":929,"column":7}},"433":{"start":{"line":928,"column":6},"end":{"line":928,"column":39}},"434":{"start":{"line":932,"column":9},"end":{"line":946,"column":3}},"435":{"start":{"line":933,"column":4},"end":{"line":935,"column":7}},"436":{"start":{"line":934,"column":6},"end":{"line":934,"column":39}},"437":{"start":{"line":936,"column":4},"end":{"line":936,"column":39}},"438":{"start":{"line":940,"column":4},"end":{"line":942,"column":7}},"439":{"start":{"line":941,"column":6},"end":{"line":941,"column":39}},"440":{"start":{"line":943,"column":4},"end":{"line":945,"column":7}},"441":{"start":{"line":944,"column":6},"end":{"line":944,"column":34}},"442":{"start":{"line":949,"column":2},"end":{"line":949,"column":15}},"443":{"start":{"line":952,"column":0},"end":{"line":982,"column":2}},"444":{"start":{"line":953,"column":2},"end":{"line":953,"column":13}},"445":{"start":{"line":955,"column":2},"end":{"line":955,"column":73}},"446":{"start":{"line":956,"column":2},"end":{"line":959,"column":3}},"447":{"start":{"line":957,"column":4},"end":{"line":957,"column":61}},"448":{"start":{"line":958,"column":4},"end":{"line":958,"column":47}},"449":{"start":{"line":962,"column":2},"end":{"line":979,"column":3}},"450":{"start":{"line":963,"column":4},"end":{"line":963,"column":37}},"451":{"start":{"line":970,"column":4},"end":{"line":970,"column":20}},"452":{"start":{"line":971,"column":4},"end":{"line":975,"column":5}},"453":{"start":{"line":972,"column":6},"end":{"line":972,"column":25}},"454":{"start":{"line":974,"column":6},"end":{"line":974,"column":73}},"455":{"start":{"line":976,"column":4},"end":{"line":976,"column":62}},"456":{"start":{"line":977,"column":4},"end":{"line":977,"column":59}},"457":{"start":{"line":977,"column":33},"end":{"line":977,"column":57}},"458":{"start":{"line":978,"column":4},"end":{"line":978,"column":43}},"459":{"start":{"line":981,"column":2},"end":{"line":981,"column":16}},"460":{"start":{"line":984,"column":0},"end":{"line":1008,"column":2}},"461":{"start":{"line":986,"column":2},"end":{"line":986,"column":31}},"462":{"start":{"line":987,"column":2},"end":{"line":1007,"column":3}},"463":{"start":{"line":989,"column":4},"end":{"line":992,"column":5}},"464":{"start":{"line":991,"column":6},"end":{"line":991,"column":13}},"465":{"start":{"line":994,"column":4},"end":{"line":996,"column":5}},"466":{"start":{"line":995,"column":6},"end":{"line":995,"column":13}},"467":{"start":{"line":998,"column":4},"end":{"line":1004,"column":5}},"468":{"start":{"line":999,"column":6},"end":{"line":999,"column":45}},"469":{"start":{"line":1000,"column":11},"end":{"line":1004,"column":5}},"470":{"start":{"line":1001,"column":6},"end":{"line":1001,"column":36}},"471":{"start":{"line":1003,"column":6},"end":{"line":1003,"column":49}},"472":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":82}},"473":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":47}},"474":{"start":{"line":1023,"column":0},"end":{"line":1027,"column":2}},"475":{"start":{"line":1024,"column":2},"end":{"line":1024,"column":39}},"476":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":79}},"477":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":32}},"478":{"start":{"line":1038,"column":0},"end":{"line":1060,"column":2}},"479":{"start":{"line":1039,"column":2},"end":{"line":1039,"column":39}},"480":{"start":{"line":1042,"column":2},"end":{"line":1042,"column":79}},"481":{"start":{"line":1045,"column":2},"end":{"line":1045,"column":38}},"482":{"start":{"line":1048,"column":2},"end":{"line":1053,"column":5}},"483":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":46}},"484":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":47}},"485":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":54}},"486":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":27}},"487":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":33}},"488":{"start":{"line":1059,"column":2},"end":{"line":1059,"column":32}},"489":{"start":{"line":1062,"column":0},"end":{"line":1066,"column":2}},"490":{"start":{"line":1063,"column":2},"end":{"line":1063,"column":43}},"491":{"start":{"line":1064,"column":2},"end":{"line":1064,"column":58}},"492":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":19}},"493":{"start":{"line":1081,"column":0},"end":{"line":1083,"column":2}},"494":{"start":{"line":1082,"column":2},"end":{"line":1082,"column":41}},"495":{"start":{"line":1094,"column":0},"end":{"line":1096,"column":2}},"496":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":40}},"497":{"start":{"line":1098,"column":0},"end":{"line":1105,"column":2}},"498":{"start":{"line":1099,"column":2},"end":{"line":1101,"column":3}},"499":{"start":{"line":1100,"column":4},"end":{"line":1100,"column":28}},"500":{"start":{"line":1102,"column":2},"end":{"line":1104,"column":3}},"501":{"start":{"line":1103,"column":4},"end":{"line":1103,"column":31}},"502":{"start":{"line":1118,"column":0},"end":{"line":1128,"column":2}},"503":{"start":{"line":1119,"column":2},"end":{"line":1125,"column":3}},"504":{"start":{"line":1120,"column":4},"end":{"line":1124,"column":5}},"505":{"start":{"line":1121,"column":6},"end":{"line":1121,"column":34}},"506":{"start":{"line":1123,"column":6},"end":{"line":1123,"column":50}},"507":{"start":{"line":1127,"column":2},"end":{"line":1127,"column":23}},"508":{"start":{"line":1140,"column":0},"end":{"line":1159,"column":2}},"509":{"start":{"line":1141,"column":2},"end":{"line":1141,"column":14}},"510":{"start":{"line":1142,"column":2},"end":{"line":1149,"column":3}},"511":{"start":{"line":1143,"column":4},"end":{"line":1145,"column":5}},"512":{"start":{"line":1144,"column":6},"end":{"line":1144,"column":16}},"513":{"start":{"line":1146,"column":4},"end":{"line":1146,"column":26}},"514":{"start":{"line":1148,"column":4},"end":{"line":1148,"column":18}},"515":{"start":{"line":1150,"column":2},"end":{"line":1150,"column":64}},"516":{"start":{"line":1152,"column":2},"end":{"line":1154,"column":3}},"517":{"start":{"line":1153,"column":4},"end":{"line":1153,"column":25}},"518":{"start":{"line":1156,"column":2},"end":{"line":1156,"column":34}},"519":{"start":{"line":1158,"column":2},"end":{"line":1158,"column":27}},"520":{"start":{"line":1161,"column":0},"end":{"line":1161,"column":32}}},"branchMap":{"1":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"2":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":19}},{"start":{"line":60,"column":23},"end":{"line":60,"column":25}}]},"3":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":25},"end":{"line":62,"column":44}},{"start":{"line":62,"column":48},"end":{"line":62,"column":52}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":29},"end":{"line":63,"column":52}},{"start":{"line":63,"column":56},"end":{"line":63,"column":60}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":25},"end":{"line":64,"column":44}},{"start":{"line":64,"column":48},"end":{"line":64,"column":51}}]},"6":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":29},"end":{"line":65,"column":52}},{"start":{"line":65,"column":56},"end":{"line":65,"column":63}}]},"7":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":58}},{"start":{"line":68,"column":62},"end":{"line":68,"column":79}}]},"8":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":20},"end":{"line":69,"column":35}},{"start":{"line":69,"column":39},"end":{"line":69,"column":41}}]},"9":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":18},"end":{"line":71,"column":30}},{"start":{"line":71,"column":34},"end":{"line":71,"column":64}}]},"10":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":25},"end":{"line":79,"column":47}},{"start":{"line":79,"column":51},"end":{"line":79,"column":64}}]},"11":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":29},"end":{"line":80,"column":56}},{"start":{"line":80,"column":60},"end":{"line":80,"column":64}}]},"12":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"13":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"14":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":61},"end":{"line":110,"column":64}},{"start":{"line":110,"column":67},"end":{"line":110,"column":86}}]},"15":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"16":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"17":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"18":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"19":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"20":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":19}},{"start":{"line":161,"column":23},"end":{"line":161,"column":25}}]},"21":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":25},"end":{"line":164,"column":44}},{"start":{"line":164,"column":48},"end":{"line":164,"column":62}}]},"22":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"23":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":21}},{"start":{"line":167,"column":25},"end":{"line":167,"column":46}}]},"24":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":14},"end":{"line":170,"column":27}},{"start":{"line":170,"column":31},"end":{"line":170,"column":44}}]},"25":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"26":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"27":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]},"28":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":10}},{"start":{"line":238,"column":14},"end":{"line":238,"column":29}}]},"29":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":9},"end":{"line":262,"column":13}},{"start":{"line":262,"column":17},"end":{"line":262,"column":38}}]},"30":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":14},"end":{"line":265,"column":23}},{"start":{"line":265,"column":27},"end":{"line":265,"column":42}}]},"31":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":268,"column":4}},{"start":{"line":268,"column":4},"end":{"line":268,"column":4}}]},"32":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":6}},{"start":{"line":269,"column":6},"end":{"line":269,"column":6}}]},"33":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":8},"end":{"line":270,"column":8}},{"start":{"line":270,"column":8},"end":{"line":270,"column":8}}]},"34":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":10},"end":{"line":272,"column":10}},{"start":{"line":272,"column":10},"end":{"line":272,"column":10}}]},"35":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"36":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":2},"end":{"line":307,"column":2}},{"start":{"line":307,"column":2},"end":{"line":307,"column":2}}]},"37":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":6}},{"start":{"line":329,"column":6},"end":{"line":329,"column":6}}]},"38":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":4},"end":{"line":346,"column":4}},{"start":{"line":346,"column":4},"end":{"line":346,"column":4}}]},"39":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":6},"end":{"line":357,"column":6}},{"start":{"line":357,"column":6},"end":{"line":357,"column":6}}]},"40":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"41":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":6},"end":{"line":381,"column":6}},{"start":{"line":381,"column":6},"end":{"line":381,"column":6}}]},"42":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":10},"end":{"line":383,"column":10}},{"start":{"line":383,"column":10},"end":{"line":383,"column":10}}]},"43":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":4},"end":{"line":393,"column":4}},{"start":{"line":393,"column":4},"end":{"line":393,"column":4}}]},"44":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":6},"end":{"line":412,"column":6}},{"start":{"line":412,"column":6},"end":{"line":412,"column":6}}]},"45":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":6},"end":{"line":416,"column":6}},{"start":{"line":416,"column":6},"end":{"line":416,"column":6}}]},"46":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":8},"end":{"line":423,"column":8}},{"start":{"line":423,"column":8},"end":{"line":423,"column":8}}]},"47":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":12},"end":{"line":423,"column":26}},{"start":{"line":423,"column":30},"end":{"line":423,"column":64}}]},"48":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":31},"end":{"line":426,"column":51}},{"start":{"line":426,"column":55},"end":{"line":426,"column":59}}]},"49":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":10},"end":{"line":429,"column":10}},{"start":{"line":429,"column":10},"end":{"line":429,"column":10}}]},"50":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":15},"end":{"line":435,"column":15}},{"start":{"line":435,"column":15},"end":{"line":435,"column":15}}]},"51":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":4},"end":{"line":469,"column":4}},{"start":{"line":469,"column":4},"end":{"line":469,"column":4}}]},"52":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":6},"end":{"line":492,"column":6}},{"start":{"line":492,"column":6},"end":{"line":492,"column":6}}]},"53":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":6},"end":{"line":524,"column":6}},{"start":{"line":524,"column":6},"end":{"line":524,"column":6}}]},"54":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":6},"end":{"line":527,"column":6}},{"start":{"line":527,"column":6},"end":{"line":527,"column":6}}]},"55":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":8},"end":{"line":528,"column":8}},{"start":{"line":528,"column":8},"end":{"line":528,"column":8}}]},"56":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":4},"end":{"line":536,"column":4}},{"start":{"line":536,"column":4},"end":{"line":536,"column":4}}]},"57":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":6},"end":{"line":540,"column":6}},{"start":{"line":540,"column":6},"end":{"line":540,"column":6}}]},"58":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"59":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":2},"end":{"line":567,"column":2}},{"start":{"line":567,"column":2},"end":{"line":567,"column":2}}]},"60":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":4},"end":{"line":573,"column":4}},{"start":{"line":573,"column":4},"end":{"line":573,"column":4}}]},"61":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":6},"end":{"line":574,"column":6}},{"start":{"line":574,"column":6},"end":{"line":574,"column":6}}]},"62":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":4},"end":{"line":583,"column":4}},{"start":{"line":583,"column":4},"end":{"line":583,"column":4}}]},"63":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":6},"end":{"line":589,"column":6}},{"start":{"line":589,"column":6},"end":{"line":589,"column":6}}]},"64":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":10},"end":{"line":592,"column":10}},{"start":{"line":592,"column":10},"end":{"line":592,"column":10}}]},"65":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":4},"end":{"line":613,"column":4}},{"start":{"line":613,"column":4},"end":{"line":613,"column":4}}]},"66":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":2},"end":{"line":650,"column":2}},{"start":{"line":650,"column":2},"end":{"line":650,"column":2}}]},"67":{"line":651,"type":"switch","locations":[{"start":{"line":653,"column":6},"end":{"line":653,"column":21}},{"start":{"line":654,"column":6},"end":{"line":656,"column":14}},{"start":{"line":657,"column":6},"end":{"line":659,"column":14}},{"start":{"line":660,"column":6},"end":{"line":662,"column":14}},{"start":{"line":663,"column":6},"end":{"line":664,"column":44}}]},"68":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"69":{"line":698,"type":"binary-expr","locations":[{"start":{"line":698,"column":8},"end":{"line":698,"column":15}},{"start":{"line":698,"column":19},"end":{"line":698,"column":37}}]},"70":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":2},"end":{"line":714,"column":2}},{"start":{"line":714,"column":2},"end":{"line":714,"column":2}}]},"71":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":2},"end":{"line":719,"column":2}},{"start":{"line":719,"column":2},"end":{"line":719,"column":2}}]},"72":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":2},"end":{"line":724,"column":2}},{"start":{"line":724,"column":2},"end":{"line":724,"column":2}}]},"73":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":2},"end":{"line":729,"column":2}},{"start":{"line":729,"column":2},"end":{"line":729,"column":2}}]},"74":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":2},"end":{"line":734,"column":2}},{"start":{"line":734,"column":2},"end":{"line":734,"column":2}}]},"75":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":4},"end":{"line":738,"column":4}},{"start":{"line":738,"column":4},"end":{"line":738,"column":4}}]},"76":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":2},"end":{"line":749,"column":2}},{"start":{"line":749,"column":2},"end":{"line":749,"column":2}}]},"77":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":9},"end":{"line":759,"column":9}},{"start":{"line":759,"column":9},"end":{"line":759,"column":9}}]},"78":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":2},"end":{"line":766,"column":2}},{"start":{"line":766,"column":2},"end":{"line":766,"column":2}}]},"79":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":4},"end":{"line":767,"column":4}},{"start":{"line":767,"column":4},"end":{"line":767,"column":4}}]},"80":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":2},"end":{"line":772,"column":2}},{"start":{"line":772,"column":2},"end":{"line":772,"column":2}}]},"81":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":2},"end":{"line":791,"column":2}},{"start":{"line":791,"column":2},"end":{"line":791,"column":2}}]},"82":{"line":791,"type":"binary-expr","locations":[{"start":{"line":791,"column":6},"end":{"line":791,"column":41}},{"start":{"line":791,"column":45},"end":{"line":791,"column":80}}]},"83":{"line":792,"type":"if","locations":[{"start":{"line":792,"column":4},"end":{"line":792,"column":4}},{"start":{"line":792,"column":4},"end":{"line":792,"column":4}}]},"84":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":6},"end":{"line":803,"column":6}},{"start":{"line":803,"column":6},"end":{"line":803,"column":6}}]},"85":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":9},"end":{"line":812,"column":9}},{"start":{"line":812,"column":9},"end":{"line":812,"column":9}}]},"86":{"line":812,"type":"binary-expr","locations":[{"start":{"line":812,"column":13},"end":{"line":812,"column":48}},{"start":{"line":812,"column":52},"end":{"line":812,"column":86}}]},"87":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":6},"end":{"line":819,"column":6}},{"start":{"line":819,"column":6},"end":{"line":819,"column":6}}]},"88":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":6},"end":{"line":822,"column":6}},{"start":{"line":822,"column":6},"end":{"line":822,"column":6}}]},"89":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":13},"end":{"line":824,"column":13}},{"start":{"line":824,"column":13},"end":{"line":824,"column":13}}]},"90":{"line":842,"type":"switch","locations":[{"start":{"line":844,"column":4},"end":{"line":844,"column":19}},{"start":{"line":845,"column":4},"end":{"line":847,"column":12}},{"start":{"line":849,"column":4},"end":{"line":851,"column":12}},{"start":{"line":853,"column":4},"end":{"line":855,"column":12}},{"start":{"line":857,"column":4},"end":{"line":859,"column":12}},{"start":{"line":861,"column":4},"end":{"line":863,"column":12}},{"start":{"line":865,"column":4},"end":{"line":867,"column":12}},{"start":{"line":869,"column":4},"end":{"line":870,"column":67}}]},"91":{"line":874,"type":"if","locations":[{"start":{"line":874,"column":2},"end":{"line":874,"column":2}},{"start":{"line":874,"column":2},"end":{"line":874,"column":2}}]},"92":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":2},"end":{"line":891,"column":2}},{"start":{"line":891,"column":2},"end":{"line":891,"column":2}}]},"93":{"line":891,"type":"binary-expr","locations":[{"start":{"line":891,"column":6},"end":{"line":891,"column":31}},{"start":{"line":891,"column":35},"end":{"line":891,"column":63}}]},"94":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":2},"end":{"line":900,"column":2}},{"start":{"line":900,"column":2},"end":{"line":900,"column":2}}]},"95":{"line":900,"type":"binary-expr","locations":[{"start":{"line":900,"column":6},"end":{"line":900,"column":29}},{"start":{"line":900,"column":33},"end":{"line":900,"column":60}}]},"96":{"line":902,"type":"cond-expr","locations":[{"start":{"line":902,"column":36},"end":{"line":902,"column":51}},{"start":{"line":902,"column":54},"end":{"line":902,"column":73}}]},"97":{"line":904,"type":"if","locations":[{"start":{"line":904,"column":4},"end":{"line":904,"column":4}},{"start":{"line":904,"column":4},"end":{"line":904,"column":4}}]},"98":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":9},"end":{"line":911,"column":9}},{"start":{"line":911,"column":9},"end":{"line":911,"column":9}}]},"99":{"line":911,"type":"binary-expr","locations":[{"start":{"line":911,"column":13},"end":{"line":911,"column":36}},{"start":{"line":911,"column":40},"end":{"line":911,"column":71}},{"start":{"line":912,"column":4},"end":{"line":912,"column":37}}]},"100":{"line":914,"type":"binary-expr","locations":[{"start":{"line":914,"column":13},"end":{"line":914,"column":32}},{"start":{"line":914,"column":36},"end":{"line":914,"column":46}}]},"101":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":9},"end":{"line":918,"column":9}},{"start":{"line":918,"column":9},"end":{"line":918,"column":9}}]},"102":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":13},"end":{"line":918,"column":36}},{"start":{"line":919,"column":9},"end":{"line":919,"column":22}},{"start":{"line":919,"column":26},"end":{"line":919,"column":53}}]},"103":{"line":926,"type":"if","locations":[{"start":{"line":926,"column":9},"end":{"line":926,"column":9}},{"start":{"line":926,"column":9},"end":{"line":926,"column":9}}]},"104":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":9},"end":{"line":932,"column":9}},{"start":{"line":932,"column":9},"end":{"line":932,"column":9}}]},"105":{"line":956,"type":"if","locations":[{"start":{"line":956,"column":2},"end":{"line":956,"column":2}},{"start":{"line":956,"column":2},"end":{"line":956,"column":2}}]},"106":{"line":971,"type":"if","locations":[{"start":{"line":971,"column":4},"end":{"line":971,"column":4}},{"start":{"line":971,"column":4},"end":{"line":971,"column":4}}]},"107":{"line":974,"type":"binary-expr","locations":[{"start":{"line":974,"column":13},"end":{"line":974,"column":29}},{"start":{"line":974,"column":33},"end":{"line":974,"column":56}},{"start":{"line":974,"column":60},"end":{"line":974,"column":72}}]},"108":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":4},"end":{"line":977,"column":4}},{"start":{"line":977,"column":4},"end":{"line":977,"column":4}}]},"109":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":2},"end":{"line":987,"column":2}},{"start":{"line":987,"column":2},"end":{"line":987,"column":2}}]},"110":{"line":989,"type":"if","locations":[{"start":{"line":989,"column":4},"end":{"line":989,"column":4}},{"start":{"line":989,"column":4},"end":{"line":989,"column":4}}]},"111":{"line":989,"type":"binary-expr","locations":[{"start":{"line":989,"column":9},"end":{"line":989,"column":36}},{"start":{"line":989,"column":40},"end":{"line":989,"column":62}},{"start":{"line":990,"column":8},"end":{"line":990,"column":37}}]},"112":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":4},"end":{"line":994,"column":4}},{"start":{"line":994,"column":4},"end":{"line":994,"column":4}}]},"113":{"line":994,"type":"binary-expr","locations":[{"start":{"line":994,"column":8},"end":{"line":994,"column":35}},{"start":{"line":994,"column":39},"end":{"line":994,"column":62}},{"start":{"line":994,"column":66},"end":{"line":994,"column":80}}]},"114":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":4},"end":{"line":998,"column":4}},{"start":{"line":998,"column":4},"end":{"line":998,"column":4}}]},"115":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":11},"end":{"line":1000,"column":11}},{"start":{"line":1000,"column":11},"end":{"line":1000,"column":11}}]},"116":{"line":1099,"type":"if","locations":[{"start":{"line":1099,"column":2},"end":{"line":1099,"column":2}},{"start":{"line":1099,"column":2},"end":{"line":1099,"column":2}}]},"117":{"line":1102,"type":"if","locations":[{"start":{"line":1102,"column":2},"end":{"line":1102,"column":2}},{"start":{"line":1102,"column":2},"end":{"line":1102,"column":2}}]},"118":{"line":1119,"type":"if","locations":[{"start":{"line":1119,"column":2},"end":{"line":1119,"column":2}},{"start":{"line":1119,"column":2},"end":{"line":1119,"column":2}}]},"119":{"line":1120,"type":"if","locations":[{"start":{"line":1120,"column":4},"end":{"line":1120,"column":4}},{"start":{"line":1120,"column":4},"end":{"line":1120,"column":4}}]},"120":{"line":1142,"type":"if","locations":[{"start":{"line":1142,"column":2},"end":{"line":1142,"column":2}},{"start":{"line":1142,"column":2},"end":{"line":1142,"column":2}}]},"121":{"line":1143,"type":"if","locations":[{"start":{"line":1143,"column":4},"end":{"line":1143,"column":4}},{"start":{"line":1143,"column":4},"end":{"line":1143,"column":4}}]},"122":{"line":1152,"type":"if","locations":[{"start":{"line":1152,"column":2},"end":{"line":1152,"column":2}},{"start":{"line":1152,"column":2},"end":{"line":1152,"column":2}}]}},"code":["/**"," * class ArgumentParser"," *"," * Object for parsing command line strings into js objects."," *"," * Inherited from [[ActionContainer]]"," **/","'use strict';","","var util    = require('util');","var format  = require('util').format;","var Path    = require('path');","var sprintf = require('sprintf-js').sprintf;","","// Constants","var c = require('./const');","","var $$ = require('./utils');","","var ActionContainer = require('./action_container');","","// Errors","var argumentErrorHelper = require('./argument/error');","","var HelpFormatter = require('./help/formatter');","","var Namespace = require('./namespace');","","","/**"," * new ArgumentParser(options)"," *"," * Create a new ArgumentParser object."," *"," * ##### Options:"," * - `prog`  The name of the program (default: Path.basename(process.argv[1]))"," * - `usage`  A usage message (default: auto-generated from arguments)"," * - `description`  A description of what the program does"," * - `epilog`  Text following the argument descriptions"," * - `parents`  Parsers whose arguments should be copied into this one"," * - `formatterClass`  HelpFormatter class for printing help messages"," * - `prefixChars`  Characters that prefix optional arguments"," * - `fromfilePrefixChars` Characters that prefix files containing additional arguments"," * - `argumentDefault`  The default value for all arguments"," * - `addHelp`  Add a -h/-help option"," * - `conflictHandler`  Specifies how to handle conflicting argument names"," * - `debug`  Enable debug mode. Argument errors throw exception in"," *   debug mode and process.exit in normal. Used for development and"," *   testing (default: false)"," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#argumentparser-objects"," **/","function ArgumentParser(options) {","  if (!(this instanceof ArgumentParser)) {","    return new ArgumentParser(options);","  }","  var self = this;","  options = options || {};","","  options.description = (options.description || null);","  options.argumentDefault = (options.argumentDefault || null);","  options.prefixChars = (options.prefixChars || '-');","  options.conflictHandler = (options.conflictHandler || 'error');","  ActionContainer.call(this, options);","","  options.addHelp = typeof options.addHelp === 'undefined' || !!options.addHelp;","  options.parents = options.parents || [];","  // default program name","  options.prog = (options.prog || Path.basename(process.argv[1]));","  this.prog = options.prog;","  this.usage = options.usage;","  this.epilog = options.epilog;","  this.version = options.version;","","  this.debug = (options.debug === true);","","  this.formatterClass = (options.formatterClass || HelpFormatter);","  this.fromfilePrefixChars = options.fromfilePrefixChars || null;","  this._positionals = this.addArgumentGroup({ title: 'Positional arguments' });","  this._optionals = this.addArgumentGroup({ title: 'Optional arguments' });","  this._subparsers = null;","","  // register types","  function FUNCTION_IDENTITY(o) {","    return o;","  }","  this.register('type', 'auto', FUNCTION_IDENTITY);","  this.register('type', null, FUNCTION_IDENTITY);","  this.register('type', 'int', function (x) {","    var result = parseInt(x, 10);","    if (isNaN(result)) {","      throw new Error(x + ' is not a valid integer.');","    }","    return result;","  });","  this.register('type', 'float', function (x) {","    var result = parseFloat(x);","    if (isNaN(result)) {","      throw new Error(x + ' is not a valid float.');","    }","    return result;","  });","  this.register('type', 'string', function (x) {","    return '' + x;","  });","","  // add help and version arguments if necessary","  var defaultPrefix = (this.prefixChars.indexOf('-') > -1) ? '-' : this.prefixChars[0];","  if (options.addHelp) {","    this.addArgument(","      [ defaultPrefix + 'h', defaultPrefix + defaultPrefix + 'help' ],","      {","        action: 'help',","        defaultValue: c.SUPPRESS,","        help: 'Show this help message and exit.'","      }","    );","  }","  if (typeof this.version !== 'undefined') {","    this.addArgument(","      [ defaultPrefix + 'v', defaultPrefix + defaultPrefix + 'version' ],","      {","        action: 'version',","        version: this.version,","        defaultValue: c.SUPPRESS,","        help: \"Show program's version number and exit.\"","      }","    );","  }","","  // add parent arguments and defaults","  options.parents.forEach(function (parent) {","    self._addContainerActions(parent);","    if (typeof parent._defaults !== 'undefined') {","      for (var defaultKey in parent._defaults) {","        if (parent._defaults.hasOwnProperty(defaultKey)) {","          self._defaults[defaultKey] = parent._defaults[defaultKey];","        }","      }","    }","  });","}","","util.inherits(ArgumentParser, ActionContainer);","","/**"," * ArgumentParser#addSubparsers(options) -> [[ActionSubparsers]]"," * - options (object): hash of options see [[ActionSubparsers.new]]"," *"," * See also [subcommands][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#sub-commands"," **/","ArgumentParser.prototype.addSubparsers = function (options) {","  if (this._subparsers) {","    this.error('Cannot have multiple subparser arguments.');","  }","","  options = options || {};","  options.debug = (this.debug === true);","  options.optionStrings = [];","  options.parserClass = (options.parserClass || ArgumentParser);","","","  if (!!options.title || !!options.description) {","","    this._subparsers = this.addArgumentGroup({","      title: (options.title || 'subcommands'),","      description: options.description","    });","    delete options.title;","    delete options.description;","","  } else {","    this._subparsers = this._positionals;","  }","","  // prog defaults to the usage message of this parser, skipping","  // optional arguments and with no \"usage:\" prefix","  if (!options.prog) {","    var formatter = this._getFormatter();","    var positionals = this._getPositionalActions();","    var groups = this._mutuallyExclusiveGroups;","    formatter.addUsage(this.usage, positionals, groups, '');","    options.prog = formatter.formatHelp().trim();","  }","","  // create the parsers action and add it to the positionals list","  var ParsersClass = this._popActionClass(options, 'parsers');","  var action = new ParsersClass(options);","  this._subparsers._addAction(action);","","  // return the created parsers action","  return action;","};","","ArgumentParser.prototype._addAction = function (action) {","  if (action.isOptional()) {","    this._optionals._addAction(action);","  } else {","    this._positionals._addAction(action);","  }","  return action;","};","","ArgumentParser.prototype._getOptionalActions = function () {","  return this._actions.filter(function (action) {","    return action.isOptional();","  });","};","","ArgumentParser.prototype._getPositionalActions = function () {","  return this._actions.filter(function (action) {","    return action.isPositional();","  });","};","","","/**"," * ArgumentParser#parseArgs(args, namespace) -> Namespace|Object"," * - args (array): input elements"," * - namespace (Namespace|Object): result object"," *"," * Parsed args and throws error if some arguments are not recognized"," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#the-parse-args-method"," **/","ArgumentParser.prototype.parseArgs = function (args, namespace) {","  var argv;","  var result = this.parseKnownArgs(args, namespace);","","  args = result[0];","  argv = result[1];","  if (argv && argv.length > 0) {","    this.error(","      format('Unrecognized arguments: %s.', argv.join(' '))","    );","  }","  return args;","};","","/**"," * ArgumentParser#parseKnownArgs(args, namespace) -> array"," * - args (array): input options"," * - namespace (Namespace|Object): result object"," *"," * Parse known arguments and return tuple of result object"," * and unknown args"," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#partial-parsing"," **/","ArgumentParser.prototype.parseKnownArgs = function (args, namespace) {","  var self = this;","","  // args default to the system args","  args = args || process.argv.slice(2);","","  // default Namespace built from parser defaults","  namespace = namespace || new Namespace();","","  self._actions.forEach(function (action) {","    if (action.dest !== c.SUPPRESS) {","      if (!$$.has(namespace, action.dest)) {","        if (action.defaultValue !== c.SUPPRESS) {","          var defaultValue = action.defaultValue;","          if (typeof action.defaultValue === 'string') {","            defaultValue = self._getValue(action, defaultValue);","          }","          namespace[action.dest] = defaultValue;","        }","      }","    }","  });","","  Object.keys(self._defaults).forEach(function (dest) {","    namespace[dest] = self._defaults[dest];","  });","","  // parse the arguments and exit if there are any errors","  try {","    var res = this._parseKnownArgs(args, namespace);","","    namespace = res[0];","    args = res[1];","    if ($$.has(namespace, c._UNRECOGNIZED_ARGS_ATTR)) {","      args = $$.arrayUnion(args, namespace[c._UNRECOGNIZED_ARGS_ATTR]);","      delete namespace[c._UNRECOGNIZED_ARGS_ATTR];","    }","    return [ namespace, args ];","  } catch (e) {","    this.error(e);","  }","};","","ArgumentParser.prototype._parseKnownArgs = function (argStrings, namespace) {","  var self = this;","","  var extras = [];","","  // replace arg strings that are file references","  if (this.fromfilePrefixChars !== null) {","    argStrings = this._readArgsFromFiles(argStrings);","  }","  // map all mutually exclusive arguments to the other arguments","  // they can't occur with","  // Python has 'conflicts = action_conflicts.setdefault(mutex_action, [])'","  // though I can't conceive of a way in which an action could be a member","  // of two different mutually exclusive groups.","","  function actionHash(action) {","    // some sort of hashable key for this action","    // action itself cannot be a key in actionConflicts","    // I think getName() (join of optionStrings) is unique enough","    return action.getName();","  }","","  var conflicts, key;","  var actionConflicts = {};","","  this._mutuallyExclusiveGroups.forEach(function (mutexGroup) {","    mutexGroup._groupActions.forEach(function (mutexAction, i, groupActions) {","      key = actionHash(mutexAction);","      if (!$$.has(actionConflicts, key)) {","        actionConflicts[key] = [];","      }","      conflicts = actionConflicts[key];","      conflicts.push.apply(conflicts, groupActions.slice(0, i));","      conflicts.push.apply(conflicts, groupActions.slice(i + 1));","    });","  });","","  // find all option indices, and determine the arg_string_pattern","  // which has an 'O' if there is an option at an index,","  // an 'A' if there is an argument, or a '-' if there is a '--'","  var optionStringIndices = {};","","  var argStringPatternParts = [];","","  argStrings.forEach(function (argString, argStringIndex) {","    if (argString === '--') {","      argStringPatternParts.push('-');","      while (argStringIndex < argStrings.length) {","        argStringPatternParts.push('A');","        argStringIndex++;","      }","    } else {","      // otherwise, add the arg to the arg strings","      // and note the index if it was an option","      var pattern;","      var optionTuple = self._parseOptional(argString);","      if (!optionTuple) {","        pattern = 'A';","      } else {","        optionStringIndices[argStringIndex] = optionTuple;","        pattern = 'O';","      }","      argStringPatternParts.push(pattern);","    }","  });","  var argStringsPattern = argStringPatternParts.join('');","","  var seenActions = [];","  var seenNonDefaultActions = [];","","","  function takeAction(action, argumentStrings, optionString) {","    seenActions.push(action);","    var argumentValues = self._getValues(action, argumentStrings);","","    // error if this argument is not allowed with other previously","    // seen arguments, assuming that actions that use the default","    // value don't really count as \"present\"","    if (argumentValues !== action.defaultValue) {","      seenNonDefaultActions.push(action);","      if (actionConflicts[actionHash(action)]) {","        actionConflicts[actionHash(action)].forEach(function (actionConflict) {","          if (seenNonDefaultActions.indexOf(actionConflict) >= 0) {","            throw argumentErrorHelper(","              action,","              format('Not allowed with argument \"%s\".', actionConflict.getName())","            );","          }","        });","      }","    }","","    if (argumentValues !== c.SUPPRESS) {","      action.call(self, namespace, argumentValues, optionString);","    }","  }","","  function consumeOptional(startIndex) {","    // get the optional identified at this index","    var optionTuple = optionStringIndices[startIndex];","    var action = optionTuple[0];","    var optionString = optionTuple[1];","    var explicitArg = optionTuple[2];","","    // identify additional optionals in the same arg string","    // (e.g. -xyz is the same as -x -y -z if no args are required)","    var actionTuples = [];","","    var args, argCount, start, stop;","","    for (;;) {","      if (!action) {","        extras.push(argStrings[startIndex]);","        return startIndex + 1;","      }","      if (explicitArg) {","        argCount = self._matchArgument(action, 'A');","","        // if the action is a single-dash option and takes no","        // arguments, try to parse more single-dash options out","        // of the tail of the option string","        var chars = self.prefixChars;","        if (argCount === 0 && chars.indexOf(optionString[1]) < 0) {","          actionTuples.push([ action, [], optionString ]);","          optionString = optionString[0] + explicitArg[0];","          var newExplicitArg = explicitArg.slice(1) || null;","          var optionalsMap = self._optionStringActions;","","          if (Object.keys(optionalsMap).indexOf(optionString) >= 0) {","            action = optionalsMap[optionString];","            explicitArg = newExplicitArg;","          } else {","            throw argumentErrorHelper(action, sprintf('ignored explicit argument %r', explicitArg));","          }","        } else if (argCount === 1) {","          // if the action expect exactly one argument, we've","          // successfully matched the option; exit the loop","          stop = startIndex + 1;","          args = [ explicitArg ];","          actionTuples.push([ action, args, optionString ]);","          break;","        } else {","          // error if a double-dash option did not use the","          // explicit argument","          throw argumentErrorHelper(action, sprintf('ignored explicit argument %r', explicitArg));","        }","      } else {","        // if there is no explicit argument, try to match the","        // optional's string arguments with the following strings","        // if successful, exit the loop","","        start = startIndex + 1;","        var selectedPatterns = argStringsPattern.substr(start);","","        argCount = self._matchArgument(action, selectedPatterns);","        stop = start + argCount;","","","        args = argStrings.slice(start, stop);","","        actionTuples.push([ action, args, optionString ]);","        break;","      }","","    }","","    // add the Optional to the list and return the index at which","    // the Optional's string args stopped","    if (actionTuples.length < 1) {","      throw new Error('length should be > 0');","    }","    for (var i = 0; i < actionTuples.length; i++) {","      takeAction.apply(self, actionTuples[i]);","    }","    return stop;","  }","","  // the list of Positionals left to be parsed; this is modified","  // by consume_positionals()","  var positionals = self._getPositionalActions();","","  function consumePositionals(startIndex) {","    // match as many Positionals as possible","    var selectedPattern = argStringsPattern.substr(startIndex);","    var argCounts = self._matchArgumentsPartial(positionals, selectedPattern);","","    // slice off the appropriate arg strings for each Positional","    // and add the Positional and its args to the list","    for (var i = 0; i < positionals.length; i++) {","      var action = positionals[i];","      var argCount = argCounts[i];","      if (typeof argCount === 'undefined') {","        continue;","      }","      var args = argStrings.slice(startIndex, startIndex + argCount);","","      startIndex += argCount;","      takeAction(action, args);","    }","","    // slice off the Positionals that we just parsed and return the","    // index at which the Positionals' string args stopped","    positionals = positionals.slice(argCounts.length);","    return startIndex;","  }","","  // consume Positionals and Optionals alternately, until we have","  // passed the last option string","  var startIndex = 0;","  var position;","","  var maxOptionStringIndex = -1;","","  Object.keys(optionStringIndices).forEach(function (position) {","    maxOptionStringIndex = Math.max(maxOptionStringIndex, parseInt(position, 10));","  });","","  var positionalsEndIndex, nextOptionStringIndex;","","  while (startIndex <= maxOptionStringIndex) {","    // consume any Positionals preceding the next option","    nextOptionStringIndex = null;","    for (position in optionStringIndices) {","      if (!optionStringIndices.hasOwnProperty(position)) { continue; }","","      position = parseInt(position, 10);","      if (position >= startIndex) {","        if (nextOptionStringIndex !== null) {","          nextOptionStringIndex = Math.min(nextOptionStringIndex, position);","        } else {","          nextOptionStringIndex = position;","        }","      }","    }","","    if (startIndex !== nextOptionStringIndex) {","      positionalsEndIndex = consumePositionals(startIndex);","      // only try to parse the next optional if we didn't consume","      // the option string during the positionals parsing","      if (positionalsEndIndex > startIndex) {","        startIndex = positionalsEndIndex;","        continue;","      } else {","        startIndex = positionalsEndIndex;","      }","    }","","    // if we consumed all the positionals we could and we're not","    // at the index of an option string, there were extra arguments","    if (!optionStringIndices[startIndex]) {","      var strings = argStrings.slice(startIndex, nextOptionStringIndex);","      extras = extras.concat(strings);","      startIndex = nextOptionStringIndex;","    }","    // consume the next optional and any arguments for it","    startIndex = consumeOptional(startIndex);","  }","","  // consume any positionals following the last Optional","  var stopIndex = consumePositionals(startIndex);","","  // if we didn't consume all the argument strings, there were extras","  extras = extras.concat(argStrings.slice(stopIndex));","","  // if we didn't use all the Positional objects, there were too few","  // arg strings supplied.","  if (positionals.length > 0) {","    self.error('too few arguments');","  }","","  // make sure all required actions were present","  self._actions.forEach(function (action) {","    if (action.required) {","      if (seenActions.indexOf(action) < 0) {","        self.error(format('Argument \"%s\" is required', action.getName()));","      }","    }","  });","","  // make sure all required groups have one option present","  var actionUsed = false;","  self._mutuallyExclusiveGroups.forEach(function (group) {","    if (group.required) {","      actionUsed = group._groupActions.some(function (action) {","        return seenNonDefaultActions.indexOf(action) !== -1;","      });","","      // if no actions were used, report the error","      if (!actionUsed) {","        var names = [];","        group._groupActions.forEach(function (action) {","          if (action.help !== c.SUPPRESS) {","            names.push(action.getName());","          }","        });","        names = names.join(' ');","        var msg = 'one of the arguments ' + names + ' is required';","        self.error(msg);","      }","    }","  });","","  // return the updated namespace and the extra arguments","  return [ namespace, extras ];","};","","ArgumentParser.prototype._readArgsFromFiles = function (argStrings) {","  // expand arguments referencing files","  var self = this;","  var fs = require('fs');","  var newArgStrings = [];","  argStrings.forEach(function (argString) {","    if (self.fromfilePrefixChars.indexOf(argString[0]) < 0) {","      // for regular arguments, just add them back into the list","      newArgStrings.push(argString);","    } else {","      // replace arguments referencing files with the file content","      try {","        var argstrs = [];","        var filename = argString.slice(1);","        var content = fs.readFileSync(filename, 'utf8');","        content = content.trim().split('\\n');","        content.forEach(function (argLine) {","          self.convertArgLineToArgs(argLine).forEach(function (arg) {","            argstrs.push(arg);","          });","          argstrs = self._readArgsFromFiles(argstrs);","        });","        newArgStrings.push.apply(newArgStrings, argstrs);","      } catch (error) {","        return self.error(error.message);","      }","    }","  });","  return newArgStrings;","};","","ArgumentParser.prototype.convertArgLineToArgs = function (argLine) {","  return [ argLine ];","};","","ArgumentParser.prototype._matchArgument = function (action, regexpArgStrings) {","","  // match the pattern for this action to the arg strings","  var regexpNargs = new RegExp('^' + this._getNargsPattern(action));","  var matches = regexpArgStrings.match(regexpNargs);","  var message;","","  // throw an exception if we weren't able to find a match","  if (!matches) {","    switch (action.nargs) {","      /*eslint-disable no-undefined*/","      case undefined:","      case null:","        message = 'Expected one argument.';","        break;","      case c.OPTIONAL:","        message = 'Expected at most one argument.';","        break;","      case c.ONE_OR_MORE:","        message = 'Expected at least one argument.';","        break;","      default:","        message = 'Expected %s argument(s)';","    }","","    throw argumentErrorHelper(","      action,","      format(message, action.nargs)","    );","  }","  // return the number of arguments matched","  return matches[1].length;","};","","ArgumentParser.prototype._matchArgumentsPartial = function (actions, regexpArgStrings) {","  // progressively shorten the actions list by slicing off the","  // final actions until we find a match","  var self = this;","  var result = [];","  var actionSlice, pattern, matches;","  var i, j;","","  function getLength(string) {","    return string.length;","  }","","  for (i = actions.length; i > 0; i--) {","    pattern = '';","    actionSlice = actions.slice(0, i);","    for (j = 0; j < actionSlice.length; j++) {","      pattern += self._getNargsPattern(actionSlice[j]);","    }","","    pattern = new RegExp('^' + pattern);","    matches = regexpArgStrings.match(pattern);","","    if (matches && matches.length > 0) {","      // need only groups","      matches = matches.splice(1);","      result = result.concat(matches.map(getLength));","      break;","    }","  }","","  // return the list of arg string counts","  return result;","};","","ArgumentParser.prototype._parseOptional = function (argString) {","  var action, optionString, argExplicit, optionTuples;","","  // if it's an empty string, it was meant to be a positional","  if (!argString) {","    return null;","  }","","  // if it doesn't start with a prefix, it was meant to be positional","  if (this.prefixChars.indexOf(argString[0]) < 0) {","    return null;","  }","","  // if the option string is present in the parser, return the action","  if (this._optionStringActions[argString]) {","    return [ this._optionStringActions[argString], argString, null ];","  }","","  // if it's just a single character, it was meant to be positional","  if (argString.length === 1) {","    return null;","  }","","  // if the option string before the \"=\" is present, return the action","  if (argString.indexOf('=') >= 0) {","    optionString = argString.split('=', 1)[0];","    argExplicit = argString.slice(optionString.length + 1);","","    if (this._optionStringActions[optionString]) {","      action = this._optionStringActions[optionString];","      return [ action, optionString, argExplicit ];","    }","  }","","  // search through all possible prefixes of the option string","  // and all actions in the parser for possible interpretations","  optionTuples = this._getOptionTuples(argString);","","  // if multiple actions match, the option string was ambiguous","  if (optionTuples.length > 1) {","    var optionStrings = optionTuples.map(function (optionTuple) {","      return optionTuple[1];","    });","    this.error(format(","          'Ambiguous option: \"%s\" could match %s.',","          argString, optionStrings.join(', ')","    ));","  // if exactly one action matched, this segmentation is good,","  // so return the parsed action","  } else if (optionTuples.length === 1) {","    return optionTuples[0];","  }","","  // if it was not found as an option, but it looks like a negative","  // number, it was meant to be positional","  // unless there are negative-number-like options","  if (argString.match(this._regexpNegativeNumber)) {","    if (!this._hasNegativeNumberOptionals.some(Boolean)) {","      return null;","    }","  }","  // if it contains a space, it was meant to be a positional","  if (argString.search(' ') >= 0) {","    return null;","  }","","  // it was meant to be an optional but there is no such option","  // in this parser (though it might be a valid option in a subparser)","  return [ null, argString, null ];","};","","ArgumentParser.prototype._getOptionTuples = function (optionString) {","  var result = [];","  var chars = this.prefixChars;","  var optionPrefix;","  var argExplicit;","  var action;","  var actionOptionString;","","  // option strings starting with two prefix characters are only split at","  // the '='","  if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) >= 0) {","    if (optionString.indexOf('=') >= 0) {","      var optionStringSplit = optionString.split('=', 1);","","      optionPrefix = optionStringSplit[0];","      argExplicit = optionStringSplit[1];","    } else {","      optionPrefix = optionString;","      argExplicit = null;","    }","","    for (actionOptionString in this._optionStringActions) {","      if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {","        action = this._optionStringActions[actionOptionString];","        result.push([ action, actionOptionString, argExplicit ]);","      }","    }","","  // single character options can be concatenated with their arguments","  // but multiple character options always have to have their argument","  // separate","  } else if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) < 0) {","    optionPrefix = optionString;","    argExplicit = null;","    var optionPrefixShort = optionString.substr(0, 2);","    var argExplicitShort = optionString.substr(2);","","    for (actionOptionString in this._optionStringActions) {","      if (!$$.has(this._optionStringActions, actionOptionString)) continue;","","      action = this._optionStringActions[actionOptionString];","      if (actionOptionString === optionPrefixShort) {","        result.push([ action, actionOptionString, argExplicitShort ]);","      } else if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {","        result.push([ action, actionOptionString, argExplicit ]);","      }","    }","","  // shouldn't ever get here","  } else {","    throw new Error(format('Unexpected option string: %s.', optionString));","  }","  // return the collected option tuples","  return result;","};","","ArgumentParser.prototype._getNargsPattern = function (action) {","  // in all examples below, we have to allow for '--' args","  // which are represented as '-' in the pattern","  var regexpNargs;","","  switch (action.nargs) {","    // the default (null) is assumed to be a single argument","    case undefined:","    case null:","      regexpNargs = '(-*A-*)';","      break;","    // allow zero or more arguments","    case c.OPTIONAL:","      regexpNargs = '(-*A?-*)';","      break;","    // allow zero or more arguments","    case c.ZERO_OR_MORE:","      regexpNargs = '(-*[A-]*)';","      break;","    // allow one or more arguments","    case c.ONE_OR_MORE:","      regexpNargs = '(-*A[A-]*)';","      break;","    // allow any number of options or arguments","    case c.REMAINDER:","      regexpNargs = '([-AO]*)';","      break;","    // allow one argument followed by any number of options or arguments","    case c.PARSER:","      regexpNargs = '(-*A[-AO]*)';","      break;","    // all others should be integers","    default:","      regexpNargs = '(-*' + $$.repeat('-*A', action.nargs) + '-*)';","  }","","  // if this is an optional action, -- is not allowed","  if (action.isOptional()) {","    regexpNargs = regexpNargs.replace(/-\\*/g, '');","    regexpNargs = regexpNargs.replace(/-/g, '');","  }","","  // return the pattern","  return regexpNargs;","};","","//","// Value conversion methods","//","","ArgumentParser.prototype._getValues = function (action, argStrings) {","  var self = this;","","  // for everything but PARSER args, strip out '--'","  if (action.nargs !== c.PARSER && action.nargs !== c.REMAINDER) {","    argStrings = argStrings.filter(function (arrayElement) {","      return arrayElement !== '--';","    });","  }","","  var value, argString;","","  // optional argument produces a default when not present","  if (argStrings.length === 0 && action.nargs === c.OPTIONAL) {","","    value = (action.isOptional()) ? action.constant : action.defaultValue;","","    if (typeof (value) === 'string') {","      value = this._getValue(action, value);","      this._checkValue(action, value);","    }","","  // when nargs='*' on a positional, if there were no command-line","  // args, use the default if it is anything other than None","  } else if (argStrings.length === 0 && action.nargs === c.ZERO_OR_MORE &&","    action.optionStrings.length === 0) {","","    value = (action.defaultValue || argStrings);","    this._checkValue(action, value);","","  // single argument or optional argument produces a single value","  } else if (argStrings.length === 1 &&","        (!action.nargs || action.nargs === c.OPTIONAL)) {","","    argString = argStrings[0];","    value = this._getValue(action, argString);","    this._checkValue(action, value);","","  // REMAINDER arguments convert all values, checking none","  } else if (action.nargs === c.REMAINDER) {","    value = argStrings.map(function (v) {","      return self._getValue(action, v);","    });","","  // PARSER arguments convert all values, but check only the first","  } else if (action.nargs === c.PARSER) {","    value = argStrings.map(function (v) {","      return self._getValue(action, v);","    });","    this._checkValue(action, value[0]);","","  // all other types of nargs produce a list","  } else {","    value = argStrings.map(function (v) {","      return self._getValue(action, v);","    });","    value.forEach(function (v) {","      self._checkValue(action, v);","    });","  }","","  // return the converted value","  return value;","};","","ArgumentParser.prototype._getValue = function (action, argString) {","  var result;","","  var typeFunction = this._registryGet('type', action.type, action.type);","  if (typeof typeFunction !== 'function') {","    var message = format('%s is not callable', typeFunction);","    throw argumentErrorHelper(action, message);","  }","","  // convert the value to the appropriate type","  try {","    result = typeFunction(argString);","","    // ArgumentTypeErrors indicate errors","    // If action.type is not a registered string, it is a function","    // Try to deduce its name for inclusion in the error message","    // Failing that, include the error message it raised.","  } catch (e) {","    var name = null;","    if (typeof action.type === 'string') {","      name = action.type;","    } else {","      name = action.type.name || action.type.displayName || '<function>';","    }","    var msg = format('Invalid %s value: %s', name, argString);","    if (name === '<function>') { msg += '\\n' + e.message; }","    throw argumentErrorHelper(action, msg);","  }","  // return the converted value","  return result;","};","","ArgumentParser.prototype._checkValue = function (action, value) {","  // converted value must be one of the choices (if specified)","  var choices = action.choices;","  if (choices) {","    // choise for argument can by array or string","    if ((typeof choices === 'string' || Array.isArray(choices)) &&","        choices.indexOf(value) !== -1) {","      return;","    }","    // choise for subparsers can by only hash","    if (typeof choices === 'object' && !Array.isArray(choices) && choices[value]) {","      return;","    }","","    if (typeof choices === 'string') {","      choices = choices.split('').join(', ');","    } else if (Array.isArray(choices)) {","      choices =  choices.join(', ');","    } else {","      choices =  Object.keys(choices).join(', ');","    }","    var message = format('Invalid choice: %s (choose from [%s])', value, choices);","    throw argumentErrorHelper(action, message);","  }","};","","//","// Help formatting methods","//","","/**"," * ArgumentParser#formatUsage -> string"," *"," * Return usage string"," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#printing-help"," **/","ArgumentParser.prototype.formatUsage = function () {","  var formatter = this._getFormatter();","  formatter.addUsage(this.usage, this._actions, this._mutuallyExclusiveGroups);","  return formatter.formatHelp();","};","","/**"," * ArgumentParser#formatHelp -> string"," *"," * Return help"," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#printing-help"," **/","ArgumentParser.prototype.formatHelp = function () {","  var formatter = this._getFormatter();","","  // usage","  formatter.addUsage(this.usage, this._actions, this._mutuallyExclusiveGroups);","","  // description","  formatter.addText(this.description);","","  // positionals, optionals and user-defined groups","  this._actionGroups.forEach(function (actionGroup) {","    formatter.startSection(actionGroup.title);","    formatter.addText(actionGroup.description);","    formatter.addArguments(actionGroup._groupActions);","    formatter.endSection();","  });","","  // epilog","  formatter.addText(this.epilog);","","  // determine help from format above","  return formatter.formatHelp();","};","","ArgumentParser.prototype._getFormatter = function () {","  var FormatterClass = this.formatterClass;","  var formatter = new FormatterClass({ prog: this.prog });","  return formatter;","};","","//","//  Print functions","//","","/**"," * ArgumentParser#printUsage() -> Void"," *"," * Print usage"," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#printing-help"," **/","ArgumentParser.prototype.printUsage = function () {","  this._printMessage(this.formatUsage());","};","","/**"," * ArgumentParser#printHelp() -> Void"," *"," * Print help"," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#printing-help"," **/","ArgumentParser.prototype.printHelp = function () {","  this._printMessage(this.formatHelp());","};","","ArgumentParser.prototype._printMessage = function (message, stream) {","  if (!stream) {","    stream = process.stdout;","  }","  if (message) {","    stream.write('' + message);","  }","};","","//","//  Exit functions","//","","/**"," * ArgumentParser#exit(status=0, message) -> Void"," * - status (int): exit status"," * - message (string): message"," *"," * Print message in stderr/stdout and exit program"," **/","ArgumentParser.prototype.exit = function (status, message) {","  if (message) {","    if (status === 0) {","      this._printMessage(message);","    } else {","      this._printMessage(message, process.stderr);","    }","  }","","  process.exit(status);","};","","/**"," * ArgumentParser#error(message) -> Void"," * - err (Error|string): message"," *"," * Error method Prints a usage message incorporating the message to stderr and"," * exits. If you override this in a subclass,"," * it should not return -- it should"," * either exit or throw an exception."," *"," **/","ArgumentParser.prototype.error = function (err) {","  var message;","  if (err instanceof Error) {","    if (this.debug === true) {","      throw err;","    }","    message = err.message;","  } else {","    message = err;","  }","  var msg = format('%s: error: %s', this.prog, message) + c.EOL;","","  if (this.debug === true) {","    throw new Error(msg);","  }","","  this.printUsage(process.stderr);","","  return this.exit(2, msg);","};","","module.exports = ArgumentParser;",""],"l":{"10":1,"11":1,"12":1,"13":1,"16":1,"18":1,"20":1,"23":1,"25":1,"27":1,"55":1,"56":0,"57":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"77":0,"79":0,"80":0,"81":0,"82":0,"83":0,"86":1,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"98":0,"99":0,"100":0,"101":0,"103":0,"105":0,"106":0,"110":0,"111":0,"112":0,"121":0,"122":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"146":1,"156":1,"157":0,"158":0,"161":0,"162":0,"163":0,"164":0,"167":0,"169":0,"173":0,"174":0,"177":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"191":0,"192":0,"193":0,"196":0,"199":1,"200":0,"201":0,"203":0,"205":0,"208":1,"209":0,"210":0,"214":1,"215":0,"216":0,"232":1,"233":0,"234":0,"236":0,"237":0,"238":0,"239":0,"243":0,"258":1,"259":0,"262":0,"265":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"275":0,"281":0,"282":0,"286":0,"287":0,"289":0,"290":0,"291":0,"292":0,"293":0,"295":0,"297":0,"301":1,"302":0,"304":0,"307":0,"308":0,"316":1,"320":0,"323":0,"324":0,"326":0,"327":0,"328":0,"329":0,"330":0,"332":0,"333":0,"334":0,"341":0,"343":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"355":0,"356":0,"357":0,"358":0,"360":0,"361":0,"363":0,"366":0,"368":0,"369":0,"372":1,"373":0,"374":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"393":0,"394":0,"398":1,"400":0,"401":0,"402":0,"403":0,"407":0,"409":0,"411":0,"412":0,"413":0,"414":0,"416":0,"417":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"429":0,"430":0,"431":0,"433":0,"435":0,"438":0,"439":0,"440":0,"441":0,"445":0,"452":0,"453":0,"455":0,"456":0,"459":0,"461":0,"462":0,"469":0,"470":0,"472":0,"473":0,"475":0,"480":0,"482":1,"484":0,"485":0,"489":0,"490":0,"491":0,"492":0,"493":0,"495":0,"497":0,"498":0,"503":0,"504":0,"509":0,"510":0,"512":0,"514":0,"515":0,"518":0,"520":0,"522":0,"523":0,"524":0,"526":0,"527":0,"528":0,"529":0,"531":0,"536":0,"537":0,"540":0,"541":0,"542":0,"544":0,"550":0,"551":0,"552":0,"553":0,"556":0,"560":0,"563":0,"567":0,"568":0,"572":0,"573":0,"574":0,"575":0,"581":0,"582":0,"583":0,"584":0,"585":0,"589":0,"590":0,"591":0,"592":0,"593":0,"596":0,"597":0,"598":0,"604":0,"607":1,"609":0,"610":0,"611":0,"612":0,"613":0,"615":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"627":0,"629":0,"631":0,"635":0,"638":1,"639":0,"642":1,"645":0,"646":0,"647":0,"650":0,"651":0,"655":0,"656":0,"658":0,"659":0,"661":0,"662":0,"664":0,"667":0,"673":0,"676":1,"679":0,"680":0,"681":0,"682":0,"684":1,"685":0,"688":0,"689":0,"690":0,"691":0,"692":0,"695":0,"696":0,"698":0,"700":0,"701":0,"702":0,"707":0,"710":1,"711":0,"714":0,"715":0,"719":0,"720":0,"724":0,"725":0,"729":0,"730":0,"734":0,"735":0,"736":0,"738":0,"739":0,"740":0,"746":0,"749":0,"750":0,"751":0,"753":0,"759":0,"760":0,"766":0,"767":0,"768":0,"772":0,"773":0,"778":0,"781":1,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"791":0,"792":0,"793":0,"795":0,"796":0,"798":0,"799":0,"802":0,"803":0,"804":0,"805":0,"812":0,"813":0,"814":0,"815":0,"816":0,"818":0,"819":0,"821":0,"822":0,"823":0,"824":0,"825":0,"831":0,"834":0,"837":1,"840":0,"842":0,"846":0,"847":0,"850":0,"851":0,"854":0,"855":0,"858":0,"859":0,"862":0,"863":0,"866":0,"867":0,"870":0,"874":0,"875":0,"876":0,"880":0,"887":1,"888":0,"891":0,"892":0,"893":0,"897":0,"900":0,"902":0,"904":0,"905":0,"906":0,"911":0,"914":0,"915":0,"918":0,"921":0,"922":0,"923":0,"926":0,"927":0,"928":0,"932":0,"933":0,"934":0,"936":0,"940":0,"941":0,"943":0,"944":0,"949":0,"952":1,"953":0,"955":0,"956":0,"957":0,"958":0,"962":0,"963":0,"970":0,"971":0,"972":0,"974":0,"976":0,"977":0,"978":0,"981":0,"984":1,"986":0,"987":0,"989":0,"991":0,"994":0,"995":0,"998":0,"999":0,"1000":0,"1001":0,"1003":0,"1005":0,"1006":0,"1023":1,"1024":0,"1025":0,"1026":0,"1038":1,"1039":0,"1042":0,"1045":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1056":0,"1059":0,"1062":1,"1063":0,"1064":0,"1065":0,"1081":1,"1082":0,"1094":1,"1095":0,"1098":1,"1099":0,"1100":0,"1102":0,"1103":0,"1118":1,"1119":0,"1120":0,"1121":0,"1123":0,"1127":0,"1140":1,"1141":0,"1142":0,"1143":0,"1144":0,"1146":0,"1148":0,"1150":0,"1152":0,"1153":0,"1156":0,"1158":0,"1161":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/const.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/const.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":33}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":62}}},"branchMap":{},"code":["//","// Constants","//","","'use strict';","","module.exports.EOL = '\\n';","","module.exports.SUPPRESS = '==SUPPRESS==';","","module.exports.OPTIONAL = '?';","","module.exports.ZERO_OR_MORE = '*';","","module.exports.ONE_OR_MORE = '+';","","module.exports.PARSER = 'A...';","","module.exports.REMAINDER = '...';","","module.exports._UNRECOGNIZED_ARGS_ATTR = '_unrecognized_args';",""],"l":{"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/utils.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":1,"36":0,"37":0,"38":0,"39":1,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":37}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":21},"end":{"line":9,"column":37}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":20},"end":{"line":17,"column":42}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":21},"end":{"line":25,"column":36}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":21},"end":{"line":29,"column":33}}},"6":{"name":"has","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":23}}},"7":{"name":"(anonymous_7)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":38}}},"8":{"name":"(anonymous_8)","line":55,"loc":{"start":{"line":55,"column":18},"end":{"line":55,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":18}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":50}},"4":{"start":{"line":5,"column":34},"end":{"line":5,"column":48}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":16}},"6":{"start":{"line":9,"column":0},"end":{"line":15,"column":2}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":46}},"8":{"start":{"line":10,"column":31},"end":{"line":10,"column":44}},"9":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":40}},"11":{"start":{"line":12,"column":25},"end":{"line":12,"column":38}},"12":{"start":{"line":14,"column":2},"end":{"line":14,"column":14}},"13":{"start":{"line":17,"column":0},"end":{"line":23,"column":2}},"14":{"start":{"line":18,"column":2},"end":{"line":18,"column":16}},"15":{"start":{"line":19,"column":2},"end":{"line":19,"column":27}},"16":{"start":{"line":20,"column":2},"end":{"line":20,"column":60}},"17":{"start":{"line":20,"column":50},"end":{"line":20,"column":58}},"18":{"start":{"line":21,"column":2},"end":{"line":21,"column":56}},"19":{"start":{"line":21,"column":48},"end":{"line":21,"column":54}},"20":{"start":{"line":22,"column":2},"end":{"line":22,"column":35}},"21":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"22":{"start":{"line":26,"column":2},"end":{"line":26,"column":52}},"23":{"start":{"line":29,"column":0},"end":{"line":41,"column":2}},"24":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"25":{"start":{"line":31,"column":2},"end":{"line":39,"column":3}},"26":{"start":{"line":32,"column":4},"end":{"line":32,"column":27}},"27":{"start":{"line":33,"column":4},"end":{"line":38,"column":5}},"28":{"start":{"line":34,"column":6},"end":{"line":37,"column":7}},"29":{"start":{"line":35,"column":8},"end":{"line":35,"column":30}},"30":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"31":{"start":{"line":40,"column":2},"end":{"line":40,"column":16}},"32":{"start":{"line":43,"column":0},"end":{"line":45,"column":1}},"33":{"start":{"line":44,"column":2},"end":{"line":44,"column":56}},"34":{"start":{"line":47,"column":0},"end":{"line":47,"column":18}},"35":{"start":{"line":49,"column":0},"end":{"line":53,"column":2}},"36":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"37":{"start":{"line":51,"column":4},"end":{"line":51,"column":42}},"38":{"start":{"line":51,"column":23},"end":{"line":51,"column":40}},"39":{"start":{"line":55,"column":0},"end":{"line":57,"column":2}},"40":{"start":{"line":56,"column":2},"end":{"line":56,"column":34}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]}},"code":["'use strict';","","exports.repeat = function (str, num) {","  var result = '';","  for (var i = 0; i < num; i++) { result += str; }","  return result;","};","","exports.arrayEqual = function (a, b) {","  if (a.length !== b.length) { return false; }","  for (var i = 0; i < a.length; i++) {","    if (a[i] !== b[i]) { return false; }","  }","  return true;","};","","exports.trimChars = function (str, chars) {","  var start = 0;","  var end = str.length - 1;","  while (chars.indexOf(str.charAt(start)) >= 0) { start++; }","  while (chars.indexOf(str.charAt(end)) >= 0) { end--; }","  return str.slice(start, end + 1);","};","","exports.capitalize = function (str) {","  return str.charAt(0).toUpperCase() + str.slice(1);","};","","exports.arrayUnion = function () {","  var result = [];","  for (var i = 0, values = {}; i < arguments.length; i++) {","    var arr = arguments[i];","    for (var j = 0; j < arr.length; j++) {","      if (!values[arr[j]]) {","        values[arr[j]] = true;","        result.push(arr[j]);","      }","    }","  }","  return result;","};","","function has(obj, key) {","  return Object.prototype.hasOwnProperty.call(obj, key);","}","","exports.has = has;","","exports.extend = function (dest, src) {","  for (var i in src) {","    if (has(src, i)) { dest[i] = src[i]; }","  }","};","","exports.trimEnd = function (str) {","  return str.replace(/\\s+$/g, '');","};",""],"l":{"3":1,"4":0,"5":0,"6":0,"9":1,"10":0,"11":0,"12":0,"14":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"25":1,"26":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"40":0,"43":1,"44":0,"47":1,"49":1,"50":0,"51":0,"55":1,"56":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action_container.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action_container.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":1,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"ActionContainer","line":43,"loc":{"start":{"line":43,"column":39},"end":{"line":43,"column":73}}},"2":{"name":"(anonymous_2)","line":106,"loc":{"start":{"line":106,"column":37},"end":{"line":106,"column":76}}},"3":{"name":"(anonymous_3)","line":111,"loc":{"start":{"line":111,"column":41},"end":{"line":111,"column":86}}},"4":{"name":"(anonymous_4)","line":128,"loc":{"start":{"line":128,"column":40},"end":{"line":128,"column":59}}},"5":{"name":"(anonymous_5)","line":138,"loc":{"start":{"line":138,"column":24},"end":{"line":138,"column":42}}},"6":{"name":"(anonymous_6)","line":151,"loc":{"start":{"line":151,"column":39},"end":{"line":151,"column":55}}},"7":{"name":"(anonymous_7)","line":154,"loc":{"start":{"line":154,"column":24},"end":{"line":154,"column":42}}},"8":{"name":"(anonymous_8)","line":176,"loc":{"start":{"line":176,"column":40},"end":{"line":176,"column":65}}},"9":{"name":"(anonymous_9)","line":235,"loc":{"start":{"line":235,"column":45},"end":{"line":235,"column":64}}},"10":{"name":"(anonymous_10)","line":247,"loc":{"start":{"line":247,"column":54},"end":{"line":247,"column":73}}},"11":{"name":"(anonymous_11)","line":253,"loc":{"start":{"line":253,"column":39},"end":{"line":253,"column":57}}},"12":{"name":"(anonymous_12)","line":264,"loc":{"start":{"line":264,"column":31},"end":{"line":264,"column":55}}},"13":{"name":"(anonymous_13)","line":269,"loc":{"start":{"line":269,"column":31},"end":{"line":269,"column":55}}},"14":{"name":"(anonymous_14)","line":281,"loc":{"start":{"line":281,"column":42},"end":{"line":281,"column":60}}},"15":{"name":"(anonymous_15)","line":288,"loc":{"start":{"line":288,"column":49},"end":{"line":288,"column":70}}},"16":{"name":"(anonymous_16)","line":291,"loc":{"start":{"line":291,"column":29},"end":{"line":291,"column":46}}},"17":{"name":"actionHash","line":300,"loc":{"start":{"line":300,"column":2},"end":{"line":300,"column":30}}},"18":{"name":"(anonymous_18)","line":304,"loc":{"start":{"line":304,"column":34},"end":{"line":304,"column":51}}},"19":{"name":"(anonymous_19)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":50}}},"20":{"name":"(anonymous_20)","line":324,"loc":{"start":{"line":324,"column":45},"end":{"line":324,"column":62}}},"21":{"name":"(anonymous_21)","line":329,"loc":{"start":{"line":329,"column":32},"end":{"line":329,"column":50}}},"22":{"name":"(anonymous_22)","line":335,"loc":{"start":{"line":335,"column":29},"end":{"line":335,"column":47}}},"23":{"name":"(anonymous_23)","line":345,"loc":{"start":{"line":345,"column":43},"end":{"line":345,"column":68}}},"24":{"name":"(anonymous_24)","line":369,"loc":{"start":{"line":369,"column":41},"end":{"line":369,"column":66}}},"25":{"name":"(anonymous_25)","line":375,"loc":{"start":{"line":375,"column":15},"end":{"line":375,"column":39}}},"26":{"name":"(anonymous_26)","line":414,"loc":{"start":{"line":414,"column":44},"end":{"line":414,"column":77}}},"27":{"name":"(anonymous_27)","line":424,"loc":{"start":{"line":424,"column":40},"end":{"line":424,"column":52}}},"28":{"name":"(anonymous_28)","line":436,"loc":{"start":{"line":436,"column":43},"end":{"line":436,"column":61}}},"29":{"name":"(anonymous_29)","line":442,"loc":{"start":{"line":442,"column":31},"end":{"line":442,"column":55}}},"30":{"name":"(anonymous_30)","line":455,"loc":{"start":{"line":455,"column":49},"end":{"line":455,"column":83}}},"31":{"name":"(anonymous_31)","line":456,"loc":{"start":{"line":456,"column":37},"end":{"line":456,"column":53}}},"32":{"name":"(anonymous_32)","line":464,"loc":{"start":{"line":464,"column":51},"end":{"line":464,"column":85}}},"33":{"name":"(anonymous_33)","line":467,"loc":{"start":{"line":467,"column":25},"end":{"line":467,"column":41}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":63}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":53}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":55}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":48}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":54}},"14":{"start":{"line":29,"column":0},"end":{"line":29,"column":54}},"15":{"start":{"line":43,"column":0},"end":{"line":88,"column":2}},"16":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"17":{"start":{"line":46,"column":2},"end":{"line":46,"column":41}},"18":{"start":{"line":47,"column":2},"end":{"line":47,"column":49}},"19":{"start":{"line":48,"column":2},"end":{"line":48,"column":47}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":49}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":24}},"22":{"start":{"line":55,"column":2},"end":{"line":55,"column":45}},"23":{"start":{"line":56,"column":2},"end":{"line":56,"column":48}},"24":{"start":{"line":57,"column":2},"end":{"line":57,"column":61}},"25":{"start":{"line":58,"column":2},"end":{"line":58,"column":56}},"26":{"start":{"line":59,"column":2},"end":{"line":59,"column":58}},"27":{"start":{"line":60,"column":2},"end":{"line":60,"column":50}},"28":{"start":{"line":61,"column":2},"end":{"line":61,"column":63}},"29":{"start":{"line":62,"column":2},"end":{"line":62,"column":48}},"30":{"start":{"line":63,"column":2},"end":{"line":63,"column":46}},"31":{"start":{"line":64,"column":2},"end":{"line":64,"column":52}},"32":{"start":{"line":65,"column":2},"end":{"line":65,"column":55}},"33":{"start":{"line":68,"column":2},"end":{"line":68,"column":21}},"34":{"start":{"line":71,"column":2},"end":{"line":71,"column":21}},"35":{"start":{"line":72,"column":2},"end":{"line":72,"column":33}},"36":{"start":{"line":75,"column":2},"end":{"line":75,"column":26}},"37":{"start":{"line":76,"column":2},"end":{"line":76,"column":37}},"38":{"start":{"line":79,"column":2},"end":{"line":79,"column":22}},"39":{"start":{"line":83,"column":2},"end":{"line":83,"column":86}},"40":{"start":{"line":87,"column":2},"end":{"line":87,"column":40}},"41":{"start":{"line":91,"column":0},"end":{"line":91,"column":48}},"42":{"start":{"line":92,"column":0},"end":{"line":92,"column":61}},"43":{"start":{"line":106,"column":0},"end":{"line":109,"column":2}},"44":{"start":{"line":107,"column":2},"end":{"line":107,"column":72}},"45":{"start":{"line":108,"column":2},"end":{"line":108,"column":49}},"46":{"start":{"line":111,"column":0},"end":{"line":116,"column":2}},"47":{"start":{"line":112,"column":2},"end":{"line":114,"column":3}},"48":{"start":{"line":113,"column":4},"end":{"line":113,"column":24}},"49":{"start":{"line":115,"column":2},"end":{"line":115,"column":63}},"50":{"start":{"line":128,"column":0},"end":{"line":143,"column":2}},"51":{"start":{"line":129,"column":2},"end":{"line":129,"column":26}},"52":{"start":{"line":130,"column":2},"end":{"line":134,"column":3}},"53":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"54":{"start":{"line":132,"column":6},"end":{"line":132,"column":51}},"55":{"start":{"line":138,"column":2},"end":{"line":142,"column":5}},"56":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"57":{"start":{"line":140,"column":6},"end":{"line":140,"column":49}},"58":{"start":{"line":151,"column":0},"end":{"line":161,"column":2}},"59":{"start":{"line":152,"column":2},"end":{"line":152,"column":74}},"60":{"start":{"line":154,"column":2},"end":{"line":158,"column":5}},"61":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"62":{"start":{"line":156,"column":6},"end":{"line":156,"column":35}},"63":{"start":{"line":160,"column":2},"end":{"line":160,"column":16}},"64":{"start":{"line":176,"column":0},"end":{"line":227,"column":2}},"65":{"start":{"line":177,"column":2},"end":{"line":177,"column":14}},"66":{"start":{"line":178,"column":2},"end":{"line":178,"column":26}},"67":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"68":{"start":{"line":181,"column":4},"end":{"line":181,"column":20}},"69":{"start":{"line":183,"column":2},"end":{"line":185,"column":3}},"70":{"start":{"line":184,"column":4},"end":{"line":184,"column":85}},"71":{"start":{"line":186,"column":2},"end":{"line":188,"column":3}},"72":{"start":{"line":187,"column":4},"end":{"line":187,"column":72}},"73":{"start":{"line":192,"column":2},"end":{"line":201,"column":3}},"74":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"75":{"start":{"line":194,"column":6},"end":{"line":194,"column":69}},"76":{"start":{"line":196,"column":4},"end":{"line":196,"column":49}},"77":{"start":{"line":200,"column":4},"end":{"line":200,"column":47}},"78":{"start":{"line":204,"column":2},"end":{"line":211,"column":3}},"79":{"start":{"line":205,"column":4},"end":{"line":205,"column":28}},"80":{"start":{"line":206,"column":4},"end":{"line":210,"column":5}},"81":{"start":{"line":207,"column":6},"end":{"line":207,"column":50}},"82":{"start":{"line":208,"column":11},"end":{"line":210,"column":5}},"83":{"start":{"line":209,"column":6},"end":{"line":209,"column":50}},"84":{"start":{"line":214,"column":2},"end":{"line":214,"column":50}},"85":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"86":{"start":{"line":216,"column":4},"end":{"line":216,"column":65}},"87":{"start":{"line":218,"column":2},"end":{"line":218,"column":40}},"88":{"start":{"line":221,"column":2},"end":{"line":221,"column":73}},"89":{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},"90":{"start":{"line":223,"column":4},"end":{"line":223,"column":66}},"91":{"start":{"line":226,"column":2},"end":{"line":226,"column":33}},"92":{"start":{"line":235,"column":0},"end":{"line":239,"column":2}},"93":{"start":{"line":236,"column":2},"end":{"line":236,"column":47}},"94":{"start":{"line":237,"column":2},"end":{"line":237,"column":33}},"95":{"start":{"line":238,"column":2},"end":{"line":238,"column":15}},"96":{"start":{"line":247,"column":0},"end":{"line":251,"column":2}},"97":{"start":{"line":248,"column":2},"end":{"line":248,"column":56}},"98":{"start":{"line":249,"column":2},"end":{"line":249,"column":44}},"99":{"start":{"line":250,"column":2},"end":{"line":250,"column":15}},"100":{"start":{"line":253,"column":0},"end":{"line":279,"column":2}},"101":{"start":{"line":254,"column":2},"end":{"line":254,"column":18}},"102":{"start":{"line":257,"column":2},"end":{"line":257,"column":30}},"103":{"start":{"line":260,"column":2},"end":{"line":260,"column":29}},"104":{"start":{"line":261,"column":2},"end":{"line":261,"column":26}},"105":{"start":{"line":264,"column":2},"end":{"line":266,"column":5}},"106":{"start":{"line":265,"column":4},"end":{"line":265,"column":53}},"107":{"start":{"line":269,"column":2},"end":{"line":275,"column":5}},"108":{"start":{"line":270,"column":4},"end":{"line":274,"column":5}},"109":{"start":{"line":271,"column":6},"end":{"line":273,"column":7}},"110":{"start":{"line":272,"column":8},"end":{"line":272,"column":52}},"111":{"start":{"line":278,"column":2},"end":{"line":278,"column":16}},"112":{"start":{"line":281,"column":0},"end":{"line":286,"column":2}},"113":{"start":{"line":282,"column":2},"end":{"line":282,"column":50}},"114":{"start":{"line":283,"column":2},"end":{"line":285,"column":3}},"115":{"start":{"line":284,"column":4},"end":{"line":284,"column":41}},"116":{"start":{"line":288,"column":0},"end":{"line":343,"column":2}},"117":{"start":{"line":290,"column":2},"end":{"line":290,"column":25}},"118":{"start":{"line":291,"column":2},"end":{"line":296,"column":5}},"119":{"start":{"line":292,"column":4},"end":{"line":294,"column":5}},"120":{"start":{"line":293,"column":6},"end":{"line":293,"column":96}},"121":{"start":{"line":295,"column":4},"end":{"line":295,"column":39}},"122":{"start":{"line":299,"column":2},"end":{"line":299,"column":20}},"123":{"start":{"line":300,"column":2},"end":{"line":303,"column":3}},"124":{"start":{"line":302,"column":4},"end":{"line":302,"column":28}},"125":{"start":{"line":304,"column":2},"end":{"line":318,"column":11}},"126":{"start":{"line":307,"column":4},"end":{"line":312,"column":5}},"127":{"start":{"line":308,"column":6},"end":{"line":311,"column":9}},"128":{"start":{"line":315,"column":4},"end":{"line":317,"column":7}},"129":{"start":{"line":316,"column":6},"end":{"line":316,"column":64}},"130":{"start":{"line":323,"column":2},"end":{"line":323,"column":17}},"131":{"start":{"line":324,"column":2},"end":{"line":332,"column":11}},"132":{"start":{"line":325,"column":4},"end":{"line":327,"column":7}},"133":{"start":{"line":329,"column":4},"end":{"line":331,"column":7}},"134":{"start":{"line":330,"column":6},"end":{"line":330,"column":48}},"135":{"start":{"line":335,"column":2},"end":{"line":342,"column":5}},"136":{"start":{"line":336,"column":4},"end":{"line":336,"column":33}},"137":{"start":{"line":337,"column":4},"end":{"line":341,"column":5}},"138":{"start":{"line":338,"column":6},"end":{"line":338,"column":39}},"139":{"start":{"line":340,"column":6},"end":{"line":340,"column":30}},"140":{"start":{"line":345,"column":0},"end":{"line":367,"column":2}},"141":{"start":{"line":346,"column":2},"end":{"line":348,"column":3}},"142":{"start":{"line":347,"column":4},"end":{"line":347,"column":19}},"143":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"144":{"start":{"line":351,"column":4},"end":{"line":351,"column":74}},"145":{"start":{"line":356,"column":2},"end":{"line":358,"column":3}},"146":{"start":{"line":357,"column":4},"end":{"line":357,"column":28}},"147":{"start":{"line":359,"column":2},"end":{"line":361,"column":3}},"148":{"start":{"line":360,"column":4},"end":{"line":360,"column":28}},"149":{"start":{"line":364,"column":2},"end":{"line":364,"column":22}},"150":{"start":{"line":365,"column":2},"end":{"line":365,"column":29}},"151":{"start":{"line":366,"column":2},"end":{"line":366,"column":17}},"152":{"start":{"line":369,"column":0},"end":{"line":412,"column":2}},"153":{"start":{"line":370,"column":2},"end":{"line":370,"column":37}},"154":{"start":{"line":371,"column":2},"end":{"line":371,"column":25}},"155":{"start":{"line":372,"column":2},"end":{"line":372,"column":29}},"156":{"start":{"line":375,"column":2},"end":{"line":389,"column":5}},"157":{"start":{"line":377,"column":4},"end":{"line":382,"column":5}},"158":{"start":{"line":378,"column":6},"end":{"line":381,"column":9}},"159":{"start":{"line":385,"column":4},"end":{"line":385,"column":37}},"160":{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},"161":{"start":{"line":387,"column":6},"end":{"line":387,"column":43}},"162":{"start":{"line":392,"column":2},"end":{"line":392,"column":34}},"163":{"start":{"line":393,"column":2},"end":{"line":393,"column":22}},"164":{"start":{"line":395,"column":2},"end":{"line":405,"column":3}},"165":{"start":{"line":396,"column":4},"end":{"line":396,"column":94}},"166":{"start":{"line":397,"column":4},"end":{"line":397,"column":60}},"167":{"start":{"line":399,"column":4},"end":{"line":403,"column":5}},"168":{"start":{"line":400,"column":6},"end":{"line":402,"column":8}},"169":{"start":{"line":404,"column":4},"end":{"line":404,"column":35}},"170":{"start":{"line":408,"column":2},"end":{"line":408,"column":22}},"171":{"start":{"line":409,"column":2},"end":{"line":409,"column":40}},"172":{"start":{"line":411,"column":2},"end":{"line":411,"column":17}},"173":{"start":{"line":414,"column":0},"end":{"line":422,"column":2}},"174":{"start":{"line":415,"column":2},"end":{"line":415,"column":38}},"175":{"start":{"line":417,"column":2},"end":{"line":417,"column":48}},"176":{"start":{"line":418,"column":2},"end":{"line":418,"column":24}},"177":{"start":{"line":420,"column":2},"end":{"line":420,"column":64}},"178":{"start":{"line":421,"column":2},"end":{"line":421,"column":21}},"179":{"start":{"line":424,"column":0},"end":{"line":434,"column":2}},"180":{"start":{"line":425,"column":2},"end":{"line":425,"column":43}},"181":{"start":{"line":426,"column":2},"end":{"line":426,"column":73}},"182":{"start":{"line":427,"column":2},"end":{"line":427,"column":35}},"183":{"start":{"line":428,"column":2},"end":{"line":433,"column":3}},"184":{"start":{"line":429,"column":4},"end":{"line":429,"column":68}},"185":{"start":{"line":430,"column":4},"end":{"line":430,"column":25}},"186":{"start":{"line":432,"column":4},"end":{"line":432,"column":16}},"187":{"start":{"line":436,"column":0},"end":{"line":453,"column":2}},"188":{"start":{"line":437,"column":2},"end":{"line":437,"column":54}},"189":{"start":{"line":438,"column":2},"end":{"line":438,"column":29}},"190":{"start":{"line":442,"column":2},"end":{"line":447,"column":5}},"191":{"start":{"line":443,"column":4},"end":{"line":443,"column":58}},"192":{"start":{"line":444,"column":4},"end":{"line":446,"column":5}},"193":{"start":{"line":445,"column":6},"end":{"line":445,"column":62}},"194":{"start":{"line":449,"column":2},"end":{"line":452,"column":3}},"195":{"start":{"line":450,"column":4},"end":{"line":450,"column":45}},"196":{"start":{"line":451,"column":4},"end":{"line":451,"column":58}},"197":{"start":{"line":455,"column":0},"end":{"line":462,"column":2}},"198":{"start":{"line":456,"column":2},"end":{"line":456,"column":74}},"199":{"start":{"line":456,"column":55},"end":{"line":456,"column":70}},"200":{"start":{"line":457,"column":2},"end":{"line":457,"column":35}},"201":{"start":{"line":458,"column":2},"end":{"line":461,"column":4}},"202":{"start":{"line":464,"column":0},"end":{"line":482,"column":2}},"203":{"start":{"line":466,"column":2},"end":{"line":466,"column":18}},"204":{"start":{"line":467,"column":2},"end":{"line":481,"column":5}},"205":{"start":{"line":468,"column":4},"end":{"line":468,"column":31}},"206":{"start":{"line":469,"column":4},"end":{"line":469,"column":36}},"207":{"start":{"line":471,"column":4},"end":{"line":471,"column":66}},"208":{"start":{"line":472,"column":4},"end":{"line":474,"column":5}},"209":{"start":{"line":473,"column":6},"end":{"line":473,"column":51}},"210":{"start":{"line":475,"column":4},"end":{"line":475,"column":51}},"211":{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},"212":{"start":{"line":479,"column":6},"end":{"line":479,"column":67}}},"branchMap":{"1":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":19}},{"start":{"line":44,"column":23},"end":{"line":44,"column":25}}]},"2":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":21},"end":{"line":48,"column":40}},{"start":{"line":48,"column":44},"end":{"line":48,"column":46}}]},"3":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":35},"end":{"line":107,"column":65}},{"start":{"line":107,"column":69},"end":{"line":107,"column":71}}]},"4":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"5":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":9},"end":{"line":115,"column":46}},{"start":{"line":115,"column":50},"end":{"line":115,"column":62}}]},"6":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":19}},{"start":{"line":129,"column":23},"end":{"line":129,"column":25}}]},"7":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"8":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"9":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":46},"end":{"line":152,"column":66}},{"start":{"line":152,"column":69},"end":{"line":152,"column":73}}]},"10":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"11":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":28}},{"start":{"line":155,"column":32},"end":{"line":155,"column":62}}]},"12":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":19}},{"start":{"line":178,"column":23},"end":{"line":178,"column":25}}]},"13":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"14":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"15":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"16":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":6},"end":{"line":186,"column":33}},{"start":{"line":186,"column":37},"end":{"line":186,"column":59}}]},"17":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"18":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":6},"end":{"line":192,"column":11}},{"start":{"line":192,"column":15},"end":{"line":192,"column":32}},{"start":{"line":192,"column":36},"end":{"line":192,"column":76}}]},"19":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"20":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":12}},{"start":{"line":193,"column":16},"end":{"line":193,"column":30}}]},"21":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"22":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"23":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":11},"end":{"line":208,"column":11}},{"start":{"line":208,"column":11},"end":{"line":208,"column":11}}]},"24":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"25":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"26":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":270,"column":4}},{"start":{"line":270,"column":4},"end":{"line":270,"column":4}}]},"27":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":6},"end":{"line":271,"column":6}},{"start":{"line":271,"column":6},"end":{"line":271,"column":6}}]},"28":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"29":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"30":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"31":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":4},"end":{"line":337,"column":4}},{"start":{"line":337,"column":4},"end":{"line":337,"column":4}}]},"32":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":2},"end":{"line":346,"column":2}},{"start":{"line":346,"column":2},"end":{"line":346,"column":2}}]},"33":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"34":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":2},"end":{"line":356,"column":2}},{"start":{"line":356,"column":2},"end":{"line":356,"column":2}}]},"35":{"line":356,"type":"binary-expr","locations":[{"start":{"line":356,"column":6},"end":{"line":356,"column":34}},{"start":{"line":356,"column":38},"end":{"line":356,"column":70}}]},"36":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":2},"end":{"line":359,"column":2}},{"start":{"line":359,"column":2},"end":{"line":359,"column":2}}]},"37":{"line":359,"type":"binary-expr","locations":[{"start":{"line":359,"column":6},"end":{"line":359,"column":38}},{"start":{"line":359,"column":42},"end":{"line":359,"column":85}}]},"38":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":377,"column":4}},{"start":{"line":377,"column":4},"end":{"line":377,"column":4}}]},"39":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":386,"column":4}},{"start":{"line":386,"column":4},"end":{"line":386,"column":4}}]},"40":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":8},"end":{"line":386,"column":31}},{"start":{"line":386,"column":35},"end":{"line":386,"column":76}}]},"41":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":13},"end":{"line":392,"column":25}},{"start":{"line":392,"column":29},"end":{"line":392,"column":33}}]},"42":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"43":{"line":396,"type":"cond-expr","locations":[{"start":{"line":396,"column":54},"end":{"line":396,"column":74}},{"start":{"line":396,"column":77},"end":{"line":396,"column":93}}]},"44":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":4},"end":{"line":399,"column":4}},{"start":{"line":399,"column":4},"end":{"line":399,"column":4}}]},"45":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":17},"end":{"line":415,"column":29}},{"start":{"line":415,"column":33},"end":{"line":415,"column":37}}]},"46":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":16},"end":{"line":417,"column":30}},{"start":{"line":417,"column":34},"end":{"line":417,"column":46}}]},"47":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":2},"end":{"line":428,"column":2}},{"start":{"line":428,"column":2},"end":{"line":428,"column":2}}]},"48":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"49":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":2},"end":{"line":449,"column":2}},{"start":{"line":449,"column":2},"end":{"line":449,"column":2}}]},"50":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":4},"end":{"line":472,"column":4}},{"start":{"line":472,"column":4},"end":{"line":472,"column":4}}]},"51":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":478,"column":4}},{"start":{"line":478,"column":4},"end":{"line":478,"column":4}}]}},"code":["/** internal"," * class ActionContainer"," *"," * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]"," **/","","'use strict';","","var format = require('util').format;","","// Constants","var c = require('./const');","","var $$ = require('./utils');","","//Actions","var ActionHelp = require('./action/help');","var ActionAppend = require('./action/append');","var ActionAppendConstant = require('./action/append/constant');","var ActionCount = require('./action/count');","var ActionStore = require('./action/store');","var ActionStoreConstant = require('./action/store/constant');","var ActionStoreTrue = require('./action/store/true');","var ActionStoreFalse = require('./action/store/false');","var ActionVersion = require('./action/version');","var ActionSubparsers = require('./action/subparsers');","","// Errors","var argumentErrorHelper = require('./argument/error');","","/**"," * new ActionContainer(options)"," *"," * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]"," *"," * ##### Options:"," *"," * - `description` -- A description of what the program does"," * - `prefixChars`  -- Characters that prefix optional arguments"," * - `argumentDefault`  -- The default value for all arguments"," * - `conflictHandler` -- The conflict handler to use for duplicate arguments"," **/","var ActionContainer = module.exports = function ActionContainer(options) {","  options = options || {};","","  this.description = options.description;","  this.argumentDefault = options.argumentDefault;","  this.prefixChars = options.prefixChars || '';","  this.conflictHandler = options.conflictHandler;","","  // set up registries","  this._registries = {};","","  // register actions","  this.register('action', null, ActionStore);","  this.register('action', 'store', ActionStore);","  this.register('action', 'storeConst', ActionStoreConstant);","  this.register('action', 'storeTrue', ActionStoreTrue);","  this.register('action', 'storeFalse', ActionStoreFalse);","  this.register('action', 'append', ActionAppend);","  this.register('action', 'appendConst', ActionAppendConstant);","  this.register('action', 'count', ActionCount);","  this.register('action', 'help', ActionHelp);","  this.register('action', 'version', ActionVersion);","  this.register('action', 'parsers', ActionSubparsers);","","  // raise an exception if the conflict handler is invalid","  this._getHandler();","","  // action storage","  this._actions = [];","  this._optionStringActions = {};","","  // groups","  this._actionGroups = [];","  this._mutuallyExclusiveGroups = [];","","  // defaults storage","  this._defaults = {};","","  // determines whether an \"option\" looks like a negative number","  // -1, -1.5 -5e+4","  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');","","  // whether or not there are any optionals that look like negative","  // numbers -- uses a list so it can be shared and edited","  this._hasNegativeNumberOptionals = [];","};","","// Groups must be required, then ActionContainer already defined","var ArgumentGroup = require('./argument/group');","var MutuallyExclusiveGroup = require('./argument/exclusive');","","//","// Registration methods","//","","/**"," * ActionContainer#register(registryName, value, object) -> Void"," * - registryName (String) : object type action|type"," * - value (string) : keyword"," * - object (Object|Function) : handler"," *"," *  Register handlers"," **/","ActionContainer.prototype.register = function (registryName, value, object) {","  this._registries[registryName] = this._registries[registryName] || {};","  this._registries[registryName][value] = object;","};","","ActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {","  if (arguments.length < 3) {","    defaultValue = null;","  }","  return this._registries[registryName][value] || defaultValue;","};","","//","// Namespace default accessor methods","//","","/**"," * ActionContainer#setDefaults(options) -> Void"," * - options (object):hash of options see [[Action.new]]"," *"," * Set defaults"," **/","ActionContainer.prototype.setDefaults = function (options) {","  options = options || {};","  for (var property in options) {","    if ($$.has(options, property)) {","      this._defaults[property] = options[property];","    }","  }","","  // if these defaults match any existing arguments, replace the previous","  // default on the object with the new one","  this._actions.forEach(function (action) {","    if ($$.has(options, action.dest)) {","      action.defaultValue = options[action.dest];","    }","  });","};","","/**"," * ActionContainer#getDefault(dest) -> Mixed"," * - dest (string): action destination"," *"," * Return action default value"," **/","ActionContainer.prototype.getDefault = function (dest) {","  var result = $$.has(this._defaults, dest) ? this._defaults[dest] : null;","","  this._actions.forEach(function (action) {","    if (action.dest === dest && $$.has(action, 'defaultValue')) {","      result = action.defaultValue;","    }","  });","","  return result;","};","//","// Adding argument actions","//","","/**"," * ActionContainer#addArgument(args, options) -> Object"," * - args (String|Array): argument key, or array of argument keys"," * - options (Object): action objects see [[Action.new]]"," *"," * #### Examples"," * - addArgument([ '-f', '--foo' ], { action: 'store', defaultValue: 1, ... })"," * - addArgument([ 'bar' ], { action: 'store', nargs: 1, ... })"," * - addArgument('--baz', { action: 'store', nargs: 1, ... })"," **/","ActionContainer.prototype.addArgument = function (args, options) {","  args = args;","  options = options || {};","","  if (typeof args === 'string') {","    args = [ args ];","  }","  if (!Array.isArray(args)) {","    throw new TypeError('addArgument first argument should be a string or an array');","  }","  if (typeof options !== 'object' || Array.isArray(options)) {","    throw new TypeError('addArgument second argument should be a hash');","  }","","  // if no positional args are supplied or only one is supplied and","  // it doesn't look like an option string, parse a positional argument","  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {","    if (args && !!options.dest) {","      throw new Error('dest supplied twice for positional argument');","    }","    options = this._getPositional(args, options);","","    // otherwise, we're adding an optional argument","  } else {","    options = this._getOptional(args, options);","  }","","  // if no default was supplied, use the parser-level default","  if (typeof options.defaultValue === 'undefined') {","    var dest = options.dest;","    if ($$.has(this._defaults, dest)) {","      options.defaultValue = this._defaults[dest];","    } else if (typeof this.argumentDefault !== 'undefined') {","      options.defaultValue = this.argumentDefault;","    }","  }","","  // create the action object, and add it to the parser","  var ActionClass = this._popActionClass(options);","  if (typeof ActionClass !== 'function') {","    throw new Error(format('Unknown action \"%s\".', ActionClass));","  }","  var action = new ActionClass(options);","","  // throw an error if the action type is not callable","  var typeFunction = this._registryGet('type', action.type, action.type);","  if (typeof typeFunction !== 'function') {","    throw new Error(format('\"%s\" is not callable', typeFunction));","  }","","  return this._addAction(action);","};","","/**"," * ActionContainer#addArgumentGroup(options) -> ArgumentGroup"," * - options (Object): hash of options see [[ArgumentGroup.new]]"," *"," * Create new arguments groups"," **/","ActionContainer.prototype.addArgumentGroup = function (options) {","  var group = new ArgumentGroup(this, options);","  this._actionGroups.push(group);","  return group;","};","","/**"," * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup"," * - options (Object): {required: false}"," *"," * Create new mutual exclusive groups"," **/","ActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {","  var group = new MutuallyExclusiveGroup(this, options);","  this._mutuallyExclusiveGroups.push(group);","  return group;","};","","ActionContainer.prototype._addAction = function (action) {","  var self = this;","","  // resolve any conflicts","  this._checkConflict(action);","","  // add to actions list","  this._actions.push(action);","  action.container = this;","","  // index the action by any option strings it has","  action.optionStrings.forEach(function (optionString) {","    self._optionStringActions[optionString] = action;","  });","","  // set the flag if any option strings look like negative numbers","  action.optionStrings.forEach(function (optionString) {","    if (optionString.match(self._regexpNegativeNumber)) {","      if (!self._hasNegativeNumberOptionals.some(Boolean)) {","        self._hasNegativeNumberOptionals.push(true);","      }","    }","  });","","  // return the created action","  return action;","};","","ActionContainer.prototype._removeAction = function (action) {","  var actionIndex = this._actions.indexOf(action);","  if (actionIndex >= 0) {","    this._actions.splice(actionIndex, 1);","  }","};","","ActionContainer.prototype._addContainerActions = function (container) {","  // collect groups by titles","  var titleGroupMap = {};","  this._actionGroups.forEach(function (group) {","    if (titleGroupMap[group.title]) {","      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));","    }","    titleGroupMap[group.title] = group;","  });","","  // map each action to its group","  var groupMap = {};","  function actionHash(action) {","    // unique (hopefully?) string suitable as dictionary key","    return action.getName();","  }","  container._actionGroups.forEach(function (group) {","    // if a group with the title exists, use that, otherwise","    // create a new group matching the container's group","    if (!titleGroupMap[group.title]) {","      titleGroupMap[group.title] = this.addArgumentGroup({","        title: group.title,","        description: group.description","      });","    }","","    // map the actions to their new group","    group._groupActions.forEach(function (action) {","      groupMap[actionHash(action)] = titleGroupMap[group.title];","    });","  }, this);","","  // add container's mutually exclusive groups","  // NOTE: if add_mutually_exclusive_group ever gains title= and","  // description= then this code will need to be expanded as above","  var mutexGroup;","  container._mutuallyExclusiveGroups.forEach(function (group) {","    mutexGroup = this.addMutuallyExclusiveGroup({","      required: group.required","    });","    // map the actions to their new mutex group","    group._groupActions.forEach(function (action) {","      groupMap[actionHash(action)] = mutexGroup;","    });","  }, this);  // forEach takes a 'this' argument","","  // add all actions to this container or their group","  container._actions.forEach(function (action) {","    var key = actionHash(action);","    if (groupMap[key]) {","      groupMap[key]._addAction(action);","    } else {","      this._addAction(action);","    }","  });","};","","ActionContainer.prototype._getPositional = function (dest, options) {","  if (Array.isArray(dest)) {","    dest = dest[0];","  }","  // make sure required is not specified","  if (options.required) {","    throw new Error('\"required\" is an invalid argument for positionals.');","  }","","  // mark positional arguments as required if at least one is","  // always required","  if (options.nargs !== c.OPTIONAL && options.nargs !== c.ZERO_OR_MORE) {","    options.required = true;","  }","  if (options.nargs === c.ZERO_OR_MORE && typeof options.defaultValue === 'undefined') {","    options.required = true;","  }","","  // return the keyword arguments with no option strings","  options.dest = dest;","  options.optionStrings = [];","  return options;","};","","ActionContainer.prototype._getOptional = function (args, options) {","  var prefixChars = this.prefixChars;","  var optionStrings = [];","  var optionStringsLong = [];","","  // determine short and long option strings","  args.forEach(function (optionString) {","    // error on strings that don't start with an appropriate prefix","    if (prefixChars.indexOf(optionString[0]) < 0) {","      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".',","        optionString,","        prefixChars","      ));","    }","","    // strings starting with two prefix characters are long options","    optionStrings.push(optionString);","    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {","      optionStringsLong.push(optionString);","    }","  });","","  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'","  var dest = options.dest || null;","  delete options.dest;","","  if (!dest) {","    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] : optionStrings[0];","    dest = $$.trimChars(optionStringDest, this.prefixChars);","","    if (dest.length === 0) {","      throw new Error(","        format('dest= is required for options like \"%s\"', optionStrings.join(', '))","      );","    }","    dest = dest.replace(/-/g, '_');","  }","","  // return the updated keyword arguments","  options.dest = dest;","  options.optionStrings = optionStrings;","","  return options;","};","","ActionContainer.prototype._popActionClass = function (options, defaultValue) {","  defaultValue = defaultValue || null;","","  var action = (options.action || defaultValue);","  delete options.action;","","  var actionClass = this._registryGet('action', action, action);","  return actionClass;","};","","ActionContainer.prototype._getHandler = function () {","  var handlerString = this.conflictHandler;","  var handlerFuncName = '_handleConflict' + $$.capitalize(handlerString);","  var func = this[handlerFuncName];","  if (typeof func === 'undefined') {","    var msg = 'invalid conflict resolution value: ' + handlerString;","    throw new Error(msg);","  } else {","    return func;","  }","};","","ActionContainer.prototype._checkConflict = function (action) {","  var optionStringActions = this._optionStringActions;","  var conflictOptionals = [];","","  // find all options that conflict with this option","  // collect pairs, the string, and an existing action that it conflicts with","  action.optionStrings.forEach(function (optionString) {","    var conflOptional = optionStringActions[optionString];","    if (typeof conflOptional !== 'undefined') {","      conflictOptionals.push([ optionString, conflOptional ]);","    }","  });","","  if (conflictOptionals.length > 0) {","    var conflictHandler = this._getHandler();","    conflictHandler.call(this, action, conflictOptionals);","  }","};","","ActionContainer.prototype._handleConflictError = function (action, conflOptionals) {","  var conflicts = conflOptionals.map(function (pair) { return pair[0]; });","  conflicts = conflicts.join(', ');","  throw argumentErrorHelper(","    action,","    format('Conflicting option string(s): %s', conflicts)","  );","};","","ActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {","  // remove all conflicting options","  var self = this;","  conflOptionals.forEach(function (pair) {","    var optionString = pair[0];","    var conflictingAction = pair[1];","    // remove the conflicting option string","    var i = conflictingAction.optionStrings.indexOf(optionString);","    if (i >= 0) {","      conflictingAction.optionStrings.splice(i, 1);","    }","    delete self._optionStringActions[optionString];","    // if the option now has no option string, remove it from the","    // container holding it","    if (conflictingAction.optionStrings.length === 0) {","      conflictingAction.container._removeAction(conflictingAction);","    }","  });","};",""],"l":{"9":1,"12":1,"14":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"29":1,"43":1,"44":0,"46":0,"47":0,"48":0,"49":0,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"68":0,"71":0,"72":0,"75":0,"76":0,"79":0,"83":0,"87":0,"91":1,"92":1,"106":1,"107":0,"108":0,"111":1,"112":0,"113":0,"115":0,"128":1,"129":0,"130":0,"131":0,"132":0,"138":0,"139":0,"140":0,"151":1,"152":0,"154":0,"155":0,"156":0,"160":0,"176":1,"177":0,"178":0,"180":0,"181":0,"183":0,"184":0,"186":0,"187":0,"192":0,"193":0,"194":0,"196":0,"200":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"214":0,"215":0,"216":0,"218":0,"221":0,"222":0,"223":0,"226":0,"235":1,"236":0,"237":0,"238":0,"247":1,"248":0,"249":0,"250":0,"253":1,"254":0,"257":0,"260":0,"261":0,"264":0,"265":0,"269":0,"270":0,"271":0,"272":0,"278":0,"281":1,"282":0,"283":0,"284":0,"288":1,"290":0,"291":0,"292":0,"293":0,"295":0,"299":0,"300":1,"302":0,"304":0,"307":0,"308":0,"315":0,"316":0,"323":0,"324":0,"325":0,"329":0,"330":0,"335":0,"336":0,"337":0,"338":0,"340":0,"345":1,"346":0,"347":0,"350":0,"351":0,"356":0,"357":0,"359":0,"360":0,"364":0,"365":0,"366":0,"369":1,"370":0,"371":0,"372":0,"375":0,"377":0,"378":0,"385":0,"386":0,"387":0,"392":0,"393":0,"395":0,"396":0,"397":0,"399":0,"400":0,"404":0,"408":0,"409":0,"411":0,"414":1,"415":0,"417":0,"418":0,"420":0,"421":0,"424":1,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"432":0,"436":1,"437":0,"438":0,"442":0,"443":0,"444":0,"445":0,"449":0,"450":0,"451":0,"455":1,"456":0,"457":0,"458":0,"464":1,"466":0,"467":0,"468":0,"469":0,"471":0,"472":0,"473":0,"475":0,"478":0,"479":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/help.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/help.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ActionHelp","line":21,"loc":{"start":{"line":21,"column":34},"end":{"line":21,"column":63}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":46}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"4":{"start":{"line":21,"column":0},"end":{"line":32,"column":2}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"6":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":48}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":38}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":69}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"13":{"start":{"line":44,"column":0},"end":{"line":47,"column":2}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":21}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":16}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":19}},{"start":{"line":22,"column":23},"end":{"line":22,"column":25}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":42},"end":{"line":28,"column":54}},{"start":{"line":28,"column":57},"end":{"line":28,"column":67}}]}},"code":["/*:nodoc:*"," * class ActionHelp"," *"," * Support action for printing help"," * This class inherided from [[Action]]"," **/","'use strict';","","var util = require('util');","","var Action = require('../action');","","// Constants","var c  = require('../const');","","/*:nodoc:*"," * new ActionHelp(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","var ActionHelp = module.exports = function ActionHelp(options) {","  options = options || {};","  if (options.defaultValue !== null) {","    options.defaultValue = options.defaultValue;","  } else {","    options.defaultValue = c.SUPPRESS;","  }","  options.dest = (options.dest !== null ? options.dest : c.SUPPRESS);","  options.nargs = 0;","  Action.call(this, options);","","};","util.inherits(ActionHelp, Action);","","/*:nodoc:*"," * ActionHelp#call(parser, namespace, values, optionString)"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Print help and exit"," **/","ActionHelp.prototype.call = function (parser) {","  parser.printHelp();","  parser.exit();","};",""],"l":{"9":1,"11":1,"14":1,"21":1,"22":0,"23":0,"24":0,"26":0,"28":0,"29":0,"30":0,"33":1,"44":1,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Action","line":73,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":55}}},"2":{"name":"(anonymous_2)","line":99,"loc":{"start":{"line":99,"column":27},"end":{"line":99,"column":39}}},"3":{"name":"(anonymous_3)","line":115,"loc":{"start":{"line":115,"column":30},"end":{"line":115,"column":42}}},"4":{"name":"(anonymous_4)","line":124,"loc":{"start":{"line":124,"column":32},"end":{"line":124,"column":44}}},"5":{"name":"(anonymous_5)","line":144,"loc":{"start":{"line":144,"column":24},"end":{"line":144,"column":36}}}},"statementMap":{"1":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}},"2":{"start":{"line":73,"column":0},"end":{"line":92,"column":2}},"3":{"start":{"line":74,"column":2},"end":{"line":74,"column":26}},"4":{"start":{"line":75,"column":2},"end":{"line":75,"column":51}},"5":{"start":{"line":76,"column":2},"end":{"line":76,"column":27}},"6":{"start":{"line":77,"column":2},"end":{"line":77,"column":75}},"7":{"start":{"line":78,"column":2},"end":{"line":78,"column":84}},"8":{"start":{"line":79,"column":2},"end":{"line":79,"column":43}},"9":{"start":{"line":80,"column":2},"end":{"line":80,"column":72}},"10":{"start":{"line":81,"column":2},"end":{"line":81,"column":81}},"11":{"start":{"line":82,"column":2},"end":{"line":82,"column":85}},"12":{"start":{"line":83,"column":2},"end":{"line":83,"column":72}},"13":{"start":{"line":84,"column":2},"end":{"line":84,"column":81}},"14":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"15":{"start":{"line":87,"column":4},"end":{"line":87,"column":56}},"16":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"17":{"start":{"line":90,"column":4},"end":{"line":90,"column":52}},"18":{"start":{"line":99,"column":0},"end":{"line":108,"column":2}},"19":{"start":{"line":100,"column":2},"end":{"line":106,"column":3}},"20":{"start":{"line":101,"column":4},"end":{"line":101,"column":40}},"21":{"start":{"line":102,"column":9},"end":{"line":106,"column":3}},"22":{"start":{"line":103,"column":4},"end":{"line":103,"column":24}},"23":{"start":{"line":104,"column":9},"end":{"line":106,"column":3}},"24":{"start":{"line":105,"column":4},"end":{"line":105,"column":21}},"25":{"start":{"line":107,"column":2},"end":{"line":107,"column":14}},"26":{"start":{"line":115,"column":0},"end":{"line":117,"column":2}},"27":{"start":{"line":116,"column":2},"end":{"line":116,"column":30}},"28":{"start":{"line":124,"column":0},"end":{"line":126,"column":2}},"29":{"start":{"line":125,"column":2},"end":{"line":125,"column":43}},"30":{"start":{"line":144,"column":0},"end":{"line":146,"column":2}},"31":{"start":{"line":145,"column":2},"end":{"line":145,"column":41}}},"branchMap":{"1":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":19}},{"start":{"line":74,"column":23},"end":{"line":74,"column":25}}]},"2":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":23},"end":{"line":75,"column":44}},{"start":{"line":75,"column":48},"end":{"line":75,"column":50}}]},"3":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":54},"end":{"line":77,"column":67}},{"start":{"line":77,"column":70},"end":{"line":77,"column":74}}]},"4":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":60},"end":{"line":78,"column":76}},{"start":{"line":78,"column":79},"end":{"line":78,"column":83}}]},"5":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":52},"end":{"line":80,"column":64}},{"start":{"line":80,"column":67},"end":{"line":80,"column":71}}]},"6":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":58},"end":{"line":81,"column":73}},{"start":{"line":81,"column":76},"end":{"line":81,"column":80}}]},"7":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":60},"end":{"line":82,"column":76}},{"start":{"line":82,"column":79},"end":{"line":82,"column":84}}]},"8":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":52},"end":{"line":83,"column":64}},{"start":{"line":83,"column":67},"end":{"line":83,"column":71}}]},"9":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":58},"end":{"line":84,"column":73}},{"start":{"line":84,"column":76},"end":{"line":84,"column":80}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"11":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"12":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":42}},{"start":{"line":89,"column":46},"end":{"line":89,"column":80}}]},"13":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"14":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":9},"end":{"line":102,"column":9}},{"start":{"line":102,"column":9},"end":{"line":102,"column":9}}]},"15":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":13},"end":{"line":102,"column":34}},{"start":{"line":102,"column":38},"end":{"line":102,"column":65}}]},"16":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":9},"end":{"line":104,"column":9}},{"start":{"line":104,"column":9},"end":{"line":104,"column":9}}]},"17":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":13},"end":{"line":104,"column":45}},{"start":{"line":104,"column":49},"end":{"line":104,"column":73}}]}},"code":["/**"," * class Action"," *"," * Base class for all actions"," * Do not call in your code, use this class only for inherits your own action"," *"," * Information about how to convert command line strings to Javascript objects."," * Action objects are used by an ArgumentParser to represent the information"," * needed to parse a single argument from one or more strings from the command"," * line. The keyword arguments to the Action constructor are also all attributes"," * of Action instances."," *"," * #####Alowed keywords:"," *"," * - `store`"," * - `storeConstant`"," * - `storeTrue`"," * - `storeFalse`"," * - `append`"," * - `appendConstant`"," * - `count`"," * - `help`"," * - `version`"," *"," * Information about action options see [[Action.new]]"," *"," * See also [original guide](http://docs.python.org/dev/library/argparse.html#action)"," *"," **/","","'use strict';","","","// Constants","var c = require('./const');","","","/**"," * new Action(options)"," *"," * Base class for all actions. Used only for inherits"," *"," *"," * ##### Options:"," *"," * - `optionStrings`  A list of command-line option strings for the action."," * - `dest`  Attribute to hold the created object(s)"," * - `nargs`  The number of command-line arguments that should be consumed."," * By default, one argument will be consumed and a single value will be"," * produced."," * - `constant`  Default value for an action with no value."," * - `defaultValue`  The value to be produced if the option is not specified."," * - `type`  Cast to 'string'|'int'|'float'|'complex'|function (string). If"," * None, 'string'."," * - `choices`  The choices available."," * - `required`  True if the action must always be specified at the command"," * line."," * - `help`  The help describing the argument."," * - `metavar`  The name to be used for the option's argument with the help"," * string. If None, the 'dest' value will be used as the name."," *"," * ##### nargs supported values:"," *"," * - `N` (an integer) consumes N arguments (and produces a list)"," * - `?`  consumes zero or one arguments"," * - `*` consumes zero or more arguments (and produces a list)"," * - `+` consumes one or more arguments (and produces a list)"," *"," * Note: that the difference between the default and nargs=1 is that with the"," * default, a single value will be produced, while with nargs=1, a list"," * containing a single value will be produced."," **/","var Action = module.exports = function Action(options) {","  options = options || {};","  this.optionStrings = options.optionStrings || [];","  this.dest = options.dest;","  this.nargs = typeof options.nargs !== 'undefined' ? options.nargs : null;","  this.constant = typeof options.constant !== 'undefined' ? options.constant : null;","  this.defaultValue = options.defaultValue;","  this.type = typeof options.type !== 'undefined' ? options.type : null;","  this.choices = typeof options.choices !== 'undefined' ? options.choices : null;","  this.required = typeof options.required !== 'undefined' ? options.required : false;","  this.help = typeof options.help !== 'undefined' ? options.help : null;","  this.metavar = typeof options.metavar !== 'undefined' ? options.metavar : null;","","  if (!(this.optionStrings instanceof Array)) {","    throw new Error('optionStrings should be an array');","  }","  if (typeof this.required !== 'undefined' && typeof this.required !== 'boolean') {","    throw new Error('required should be a boolean');","  }","};","","/**"," * Action#getName -> String"," *"," * Tells action name"," **/","Action.prototype.getName = function () {","  if (this.optionStrings.length > 0) {","    return this.optionStrings.join('/');","  } else if (this.metavar !== null && this.metavar !== c.SUPPRESS) {","    return this.metavar;","  } else if (typeof this.dest !== 'undefined' && this.dest !== c.SUPPRESS) {","    return this.dest;","  }","  return null;","};","","/**"," * Action#isOptional -> Boolean"," *"," * Return true if optional"," **/","Action.prototype.isOptional = function () {","  return !this.isPositional();","};","","/**"," * Action#isPositional -> Boolean"," *"," * Return true if positional"," **/","Action.prototype.isPositional = function () {","  return (this.optionStrings.length === 0);","};","","/**"," * Action#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Call the action. Should be implemented in inherited classes"," *"," * ##### Example"," *"," *      ActionCount.prototype.call = function (parser, namespace, values, optionString) {"," *        namespace.set(this.dest, (namespace[this.dest] || 0) + 1);"," *      };"," *"," **/","Action.prototype.call = function () {","  throw new Error('.call() not defined');// Not Implemented error","};",""],"l":{"35":1,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"89":0,"90":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"107":0,"115":1,"116":0,"124":1,"125":0,"144":1,"145":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/append.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/append.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ActionAppend","line":26,"loc":{"start":{"line":26,"column":36},"end":{"line":26,"column":67}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":30},"end":{"line":49,"column":67}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"4":{"start":{"line":26,"column":0},"end":{"line":37,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":26}},"6":{"start":{"line":28,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":29,"column":4},"end":{"line":31,"column":59}},"8":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":62}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"11":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}},"12":{"start":{"line":49,"column":0},"end":{"line":53,"column":2}},"13":{"start":{"line":50,"column":2},"end":{"line":50,"column":51}},"14":{"start":{"line":51,"column":2},"end":{"line":51,"column":21}},"15":{"start":{"line":52,"column":2},"end":{"line":52,"column":34}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":19}},{"start":{"line":27,"column":23},"end":{"line":27,"column":25}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":50}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":15},"end":{"line":50,"column":35}},{"start":{"line":50,"column":39},"end":{"line":50,"column":41}}]}},"code":["/*:nodoc:*"," * class ActionAppend"," *"," * This action stores a list, and appends each argument value to the list."," * This is useful to allow an option to be specified multiple times."," * This class inherided from [[Action]]"," *"," **/","","'use strict';","","var util = require('util');","","var Action = require('../action');","","// Constants","var c = require('../const');","","/*:nodoc:*"," * new ActionAppend(options)"," * - options (object): options hash see [[Action.new]]"," *"," * Note: options.nargs should be optional for constants"," * and more then zero for other"," **/","var ActionAppend = module.exports = function ActionAppend(options) {","  options = options || {};","  if (this.nargs <= 0) {","    throw new Error('nargs for append actions must be > 0; if arg ' +","        'strings are not supplying the value to append, ' +","        'the append const action may be more appropriate');","  }","  if (!!this.constant && this.nargs !== c.OPTIONAL) {","    throw new Error('nargs must be OPTIONAL to supply const');","  }","  Action.call(this, options);","};","util.inherits(ActionAppend, Action);","","/*:nodoc:*"," * ActionAppend#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Call the action. Save result in namespace object"," **/","ActionAppend.prototype.call = function (parser, namespace, values) {","  var items = (namespace[this.dest] || []).slice();","  items.push(values);","  namespace.set(this.dest, items);","};",""],"l":{"12":1,"14":1,"17":1,"26":1,"27":0,"28":0,"29":0,"33":0,"34":0,"36":0,"38":1,"49":1,"50":0,"51":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/append/constant.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/append/constant.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ActionAppendConstant","line":24,"loc":{"start":{"line":24,"column":44},"end":{"line":24,"column":83}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":38},"end":{"line":43,"column":67}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"3":{"start":{"line":24,"column":0},"end":{"line":31,"column":2}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":20}},"6":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":68}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":44}},"10":{"start":{"line":43,"column":0},"end":{"line":47,"column":2}},"11":{"start":{"line":44,"column":2},"end":{"line":44,"column":52}},"12":{"start":{"line":45,"column":2},"end":{"line":45,"column":28}},"13":{"start":{"line":46,"column":2},"end":{"line":46,"column":34}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":19}},{"start":{"line":25,"column":23},"end":{"line":25,"column":25}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":24},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":50}}]}},"code":["/*:nodoc:*"," * class ActionAppendConstant"," *"," * This stores a list, and appends the value specified by"," * the const keyword argument to the list."," * (Note that the const keyword argument defaults to null.)"," * The 'appendConst' action is typically useful when multiple"," * arguments need to store constants to the same list."," *"," * This class inherited from [[Action]]"," **/","","'use strict';","","var util = require('util');","","var Action = require('../../action');","","/*:nodoc:*"," * new ActionAppendConstant(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","var ActionAppendConstant = module.exports = function ActionAppendConstant(options) {","  options = options || {};","  options.nargs = 0;","  if (typeof options.constant === 'undefined') {","    throw new Error('constant option is required for appendAction');","  }","  Action.call(this, options);","};","util.inherits(ActionAppendConstant, Action);","","/*:nodoc:*"," * ActionAppendConstant#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Call the action. Save result in namespace object"," **/","ActionAppendConstant.prototype.call = function (parser, namespace) {","  var items = [].concat(namespace[this.dest] || []);","  items.push(this.constant);","  namespace.set(this.dest, items);","};",""],"l":{"15":1,"17":1,"24":1,"25":0,"26":0,"27":0,"28":0,"30":0,"32":1,"43":1,"44":0,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/count.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/count.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ActionCount","line":21,"loc":{"start":{"line":21,"column":35},"end":{"line":21,"column":65}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":29},"end":{"line":38,"column":58}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"3":{"start":{"line":21,"column":0},"end":{"line":26,"column":2}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":20}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":29}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":35}},"8":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":19}},{"start":{"line":22,"column":23},"end":{"line":22,"column":25}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":28},"end":{"line":39,"column":48}},{"start":{"line":39,"column":52},"end":{"line":39,"column":53}}]}},"code":["/*:nodoc:*"," * class ActionCount"," *"," * This counts the number of times a keyword argument occurs."," * For example, this is useful for increasing verbosity levels"," *"," * This class inherided from [[Action]]"," *"," **/","'use strict';","","var util = require('util');","","var Action = require('../action');","","/*:nodoc:*"," * new ActionCount(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","var ActionCount = module.exports = function ActionCount(options) {","  options = options || {};","  options.nargs = 0;","","  Action.call(this, options);","};","util.inherits(ActionCount, Action);","","/*:nodoc:*"," * ActionCount#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Call the action. Save result in namespace object"," **/","ActionCount.prototype.call = function (parser, namespace) {","  namespace.set(this.dest, (namespace[this.dest] || 0) + 1);","};",""],"l":{"12":1,"14":1,"21":1,"22":0,"23":0,"25":0,"27":1,"38":1,"39":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ActionStore","line":24,"loc":{"start":{"line":24,"column":35},"end":{"line":24,"column":65}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":29},"end":{"line":48,"column":66}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}},"4":{"start":{"line":24,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}},"6":{"start":{"line":26,"column":2},"end":{"line":31,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":55}},"8":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":62}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":29}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":35}},"12":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":35}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":19}},{"start":{"line":25,"column":23},"end":{"line":25,"column":25}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":42}},{"start":{"line":32,"column":46},"end":{"line":32,"column":71}}]}},"code":["/*:nodoc:*"," * class ActionStore"," *"," * This action just stores the argument’s value. This is the default action."," *"," * This class inherited from [[Action]]"," *"," **/","'use strict';","","var util = require('util');","","var Action = require('../action');","","// Constants","var c = require('../const');","","","/*:nodoc:*"," * new ActionStore(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","var ActionStore = module.exports = function ActionStore(options) {","  options = options || {};","  if (this.nargs <= 0) {","    throw new Error('nargs for store actions must be > 0; if you ' +","        'have nothing to store, actions such as store ' +","        'true or store const may be more appropriate');","","  }","  if (typeof this.constant !== 'undefined' && this.nargs !== c.OPTIONAL) {","    throw new Error('nargs must be OPTIONAL to supply const');","  }","  Action.call(this, options);","};","util.inherits(ActionStore, Action);","","/*:nodoc:*"," * ActionStore#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Call the action. Save result in namespace object"," **/","ActionStore.prototype.call = function (parser, namespace, values) {","  namespace.set(this.dest, values);","};",""],"l":{"11":1,"13":1,"16":1,"24":1,"25":0,"26":0,"27":0,"32":0,"33":0,"35":0,"37":1,"48":1,"49":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store/constant.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store/constant.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ActionStoreConstant","line":22,"loc":{"start":{"line":22,"column":43},"end":{"line":22,"column":81}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":37},"end":{"line":41,"column":66}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"3":{"start":{"line":22,"column":0},"end":{"line":29,"column":2}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":20}},"6":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":67}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":29}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"10":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":42}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":25}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["/*:nodoc:*"," * class ActionStoreConstant"," *"," * This action stores the value specified by the const keyword argument."," * (Note that the const keyword argument defaults to the rather unhelpful null.)"," * The 'store_const' action is most commonly used with optional"," * arguments that specify some sort of flag."," *"," * This class inherited from [[Action]]"," **/","'use strict';","","var util = require('util');","","var Action = require('../../action');","","/*:nodoc:*"," * new ActionStoreConstant(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","var ActionStoreConstant = module.exports = function ActionStoreConstant(options) {","  options = options || {};","  options.nargs = 0;","  if (typeof options.constant === 'undefined') {","    throw new Error('constant option is required for storeAction');","  }","  Action.call(this, options);","};","util.inherits(ActionStoreConstant, Action);","","/*:nodoc:*"," * ActionStoreConstant#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Call the action. Save result in namespace object"," **/","ActionStoreConstant.prototype.call = function (parser, namespace) {","  namespace.set(this.dest, this.constant);","};",""],"l":{"13":1,"15":1,"22":1,"23":0,"24":0,"25":0,"26":0,"28":0,"30":1,"41":1,"42":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store/true.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store/true.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ActionStoreTrue","line":20,"loc":{"start":{"line":20,"column":39},"end":{"line":20,"column":73}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"3":{"start":{"line":20,"column":0},"end":{"line":25,"column":2}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":26}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":86}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":42}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":19}},{"start":{"line":21,"column":23},"end":{"line":21,"column":25}}]},"2":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":57},"end":{"line":23,"column":77}},{"start":{"line":23,"column":80},"end":{"line":23,"column":85}}]}},"code":["/*:nodoc:*"," * class ActionStoreTrue"," *"," * This action store the values True respectively."," * This isspecial cases of 'storeConst'"," *"," * This class inherited from [[Action]]"," **/","'use strict';","","var util = require('util');","","var ActionStoreConstant = require('./constant');","","/*:nodoc:*"," * new ActionStoreTrue(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","var ActionStoreTrue = module.exports = function ActionStoreTrue(options) {","  options = options || {};","  options.constant = true;","  options.defaultValue = options.defaultValue !== null ? options.defaultValue : false;","  ActionStoreConstant.call(this, options);","};","util.inherits(ActionStoreTrue, ActionStoreConstant);",""],"l":{"11":1,"13":1,"20":1,"21":0,"22":0,"23":0,"24":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store/false.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/store/false.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ActionStoreFalse","line":21,"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":75}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":48}},"3":{"start":{"line":21,"column":0},"end":{"line":26,"column":2}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":27}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":85}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":42}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":53}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":19}},{"start":{"line":22,"column":23},"end":{"line":22,"column":25}}]},"2":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":57},"end":{"line":24,"column":77}},{"start":{"line":24,"column":80},"end":{"line":24,"column":84}}]}},"code":["/*:nodoc:*"," * class ActionStoreFalse"," *"," * This action store the values False respectively."," * This is special cases of 'storeConst'"," *"," * This class inherited from [[Action]]"," **/","","'use strict';","","var util = require('util');","","var ActionStoreConstant = require('./constant');","","/*:nodoc:*"," * new ActionStoreFalse(options)"," * - options (object): hash of options see [[Action.new]]"," *"," **/","var ActionStoreFalse = module.exports = function ActionStoreFalse(options) {","  options = options || {};","  options.constant = false;","  options.defaultValue = options.defaultValue !== null ? options.defaultValue : true;","  ActionStoreConstant.call(this, options);","};","util.inherits(ActionStoreFalse, ActionStoreConstant);",""],"l":{"12":1,"14":1,"21":1,"22":0,"23":0,"24":0,"25":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/version.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ActionVersion","line":23,"loc":{"start":{"line":23,"column":37},"end":{"line":23,"column":69}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":31},"end":{"line":42,"column":49}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}},"4":{"start":{"line":23,"column":0},"end":{"line":30,"column":2}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":84}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":46}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":29}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}},"12":{"start":{"line":42,"column":0},"end":{"line":47,"column":2}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":47}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":41}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":29}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":41}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},{"start":{"line":24,"column":23},"end":{"line":24,"column":25}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":49},"end":{"line":25,"column":69}},{"start":{"line":25,"column":72},"end":{"line":25,"column":82}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":18},"end":{"line":26,"column":30}},{"start":{"line":26,"column":34},"end":{"line":26,"column":44}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},{"start":{"line":43,"column":32},"end":{"line":43,"column":46}}]}},"code":["/*:nodoc:*"," * class ActionVersion"," *"," * Support action for printing program version"," * This class inherited from [[Action]]"," **/","'use strict';","","var util = require('util');","","var Action = require('../action');","","//","// Constants","//","var c = require('../const');","","/*:nodoc:*"," * new ActionVersion(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","var ActionVersion = module.exports = function ActionVersion(options) {","  options = options || {};","  options.defaultValue = (options.defaultValue ? options.defaultValue : c.SUPPRESS);","  options.dest = (options.dest || c.SUPPRESS);","  options.nargs = 0;","  this.version = options.version;","  Action.call(this, options);","};","util.inherits(ActionVersion, Action);","","/*:nodoc:*"," * ActionVersion#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Print version and exit"," **/","ActionVersion.prototype.call = function (parser) {","  var version = this.version || parser.version;","  var formatter = parser._getFormatter();","  formatter.addText(version);","  parser.exit(0, formatter.formatHelp());","};",""],"l":{"9":1,"11":1,"16":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":1,"42":1,"43":0,"44":0,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/subparsers.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/action/subparsers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"ChoicesPseudoAction","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}}},"2":{"name":"ActionSubparsers","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":35}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":39},"end":{"line":75,"column":64}}},"4":{"name":"(anonymous_4)","line":105,"loc":{"start":{"line":105,"column":18},"end":{"line":105,"column":35}}},"5":{"name":"(anonymous_5)","line":112,"loc":{"start":{"line":112,"column":44},"end":{"line":112,"column":56}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":34},"end":{"line":125,"column":71}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":55}},"6":{"start":{"line":29,"column":0},"end":{"line":37,"column":1}},"7":{"start":{"line":30,"column":2},"end":{"line":34,"column":4}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"9":{"start":{"line":39,"column":0},"end":{"line":39,"column":43}},"10":{"start":{"line":46,"column":0},"end":{"line":60,"column":1}},"11":{"start":{"line":47,"column":2},"end":{"line":47,"column":26}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":44}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":27}},"14":{"start":{"line":51,"column":2},"end":{"line":51,"column":40}},"15":{"start":{"line":53,"column":2},"end":{"line":53,"column":34}},"16":{"start":{"line":54,"column":2},"end":{"line":54,"column":42}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":27}},"18":{"start":{"line":56,"column":2},"end":{"line":56,"column":28}},"19":{"start":{"line":58,"column":2},"end":{"line":58,"column":40}},"20":{"start":{"line":59,"column":2},"end":{"line":59,"column":29}},"21":{"start":{"line":62,"column":0},"end":{"line":62,"column":40}},"22":{"start":{"line":75,"column":0},"end":{"line":110,"column":2}},"23":{"start":{"line":76,"column":2},"end":{"line":76,"column":13}},"24":{"start":{"line":78,"column":2},"end":{"line":78,"column":18}},"25":{"start":{"line":80,"column":2},"end":{"line":80,"column":26}},"26":{"start":{"line":82,"column":2},"end":{"line":82,"column":40}},"27":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"28":{"start":{"line":86,"column":4},"end":{"line":86,"column":49}},"29":{"start":{"line":89,"column":2},"end":{"line":89,"column":38}},"30":{"start":{"line":92,"column":2},"end":{"line":98,"column":3}},"31":{"start":{"line":93,"column":4},"end":{"line":93,"column":28}},"32":{"start":{"line":94,"column":4},"end":{"line":94,"column":24}},"33":{"start":{"line":96,"column":4},"end":{"line":96,"column":59}},"34":{"start":{"line":97,"column":4},"end":{"line":97,"column":44}},"35":{"start":{"line":101,"column":2},"end":{"line":101,"column":42}},"36":{"start":{"line":102,"column":2},"end":{"line":102,"column":37}},"37":{"start":{"line":105,"column":2},"end":{"line":107,"column":5}},"38":{"start":{"line":106,"column":4},"end":{"line":106,"column":40}},"39":{"start":{"line":109,"column":2},"end":{"line":109,"column":16}},"40":{"start":{"line":112,"column":0},"end":{"line":114,"column":2}},"41":{"start":{"line":113,"column":2},"end":{"line":113,"column":30}},"42":{"start":{"line":125,"column":0},"end":{"line":147,"column":2}},"43":{"start":{"line":126,"column":2},"end":{"line":126,"column":29}},"44":{"start":{"line":127,"column":2},"end":{"line":127,"column":35}},"45":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"46":{"start":{"line":131,"column":4},"end":{"line":131,"column":38}},"47":{"start":{"line":135,"column":2},"end":{"line":143,"column":3}},"48":{"start":{"line":136,"column":4},"end":{"line":136,"column":45}},"49":{"start":{"line":138,"column":4},"end":{"line":142,"column":7}},"50":{"start":{"line":146,"column":2},"end":{"line":146,"column":42}},"51":{"start":{"line":149,"column":0},"end":{"line":149,"column":34}}},"branchMap":{"1":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":19}},{"start":{"line":47,"column":23},"end":{"line":47,"column":25}}]},"2":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":17},"end":{"line":48,"column":29}},{"start":{"line":48,"column":33},"end":{"line":48,"column":43}}]},"3":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":19}},{"start":{"line":80,"column":23},"end":{"line":80,"column":25}}]},"4":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"5":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":16},"end":{"line":89,"column":31}},{"start":{"line":89,"column":35},"end":{"line":89,"column":37}}]},"6":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"7":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":20}},{"start":{"line":92,"column":24},"end":{"line":92,"column":56}}]},"8":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"9":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]}},"code":["/** internal"," * class ActionSubparsers"," *"," * Support the creation of such sub-commands with the addSubparsers()"," *"," * This class inherited from [[Action]]"," **/","'use strict';","","var util    = require('util');","var format  = require('util').format;","","","var Action = require('../action');","","// Constants","var c = require('../const');","","// Errors","var argumentErrorHelper = require('../argument/error');","","","/*:nodoc:*"," * new ChoicesPseudoAction(name, help)"," *"," * Create pseudo action for correct help text"," *"," **/","function ChoicesPseudoAction(name, help) {","  var options = {","    optionStrings: [],","    dest: name,","    help: help","  };","","  Action.call(this, options);","}","","util.inherits(ChoicesPseudoAction, Action);","","/**"," * new ActionSubparsers(options)"," * - options (object): options hash see [[Action.new]]"," *"," **/","function ActionSubparsers(options) {","  options = options || {};","  options.dest = options.dest || c.SUPPRESS;","  options.nargs = c.PARSER;","","  this.debug = (options.debug === true);","","  this._progPrefix = options.prog;","  this._parserClass = options.parserClass;","  this._nameParserMap = {};","  this._choicesActions = [];","","  options.choices = this._nameParserMap;","  Action.call(this, options);","}","","util.inherits(ActionSubparsers, Action);","","/*:nodoc:*"," * ActionSubparsers#addParser(name, options) -> ArgumentParser"," * - name (string): sub-command name"," * - options (object): see [[ArgumentParser.new]]"," *"," *  Note:"," *  addParser supports an additional aliases option,"," *  which allows multiple strings to refer to the same subparser."," *  This example, like svn, aliases co as a shorthand for checkout"," *"," **/","ActionSubparsers.prototype.addParser = function (name, options) {","  var parser;","","  var self = this;","","  options = options || {};","","  options.debug = (this.debug === true);","","  // set program from the existing prefix","  if (!options.prog) {","    options.prog = this._progPrefix + ' ' + name;","  }","","  var aliases = options.aliases || [];","","  // create a pseudo-action to hold the choice help","  if (!!options.help || typeof options.help === 'string') {","    var help = options.help;","    delete options.help;","","    var choiceAction = new ChoicesPseudoAction(name, help);","    this._choicesActions.push(choiceAction);","  }","","  // create the parser and add it to the map","  parser = new this._parserClass(options);","  this._nameParserMap[name] = parser;","","  // make parser available under aliases also","  aliases.forEach(function (alias) {","    self._nameParserMap[alias] = parser;","  });","","  return parser;","};","","ActionSubparsers.prototype._getSubactions = function () {","  return this._choicesActions;","};","","/*:nodoc:*"," * ActionSubparsers#call(parser, namespace, values, optionString) -> Void"," * - parser (ArgumentParser): current parser"," * - namespace (Namespace): namespace for output data"," * - values (Array): parsed values"," * - optionString (Array): input option string(not parsed)"," *"," * Call the action. Parse input aguments"," **/","ActionSubparsers.prototype.call = function (parser, namespace, values) {","  var parserName = values[0];","  var argStrings = values.slice(1);","","  // set the parser name if requested","  if (this.dest !== c.SUPPRESS) {","    namespace[this.dest] = parserName;","  }","","  // select the parser","  if (this._nameParserMap[parserName]) {","    parser = this._nameParserMap[parserName];","  } else {","    throw argumentErrorHelper(format(","      'Unknown parser \"%s\" (choices: [%s]).',","        parserName,","        Object.keys(this._nameParserMap).join(', ')","    ));","  }","","  // parse all the remaining options into the namespace","  parser.parseArgs(argStrings, namespace);","};","","module.exports = ActionSubparsers;",""],"l":{"10":1,"11":1,"14":1,"17":1,"20":1,"29":1,"30":0,"36":0,"39":1,"46":1,"47":0,"48":0,"49":0,"51":0,"53":0,"54":0,"55":0,"56":0,"58":0,"59":0,"62":1,"75":1,"76":0,"78":0,"80":0,"82":0,"85":0,"86":0,"89":0,"92":0,"93":0,"94":0,"96":0,"97":0,"101":0,"102":0,"105":0,"106":0,"109":0,"112":1,"113":0,"125":1,"126":0,"127":0,"130":0,"131":0,"135":0,"136":0,"138":0,"146":0,"149":1}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument/error.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument/error.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":46}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"3":{"start":{"line":30,"column":0},"end":{"line":50,"column":2}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":26}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":17}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":10}},"7":{"start":{"line":35,"column":2},"end":{"line":39,"column":3}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":38}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":33}},"10":{"start":{"line":41,"column":2},"end":{"line":45,"column":3}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":25}},"12":{"start":{"line":44,"column":4},"end":{"line":44,"column":68}},"13":{"start":{"line":47,"column":2},"end":{"line":47,"column":34}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":22}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":13}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["'use strict';","","","var format  = require('util').format;","","","var ERR_CODE = 'ARGError';","","/*:nodoc:*"," * argumentError(argument, message) -> TypeError"," * - argument (Object): action with broken argument"," * - message (String): error message"," *"," * Error format helper. An error from creating or using an argument"," * (optional or positional). The string value of this exception"," * is the message, augmented with information"," * about the argument that caused it."," *"," * #####Example"," *"," *      var argumentErrorHelper = require('./argument/error');"," *      if (conflictOptionals.length > 0) {"," *        throw argumentErrorHelper("," *          action,"," *          format('Conflicting option string(s): %s', conflictOptionals.join(', '))"," *        );"," *      }"," *"," **/","module.exports = function (argument, message) {","  var argumentName = null;","  var errMessage;","  var err;","","  if (argument.getName) {","    argumentName = argument.getName();","  } else {","    argumentName = '' + argument;","  }","","  if (!argumentName) {","    errMessage = message;","  } else {","    errMessage = format('argument \"%s\": %s', argumentName, message);","  }","","  err = new TypeError(errMessage);","  err.code = ERR_CODE;","  return err;","};",""],"l":{"4":1,"7":1,"30":1,"31":0,"32":0,"33":0,"35":0,"36":0,"38":0,"41":0,"42":0,"44":0,"47":0,"48":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument/group.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument/group.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ArgumentGroup","line":32,"loc":{"start":{"line":32,"column":37},"end":{"line":32,"column":80}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":37},"end":{"line":59,"column":55}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":40},"end":{"line":67,"column":58}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}},"3":{"start":{"line":32,"column":0},"end":{"line":55,"column":2}},"4":{"start":{"line":34,"column":2},"end":{"line":34,"column":26}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":83}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":71}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":83}},"8":{"start":{"line":41,"column":2},"end":{"line":41,"column":38}},"9":{"start":{"line":44,"column":2},"end":{"line":44,"column":29}},"10":{"start":{"line":45,"column":2},"end":{"line":45,"column":26}},"11":{"start":{"line":48,"column":2},"end":{"line":48,"column":30}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":43}},"13":{"start":{"line":50,"column":2},"end":{"line":50,"column":37}},"14":{"start":{"line":51,"column":2},"end":{"line":51,"column":61}},"15":{"start":{"line":52,"column":2},"end":{"line":52,"column":39}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":75}},"17":{"start":{"line":54,"column":2},"end":{"line":54,"column":69}},"18":{"start":{"line":56,"column":0},"end":{"line":56,"column":46}},"19":{"start":{"line":59,"column":0},"end":{"line":64,"column":2}},"20":{"start":{"line":61,"column":2},"end":{"line":61,"column":67}},"21":{"start":{"line":62,"column":2},"end":{"line":62,"column":34}},"22":{"start":{"line":63,"column":2},"end":{"line":63,"column":16}},"23":{"start":{"line":67,"column":0},"end":{"line":74,"column":2}},"24":{"start":{"line":69,"column":2},"end":{"line":69,"column":61}},"25":{"start":{"line":70,"column":2},"end":{"line":70,"column":55}},"26":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"27":{"start":{"line":72,"column":4},"end":{"line":72,"column":46}}},"branchMap":{"1":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":19}},{"start":{"line":34,"column":23},"end":{"line":34,"column":25}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":29},"end":{"line":37,"column":52}},{"start":{"line":37,"column":56},"end":{"line":37,"column":81}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":25},"end":{"line":38,"column":44}},{"start":{"line":38,"column":48},"end":{"line":38,"column":69}}]},"4":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":29},"end":{"line":39,"column":52}},{"start":{"line":39,"column":56},"end":{"line":39,"column":81}}]},"5":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]}},"code":["/** internal"," * class ArgumentGroup"," *"," * Group arguments."," * By default, ArgumentParser groups command-line arguments"," * into “positional arguments” and “optional arguments”"," * when displaying help messages. When there is a better"," * conceptual grouping of arguments than this default one,"," * appropriate groups can be created using the addArgumentGroup() method"," *"," * This class inherited from [[ArgumentContainer]]"," **/","'use strict';","","var util = require('util');","","var ActionContainer = require('../action_container');","","","/**"," * new ArgumentGroup(container, options)"," * - container (object): main container"," * - options (object): hash of group options"," *"," * #### options"," * - **prefixChars**  group name prefix"," * - **argumentDefault**  default argument value"," * - **title**  group title"," * - **description** group description"," *"," **/","var ArgumentGroup = module.exports = function ArgumentGroup(container, options) {","","  options = options || {};","","  // add any missing keyword arguments by checking the container","  options.conflictHandler = (options.conflictHandler || container.conflictHandler);","  options.prefixChars = (options.prefixChars || container.prefixChars);","  options.argumentDefault = (options.argumentDefault || container.argumentDefault);","","  ActionContainer.call(this, options);","","  // group attributes","  this.title = options.title;","  this._groupActions = [];","","  // share most attributes with the container","  this._container = container;","  this._registries = container._registries;","  this._actions = container._actions;","  this._optionStringActions = container._optionStringActions;","  this._defaults = container._defaults;","  this._hasNegativeNumberOptionals = container._hasNegativeNumberOptionals;","  this._mutuallyExclusiveGroups = container._mutuallyExclusiveGroups;","};","util.inherits(ArgumentGroup, ActionContainer);","","","ArgumentGroup.prototype._addAction = function (action) {","  // Parent add action","  action = ActionContainer.prototype._addAction.call(this, action);","  this._groupActions.push(action);","  return action;","};","","","ArgumentGroup.prototype._removeAction = function (action) {","  // Parent remove action","  ActionContainer.prototype._removeAction.call(this, action);","  var actionIndex = this._groupActions.indexOf(action);","  if (actionIndex >= 0) {","    this._groupActions.splice(actionIndex, 1);","  }","};","",""],"l":{"15":1,"17":1,"32":1,"34":0,"37":0,"38":0,"39":0,"41":0,"44":0,"45":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":1,"59":1,"61":0,"62":0,"63":0,"67":1,"69":0,"70":0,"71":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument/exclusive.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/argument/exclusive.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"MutuallyExclusiveGroup","line":27,"loc":{"start":{"line":27,"column":46},"end":{"line":27,"column":98}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":46},"end":{"line":38,"column":64}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":49},"end":{"line":50,"column":67}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}},"3":{"start":{"line":27,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":15}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":26}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":39}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":38}},"8":{"start":{"line":32,"column":2},"end":{"line":32,"column":27}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":53}},"10":{"start":{"line":38,"column":0},"end":{"line":47,"column":2}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":10}},"12":{"start":{"line":40,"column":2},"end":{"line":43,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":58}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":25}},"15":{"start":{"line":44,"column":2},"end":{"line":44,"column":46}},"16":{"start":{"line":45,"column":2},"end":{"line":45,"column":34}},"17":{"start":{"line":46,"column":2},"end":{"line":46,"column":16}},"18":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}},"19":{"start":{"line":51,"column":2},"end":{"line":51,"column":40}},"20":{"start":{"line":52,"column":2},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":19}},{"start":{"line":29,"column":23},"end":{"line":29,"column":25}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":13},"end":{"line":30,"column":29}},{"start":{"line":30,"column":33},"end":{"line":30,"column":38}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["/** internal"," * class MutuallyExclusiveGroup"," *"," * Group arguments."," * By default, ArgumentParser groups command-line arguments"," * into “positional arguments” and “optional arguments”"," * when displaying help messages. When there is a better"," * conceptual grouping of arguments than this default one,"," * appropriate groups can be created using the addArgumentGroup() method"," *"," * This class inherited from [[ArgumentContainer]]"," **/","'use strict';","","var util = require('util');","","var ArgumentGroup = require('./group');","","/**"," * new MutuallyExclusiveGroup(container, options)"," * - container (object): main container"," * - options (object): options.required -> true/false"," *"," * `required` could be an argument itself, but making it a property of"," * the options argument is more consistent with the JS adaptation of the Python)"," **/","var MutuallyExclusiveGroup = module.exports = function MutuallyExclusiveGroup(container, options) {","  var required;","  options = options || {};","  required = options.required || false;","  ArgumentGroup.call(this, container);","  this.required = required;","","};","util.inherits(MutuallyExclusiveGroup, ArgumentGroup);","","","MutuallyExclusiveGroup.prototype._addAction = function (action) {","  var msg;","  if (action.required) {","    msg = 'mutually exclusive arguments must be optional';","    throw new Error(msg);","  }","  action = this._container._addAction(action);","  this._groupActions.push(action);","  return action;","};","","","MutuallyExclusiveGroup.prototype._removeAction = function (action) {","  this._container._removeAction(action);","  this._groupActions.remove(action);","};","",""],"l":{"15":1,"17":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"35":1,"38":1,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"50":1,"51":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/help/formatter.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/help/formatter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":1,"63":0,"64":0,"65":1,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":1,"225":0,"226":0,"227":0,"228":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":1,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":1,"359":0,"360":0,"361":0,"362":0,"363":1,"364":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0,0,0,0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"fnMap":{"1":{"name":"Section","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":28},"end":{"line":42,"column":48}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":31},"end":{"line":53,"column":52}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":29},"end":{"line":61,"column":45}}},"5":{"name":"HelpFormatter","line":101,"loc":{"start":{"line":101,"column":37},"end":{"line":101,"column":69}}},"6":{"name":"(anonymous_6)","line":121,"loc":{"start":{"line":121,"column":34},"end":{"line":121,"column":46}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":126,"column":34},"end":{"line":126,"column":46}}},"8":{"name":"(anonymous_8)","line":134,"loc":{"start":{"line":134,"column":35},"end":{"line":134,"column":57}}},"9":{"name":"(anonymous_9)","line":158,"loc":{"start":{"line":158,"column":39},"end":{"line":158,"column":58}}},"10":{"name":"(anonymous_10)","line":178,"loc":{"start":{"line":178,"column":37},"end":{"line":178,"column":49}}},"11":{"name":"(anonymous_11)","line":197,"loc":{"start":{"line":197,"column":34},"end":{"line":197,"column":50}}},"12":{"name":"(anonymous_12)","line":218,"loc":{"start":{"line":218,"column":35},"end":{"line":218,"column":77}}},"13":{"name":"(anonymous_13)","line":232,"loc":{"start":{"line":232,"column":38},"end":{"line":232,"column":56}}},"14":{"name":"(anonymous_14)","line":244,"loc":{"start":{"line":244,"column":38},"end":{"line":244,"column":59}}},"15":{"name":"(anonymous_15)","line":277,"loc":{"start":{"line":277,"column":39},"end":{"line":277,"column":58}}},"16":{"name":"(anonymous_16)","line":279,"loc":{"start":{"line":279,"column":18},"end":{"line":279,"column":36}}},"17":{"name":"(anonymous_17)","line":299,"loc":{"start":{"line":299,"column":37},"end":{"line":299,"column":49}}},"18":{"name":"(anonymous_18)","line":308,"loc":{"start":{"line":308,"column":37},"end":{"line":308,"column":60}}},"19":{"name":"(anonymous_19)","line":309,"loc":{"start":{"line":309,"column":28},"end":{"line":309,"column":44}}},"20":{"name":"(anonymous_20)","line":314,"loc":{"start":{"line":314,"column":39},"end":{"line":314,"column":81}}},"21":{"name":"(anonymous_21)","line":340,"loc":{"start":{"line":340,"column":20},"end":{"line":340,"column":38}}},"22":{"name":"(anonymous_22)","line":374,"loc":{"start":{"line":374,"column":22},"end":{"line":374,"column":55}}},"23":{"name":"(anonymous_23)","line":380,"loc":{"start":{"line":380,"column":22},"end":{"line":380,"column":38}}},"24":{"name":"(anonymous_24)","line":436,"loc":{"start":{"line":436,"column":46},"end":{"line":436,"column":73}}},"25":{"name":"(anonymous_25)","line":442,"loc":{"start":{"line":442,"column":17},"end":{"line":442,"column":34}}},"26":{"name":"(anonymous_26)","line":452,"loc":{"start":{"line":452,"column":36},"end":{"line":452,"column":54}}},"27":{"name":"(anonymous_27)","line":481,"loc":{"start":{"line":481,"column":18},"end":{"line":481,"column":49}}},"28":{"name":"(anonymous_28)","line":541,"loc":{"start":{"line":541,"column":26},"end":{"line":541,"column":42}}},"29":{"name":"(anonymous_29)","line":558,"loc":{"start":{"line":558,"column":38},"end":{"line":558,"column":54}}},"30":{"name":"(anonymous_30)","line":565,"loc":{"start":{"line":565,"column":40},"end":{"line":565,"column":58}}},"31":{"name":"(anonymous_31)","line":605,"loc":{"start":{"line":605,"column":31},"end":{"line":605,"column":47}}},"32":{"name":"(anonymous_32)","line":616,"loc":{"start":{"line":616,"column":36},"end":{"line":616,"column":57}}},"33":{"name":"(anonymous_33)","line":625,"loc":{"start":{"line":625,"column":50},"end":{"line":625,"column":68}}},"34":{"name":"(anonymous_34)","line":644,"loc":{"start":{"line":644,"column":33},"end":{"line":644,"column":57}}},"35":{"name":"(anonymous_35)","line":651,"loc":{"start":{"line":651,"column":44},"end":{"line":651,"column":78}}},"36":{"name":"(anonymous_36)","line":671,"loc":{"start":{"line":671,"column":9},"end":{"line":671,"column":25}}},"37":{"name":"(anonymous_37)","line":684,"loc":{"start":{"line":684,"column":38},"end":{"line":684,"column":72}}},"38":{"name":"(anonymous_38)","line":723,"loc":{"start":{"line":723,"column":38},"end":{"line":723,"column":56}}},"39":{"name":"(anonymous_39)","line":726,"loc":{"start":{"line":726,"column":30},"end":{"line":726,"column":56}}},"40":{"name":"(anonymous_40)","line":747,"loc":{"start":{"line":747,"column":38},"end":{"line":747,"column":61}}},"41":{"name":"(anonymous_41)","line":759,"loc":{"start":{"line":759,"column":28},"end":{"line":759,"column":44}}},"42":{"name":"(anonymous_42)","line":785,"loc":{"start":{"line":785,"column":36},"end":{"line":785,"column":67}}},"43":{"name":"(anonymous_43)","line":787,"loc":{"start":{"line":787,"column":20},"end":{"line":787,"column":36}}},"44":{"name":"(anonymous_44)","line":793,"loc":{"start":{"line":793,"column":41},"end":{"line":793,"column":59}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":29}},"4":{"start":{"line":30,"column":0},"end":{"line":34,"column":1}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":26}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":19}},"8":{"start":{"line":42,"column":0},"end":{"line":44,"column":2}},"9":{"start":{"line":43,"column":2},"end":{"line":43,"column":29}},"10":{"start":{"line":53,"column":0},"end":{"line":89,"column":2}},"11":{"start":{"line":54,"column":2},"end":{"line":54,"column":24}},"12":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"13":{"start":{"line":58,"column":4},"end":{"line":58,"column":24}},"14":{"start":{"line":61,"column":2},"end":{"line":68,"column":5}},"15":{"start":{"line":62,"column":4},"end":{"line":62,"column":24}},"16":{"start":{"line":64,"column":4},"end":{"line":64,"column":20}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":19}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":19}},"19":{"start":{"line":67,"column":4},"end":{"line":67,"column":33}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":44}},"21":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"22":{"start":{"line":72,"column":4},"end":{"line":72,"column":24}},"23":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"24":{"start":{"line":77,"column":4},"end":{"line":77,"column":14}},"25":{"start":{"line":81,"column":2},"end":{"line":81,"column":15}},"26":{"start":{"line":82,"column":2},"end":{"line":85,"column":3}},"27":{"start":{"line":83,"column":4},"end":{"line":83,"column":48}},"28":{"start":{"line":84,"column":4},"end":{"line":84,"column":74}},"29":{"start":{"line":88,"column":2},"end":{"line":88,"column":67}},"30":{"start":{"line":101,"column":0},"end":{"line":119,"column":2}},"31":{"start":{"line":102,"column":2},"end":{"line":102,"column":26}},"32":{"start":{"line":104,"column":2},"end":{"line":104,"column":28}},"33":{"start":{"line":106,"column":2},"end":{"line":106,"column":56}},"34":{"start":{"line":107,"column":2},"end":{"line":107,"column":69}},"35":{"start":{"line":109,"column":2},"end":{"line":109,"column":26}},"36":{"start":{"line":110,"column":2},"end":{"line":110,"column":55}},"37":{"start":{"line":111,"column":2},"end":{"line":111,"column":18}},"38":{"start":{"line":112,"column":2},"end":{"line":112,"column":28}},"39":{"start":{"line":114,"column":2},"end":{"line":114,"column":40}},"40":{"start":{"line":115,"column":2},"end":{"line":115,"column":43}},"41":{"start":{"line":117,"column":2},"end":{"line":117,"column":52}},"42":{"start":{"line":118,"column":2},"end":{"line":118,"column":72}},"43":{"start":{"line":121,"column":0},"end":{"line":124,"column":2}},"44":{"start":{"line":122,"column":2},"end":{"line":122,"column":47}},"45":{"start":{"line":123,"column":2},"end":{"line":123,"column":19}},"46":{"start":{"line":126,"column":0},"end":{"line":132,"column":2}},"47":{"start":{"line":127,"column":2},"end":{"line":127,"column":47}},"48":{"start":{"line":128,"column":2},"end":{"line":128,"column":19}},"49":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"50":{"start":{"line":130,"column":4},"end":{"line":130,"column":49}},"51":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"52":{"start":{"line":135,"column":2},"end":{"line":135,"column":47}},"53":{"start":{"line":158,"column":0},"end":{"line":164,"column":2}},"54":{"start":{"line":159,"column":2},"end":{"line":159,"column":17}},"55":{"start":{"line":160,"column":2},"end":{"line":160,"column":59}},"56":{"start":{"line":161,"column":2},"end":{"line":161,"column":46}},"57":{"start":{"line":162,"column":2},"end":{"line":162,"column":32}},"58":{"start":{"line":163,"column":2},"end":{"line":163,"column":33}},"59":{"start":{"line":178,"column":0},"end":{"line":181,"column":2}},"60":{"start":{"line":179,"column":2},"end":{"line":179,"column":54}},"61":{"start":{"line":180,"column":2},"end":{"line":180,"column":17}},"62":{"start":{"line":197,"column":0},"end":{"line":201,"column":2}},"63":{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},"64":{"start":{"line":199,"column":4},"end":{"line":199,"column":46}},"65":{"start":{"line":218,"column":0},"end":{"line":222,"column":2}},"66":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"67":{"start":{"line":220,"column":4},"end":{"line":220,"column":73}},"68":{"start":{"line":232,"column":0},"end":{"line":261,"column":2}},"69":{"start":{"line":233,"column":2},"end":{"line":260,"column":3}},"70":{"start":{"line":234,"column":4},"end":{"line":234,"column":20}},"71":{"start":{"line":237,"column":4},"end":{"line":237,"column":63}},"72":{"start":{"line":238,"column":4},"end":{"line":238,"column":49}},"73":{"start":{"line":240,"column":4},"end":{"line":240,"column":21}},"74":{"start":{"line":242,"column":4},"end":{"line":252,"column":5}},"75":{"start":{"line":243,"column":6},"end":{"line":243,"column":21}},"76":{"start":{"line":244,"column":6},"end":{"line":250,"column":9}},"77":{"start":{"line":246,"column":8},"end":{"line":246,"column":68}},"78":{"start":{"line":247,"column":8},"end":{"line":247,"column":40}},"79":{"start":{"line":248,"column":8},"end":{"line":248,"column":76}},"80":{"start":{"line":251,"column":6},"end":{"line":251,"column":21}},"81":{"start":{"line":255,"column":4},"end":{"line":255,"column":58}},"82":{"start":{"line":256,"column":4},"end":{"line":256,"column":74}},"83":{"start":{"line":259,"column":4},"end":{"line":259,"column":50}},"84":{"start":{"line":277,"column":0},"end":{"line":282,"column":2}},"85":{"start":{"line":278,"column":2},"end":{"line":278,"column":18}},"86":{"start":{"line":279,"column":2},"end":{"line":281,"column":5}},"87":{"start":{"line":280,"column":4},"end":{"line":280,"column":29}},"88":{"start":{"line":299,"column":0},"end":{"line":306,"column":2}},"89":{"start":{"line":300,"column":2},"end":{"line":300,"column":48}},"90":{"start":{"line":301,"column":2},"end":{"line":304,"column":3}},"91":{"start":{"line":302,"column":4},"end":{"line":302,"column":63}},"92":{"start":{"line":303,"column":4},"end":{"line":303,"column":45}},"93":{"start":{"line":305,"column":2},"end":{"line":305,"column":14}},"94":{"start":{"line":308,"column":0},"end":{"line":312,"column":2}},"95":{"start":{"line":309,"column":2},"end":{"line":311,"column":14}},"96":{"start":{"line":310,"column":4},"end":{"line":310,"column":41}},"97":{"start":{"line":314,"column":0},"end":{"line":434,"column":2}},"98":{"start":{"line":315,"column":2},"end":{"line":317,"column":3}},"99":{"start":{"line":316,"column":4},"end":{"line":316,"column":23}},"100":{"start":{"line":319,"column":2},"end":{"line":319,"column":26}},"101":{"start":{"line":320,"column":2},"end":{"line":320,"column":24}},"102":{"start":{"line":324,"column":2},"end":{"line":430,"column":3}},"103":{"start":{"line":325,"column":4},"end":{"line":325,"column":49}},"104":{"start":{"line":328,"column":9},"end":{"line":430,"column":3}},"105":{"start":{"line":329,"column":4},"end":{"line":329,"column":23}},"106":{"start":{"line":332,"column":9},"end":{"line":430,"column":3}},"107":{"start":{"line":333,"column":4},"end":{"line":333,"column":26}},"108":{"start":{"line":334,"column":4},"end":{"line":334,"column":23}},"109":{"start":{"line":335,"column":4},"end":{"line":335,"column":25}},"110":{"start":{"line":336,"column":4},"end":{"line":336,"column":20}},"111":{"start":{"line":337,"column":4},"end":{"line":337,"column":18}},"112":{"start":{"line":340,"column":4},"end":{"line":346,"column":7}},"113":{"start":{"line":341,"column":6},"end":{"line":345,"column":7}},"114":{"start":{"line":342,"column":8},"end":{"line":342,"column":31}},"115":{"start":{"line":344,"column":8},"end":{"line":344,"column":33}},"116":{"start":{"line":349,"column":4},"end":{"line":349,"column":86}},"117":{"start":{"line":350,"column":4},"end":{"line":350,"column":44}},"118":{"start":{"line":353,"column":4},"end":{"line":353,"column":50}},"119":{"start":{"line":354,"column":4},"end":{"line":429,"column":5}},"120":{"start":{"line":357,"column":6},"end":{"line":357,"column":69}},"121":{"start":{"line":358,"column":6},"end":{"line":358,"column":70}},"122":{"start":{"line":359,"column":6},"end":{"line":359,"column":74}},"123":{"start":{"line":362,"column":6},"end":{"line":362,"column":58}},"124":{"start":{"line":363,"column":6},"end":{"line":363,"column":68}},"125":{"start":{"line":365,"column":6},"end":{"line":367,"column":7}},"126":{"start":{"line":366,"column":8},"end":{"line":366,"column":80}},"127":{"start":{"line":368,"column":6},"end":{"line":370,"column":7}},"128":{"start":{"line":369,"column":8},"end":{"line":369,"column":84}},"129":{"start":{"line":374,"column":6},"end":{"line":397,"column":8}},"130":{"start":{"line":375,"column":8},"end":{"line":375,"column":23}},"131":{"start":{"line":376,"column":8},"end":{"line":376,"column":22}},"132":{"start":{"line":378,"column":8},"end":{"line":378,"column":72}},"133":{"start":{"line":380,"column":8},"end":{"line":388,"column":11}},"134":{"start":{"line":381,"column":10},"end":{"line":385,"column":11}},"135":{"start":{"line":382,"column":12},"end":{"line":382,"column":48}},"136":{"start":{"line":383,"column":12},"end":{"line":383,"column":22}},"137":{"start":{"line":384,"column":12},"end":{"line":384,"column":43}},"138":{"start":{"line":386,"column":10},"end":{"line":386,"column":26}},"139":{"start":{"line":387,"column":10},"end":{"line":387,"column":40}},"140":{"start":{"line":390,"column":8},"end":{"line":392,"column":9}},"141":{"start":{"line":391,"column":10},"end":{"line":391,"column":46}},"142":{"start":{"line":393,"column":8},"end":{"line":395,"column":9}},"143":{"start":{"line":394,"column":10},"end":{"line":394,"column":52}},"144":{"start":{"line":396,"column":8},"end":{"line":396,"column":21}},"145":{"start":{"line":399,"column":6},"end":{"line":399,"column":31}},"146":{"start":{"line":401,"column":6},"end":{"line":426,"column":7}},"147":{"start":{"line":402,"column":8},"end":{"line":402,"column":67}},"148":{"start":{"line":403,"column":8},"end":{"line":412,"column":9}},"149":{"start":{"line":404,"column":10},"end":{"line":407,"column":12}},"150":{"start":{"line":408,"column":15},"end":{"line":412,"column":9}},"151":{"start":{"line":409,"column":10},"end":{"line":409,"column":78}},"152":{"start":{"line":411,"column":10},"end":{"line":411,"column":27}},"153":{"start":{"line":416,"column":8},"end":{"line":416,"column":47}},"154":{"start":{"line":417,"column":8},"end":{"line":417,"column":48}},"155":{"start":{"line":418,"column":8},"end":{"line":418,"column":41}},"156":{"start":{"line":419,"column":8},"end":{"line":424,"column":9}},"157":{"start":{"line":420,"column":10},"end":{"line":423,"column":12}},"158":{"start":{"line":425,"column":8},"end":{"line":425,"column":33}},"159":{"start":{"line":428,"column":6},"end":{"line":428,"column":32}},"160":{"start":{"line":433,"column":2},"end":{"line":433,"column":40}},"161":{"start":{"line":436,"column":0},"end":{"line":556,"column":2}},"162":{"start":{"line":438,"column":2},"end":{"line":438,"column":24}},"163":{"start":{"line":439,"column":2},"end":{"line":439,"column":19}},"164":{"start":{"line":440,"column":2},"end":{"line":440,"column":18}},"165":{"start":{"line":442,"column":2},"end":{"line":476,"column":5}},"166":{"start":{"line":443,"column":4},"end":{"line":443,"column":12}},"167":{"start":{"line":444,"column":4},"end":{"line":444,"column":10}},"168":{"start":{"line":446,"column":4},"end":{"line":446,"column":56}},"169":{"start":{"line":447,"column":4},"end":{"line":475,"column":5}},"170":{"start":{"line":448,"column":6},"end":{"line":448,"column":47}},"171":{"start":{"line":451,"column":6},"end":{"line":474,"column":7}},"172":{"start":{"line":452,"column":8},"end":{"line":454,"column":11}},"173":{"start":{"line":453,"column":10},"end":{"line":453,"column":36}},"174":{"start":{"line":456,"column":8},"end":{"line":470,"column":9}},"175":{"start":{"line":457,"column":10},"end":{"line":461,"column":11}},"176":{"start":{"line":458,"column":12},"end":{"line":458,"column":35}},"177":{"start":{"line":460,"column":12},"end":{"line":460,"column":33}},"178":{"start":{"line":462,"column":10},"end":{"line":462,"column":29}},"179":{"start":{"line":464,"column":10},"end":{"line":468,"column":11}},"180":{"start":{"line":465,"column":12},"end":{"line":465,"column":35}},"181":{"start":{"line":467,"column":12},"end":{"line":467,"column":33}},"182":{"start":{"line":469,"column":10},"end":{"line":469,"column":29}},"183":{"start":{"line":471,"column":8},"end":{"line":473,"column":9}},"184":{"start":{"line":472,"column":10},"end":{"line":472,"column":27}},"185":{"start":{"line":479,"column":2},"end":{"line":479,"column":17}},"186":{"start":{"line":481,"column":2},"end":{"line":531,"column":5}},"187":{"start":{"line":482,"column":4},"end":{"line":482,"column":13}},"188":{"start":{"line":483,"column":4},"end":{"line":483,"column":21}},"189":{"start":{"line":484,"column":4},"end":{"line":484,"column":20}},"190":{"start":{"line":485,"column":4},"end":{"line":485,"column":19}},"191":{"start":{"line":489,"column":4},"end":{"line":530,"column":5}},"192":{"start":{"line":490,"column":6},"end":{"line":490,"column":23}},"193":{"start":{"line":491,"column":6},"end":{"line":495,"column":7}},"194":{"start":{"line":492,"column":8},"end":{"line":492,"column":49}},"195":{"start":{"line":493,"column":13},"end":{"line":495,"column":7}},"196":{"start":{"line":494,"column":8},"end":{"line":494,"column":57}},"197":{"start":{"line":498,"column":11},"end":{"line":530,"column":5}},"198":{"start":{"line":499,"column":6},"end":{"line":499,"column":51}},"199":{"start":{"line":502,"column":6},"end":{"line":506,"column":7}},"200":{"start":{"line":503,"column":8},"end":{"line":505,"column":9}},"201":{"start":{"line":504,"column":10},"end":{"line":504,"column":35}},"202":{"start":{"line":508,"column":6},"end":{"line":508,"column":23}},"203":{"start":{"line":512,"column":6},"end":{"line":512,"column":45}},"204":{"start":{"line":515,"column":6},"end":{"line":523,"column":7}},"205":{"start":{"line":516,"column":8},"end":{"line":516,"column":33}},"206":{"start":{"line":520,"column":8},"end":{"line":520,"column":48}},"207":{"start":{"line":521,"column":8},"end":{"line":521,"column":59}},"208":{"start":{"line":522,"column":8},"end":{"line":522,"column":47}},"209":{"start":{"line":525,"column":6},"end":{"line":527,"column":7}},"210":{"start":{"line":526,"column":8},"end":{"line":526,"column":32}},"211":{"start":{"line":529,"column":6},"end":{"line":529,"column":23}},"212":{"start":{"line":534,"column":2},"end":{"line":538,"column":3}},"213":{"start":{"line":535,"column":4},"end":{"line":537,"column":5}},"214":{"start":{"line":536,"column":6},"end":{"line":536,"column":37}},"215":{"start":{"line":541,"column":2},"end":{"line":543,"column":15}},"216":{"start":{"line":542,"column":4},"end":{"line":542,"column":18}},"217":{"start":{"line":546,"column":2},"end":{"line":546,"column":41}},"218":{"start":{"line":547,"column":2},"end":{"line":547,"column":41}},"219":{"start":{"line":548,"column":2},"end":{"line":548,"column":37}},"220":{"start":{"line":549,"column":2},"end":{"line":549,"column":37}},"221":{"start":{"line":550,"column":2},"end":{"line":550,"column":44}},"222":{"start":{"line":552,"column":2},"end":{"line":552,"column":21}},"223":{"start":{"line":555,"column":2},"end":{"line":555,"column":14}},"224":{"start":{"line":558,"column":0},"end":{"line":563,"column":2}},"225":{"start":{"line":559,"column":2},"end":{"line":559,"column":45}},"226":{"start":{"line":560,"column":2},"end":{"line":560,"column":52}},"227":{"start":{"line":561,"column":2},"end":{"line":561,"column":60}},"228":{"start":{"line":562,"column":2},"end":{"line":562,"column":74}},"229":{"start":{"line":565,"column":0},"end":{"line":623,"column":2}},"230":{"start":{"line":566,"column":2},"end":{"line":566,"column":18}},"231":{"start":{"line":568,"column":2},"end":{"line":568,"column":15}},"232":{"start":{"line":569,"column":2},"end":{"line":569,"column":16}},"233":{"start":{"line":570,"column":2},"end":{"line":570,"column":12}},"234":{"start":{"line":571,"column":2},"end":{"line":571,"column":18}},"235":{"start":{"line":574,"column":2},"end":{"line":574,"column":80}},"236":{"start":{"line":575,"column":2},"end":{"line":575,"column":45}},"237":{"start":{"line":576,"column":2},"end":{"line":576,"column":59}},"238":{"start":{"line":577,"column":2},"end":{"line":577,"column":58}},"239":{"start":{"line":580,"column":2},"end":{"line":595,"column":3}},"240":{"start":{"line":581,"column":4},"end":{"line":581,"column":78}},"241":{"start":{"line":584,"column":9},"end":{"line":595,"column":3}},"242":{"start":{"line":585,"column":4},"end":{"line":588,"column":58}},"243":{"start":{"line":589,"column":4},"end":{"line":589,"column":20}},"244":{"start":{"line":593,"column":4},"end":{"line":593,"column":78}},"245":{"start":{"line":594,"column":4},"end":{"line":594,"column":31}},"246":{"start":{"line":598,"column":2},"end":{"line":598,"column":27}},"247":{"start":{"line":601,"column":2},"end":{"line":612,"column":3}},"248":{"start":{"line":602,"column":4},"end":{"line":602,"column":40}},"249":{"start":{"line":603,"column":4},"end":{"line":603,"column":54}},"250":{"start":{"line":604,"column":4},"end":{"line":604,"column":67}},"251":{"start":{"line":605,"column":4},"end":{"line":607,"column":7}},"252":{"start":{"line":606,"column":6},"end":{"line":606,"column":62}},"253":{"start":{"line":610,"column":9},"end":{"line":612,"column":3}},"254":{"start":{"line":611,"column":4},"end":{"line":611,"column":22}},"255":{"start":{"line":614,"column":2},"end":{"line":620,"column":3}},"256":{"start":{"line":615,"column":4},"end":{"line":615,"column":19}},"257":{"start":{"line":616,"column":4},"end":{"line":618,"column":7}},"258":{"start":{"line":617,"column":6},"end":{"line":617,"column":48}},"259":{"start":{"line":619,"column":4},"end":{"line":619,"column":19}},"260":{"start":{"line":622,"column":2},"end":{"line":622,"column":32}},"261":{"start":{"line":625,"column":0},"end":{"line":649,"column":2}},"262":{"start":{"line":626,"column":2},"end":{"line":630,"column":3}},"263":{"start":{"line":627,"column":4},"end":{"line":627,"column":66}},"264":{"start":{"line":628,"column":4},"end":{"line":628,"column":34}},"265":{"start":{"line":629,"column":4},"end":{"line":629,"column":23}},"266":{"start":{"line":632,"column":2},"end":{"line":632,"column":17}},"267":{"start":{"line":633,"column":2},"end":{"line":633,"column":18}},"268":{"start":{"line":634,"column":2},"end":{"line":634,"column":17}},"269":{"start":{"line":637,"column":2},"end":{"line":647,"column":3}},"270":{"start":{"line":638,"column":4},"end":{"line":638,"column":47}},"271":{"start":{"line":642,"column":4},"end":{"line":642,"column":44}},"272":{"start":{"line":643,"column":4},"end":{"line":643,"column":55}},"273":{"start":{"line":644,"column":4},"end":{"line":646,"column":7}},"274":{"start":{"line":645,"column":6},"end":{"line":645,"column":50}},"275":{"start":{"line":648,"column":2},"end":{"line":648,"column":26}},"276":{"start":{"line":651,"column":0},"end":{"line":682,"column":2}},"277":{"start":{"line":652,"column":2},"end":{"line":652,"column":13}},"278":{"start":{"line":654,"column":2},"end":{"line":669,"column":3}},"279":{"start":{"line":655,"column":4},"end":{"line":655,"column":28}},"280":{"start":{"line":656,"column":9},"end":{"line":669,"column":3}},"281":{"start":{"line":657,"column":4},"end":{"line":657,"column":33}},"282":{"start":{"line":659,"column":4},"end":{"line":665,"column":5}},"283":{"start":{"line":660,"column":6},"end":{"line":660,"column":45}},"284":{"start":{"line":661,"column":11},"end":{"line":665,"column":5}},"285":{"start":{"line":662,"column":6},"end":{"line":662,"column":34}},"286":{"start":{"line":664,"column":6},"end":{"line":664,"column":47}},"287":{"start":{"line":666,"column":4},"end":{"line":666,"column":33}},"288":{"start":{"line":668,"column":4},"end":{"line":668,"column":28}},"289":{"start":{"line":671,"column":2},"end":{"line":681,"column":4}},"290":{"start":{"line":672,"column":4},"end":{"line":674,"column":5}},"291":{"start":{"line":673,"column":6},"end":{"line":673,"column":20}},"292":{"start":{"line":676,"column":4},"end":{"line":676,"column":22}},"293":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"294":{"start":{"line":678,"column":6},"end":{"line":678,"column":28}},"295":{"start":{"line":680,"column":4},"end":{"line":680,"column":20}},"296":{"start":{"line":684,"column":0},"end":{"line":721,"column":2}},"297":{"start":{"line":685,"column":2},"end":{"line":685,"column":13}},"298":{"start":{"line":686,"column":2},"end":{"line":686,"column":15}},"299":{"start":{"line":688,"column":2},"end":{"line":688,"column":68}},"300":{"start":{"line":690,"column":2},"end":{"line":719,"column":3}},"301":{"start":{"line":694,"column":6},"end":{"line":694,"column":33}},"302":{"start":{"line":695,"column":6},"end":{"line":695,"column":32}},"303":{"start":{"line":696,"column":6},"end":{"line":696,"column":12}},"304":{"start":{"line":698,"column":6},"end":{"line":698,"column":33}},"305":{"start":{"line":699,"column":6},"end":{"line":699,"column":39}},"306":{"start":{"line":700,"column":6},"end":{"line":700,"column":12}},"307":{"start":{"line":702,"column":6},"end":{"line":702,"column":33}},"308":{"start":{"line":703,"column":6},"end":{"line":703,"column":65}},"309":{"start":{"line":704,"column":6},"end":{"line":704,"column":12}},"310":{"start":{"line":706,"column":6},"end":{"line":706,"column":33}},"311":{"start":{"line":707,"column":6},"end":{"line":707,"column":63}},"312":{"start":{"line":708,"column":6},"end":{"line":708,"column":12}},"313":{"start":{"line":710,"column":6},"end":{"line":710,"column":21}},"314":{"start":{"line":711,"column":6},"end":{"line":711,"column":12}},"315":{"start":{"line":713,"column":6},"end":{"line":713,"column":33}},"316":{"start":{"line":714,"column":6},"end":{"line":714,"column":36}},"317":{"start":{"line":715,"column":6},"end":{"line":715,"column":12}},"318":{"start":{"line":717,"column":6},"end":{"line":717,"column":44}},"319":{"start":{"line":718,"column":6},"end":{"line":718,"column":34}},"320":{"start":{"line":720,"column":2},"end":{"line":720,"column":16}},"321":{"start":{"line":723,"column":0},"end":{"line":745,"column":2}},"322":{"start":{"line":724,"column":2},"end":{"line":724,"column":36}},"323":{"start":{"line":726,"column":2},"end":{"line":732,"column":5}},"324":{"start":{"line":727,"column":4},"end":{"line":727,"column":45}},"325":{"start":{"line":729,"column":4},"end":{"line":731,"column":5}},"326":{"start":{"line":730,"column":6},"end":{"line":730,"column":43}},"327":{"start":{"line":734,"column":2},"end":{"line":742,"column":3}},"328":{"start":{"line":735,"column":4},"end":{"line":741,"column":5}},"329":{"start":{"line":736,"column":6},"end":{"line":736,"column":59}},"330":{"start":{"line":737,"column":11},"end":{"line":741,"column":5}},"331":{"start":{"line":738,"column":6},"end":{"line":738,"column":49}},"332":{"start":{"line":740,"column":6},"end":{"line":740,"column":62}},"333":{"start":{"line":744,"column":2},"end":{"line":744,"column":54}},"334":{"start":{"line":747,"column":0},"end":{"line":783,"column":2}},"335":{"start":{"line":748,"column":2},"end":{"line":748,"column":17}},"336":{"start":{"line":749,"column":2},"end":{"line":749,"column":47}},"337":{"start":{"line":750,"column":2},"end":{"line":750,"column":87}},"338":{"start":{"line":752,"column":2},"end":{"line":752,"column":40}},"339":{"start":{"line":754,"column":2},"end":{"line":754,"column":21}},"340":{"start":{"line":755,"column":2},"end":{"line":755,"column":52}},"341":{"start":{"line":759,"column":2},"end":{"line":780,"column":5}},"342":{"start":{"line":760,"column":4},"end":{"line":763,"column":5}},"343":{"start":{"line":761,"column":6},"end":{"line":761,"column":23}},"344":{"start":{"line":762,"column":6},"end":{"line":762,"column":13}},"345":{"start":{"line":765,"column":4},"end":{"line":765,"column":22}},"346":{"start":{"line":766,"column":4},"end":{"line":766,"column":24}},"347":{"start":{"line":767,"column":4},"end":{"line":767,"column":27}},"348":{"start":{"line":768,"column":4},"end":{"line":776,"column":5}},"349":{"start":{"line":769,"column":6},"end":{"line":772,"column":7}},"350":{"start":{"line":770,"column":8},"end":{"line":770,"column":83}},"351":{"start":{"line":771,"column":8},"end":{"line":771,"column":49}},"352":{"start":{"line":773,"column":6},"end":{"line":773,"column":53}},"353":{"start":{"line":774,"column":6},"end":{"line":774,"column":26}},"354":{"start":{"line":775,"column":6},"end":{"line":775,"column":23}},"355":{"start":{"line":777,"column":4},"end":{"line":779,"column":5}},"356":{"start":{"line":778,"column":6},"end":{"line":778,"column":53}},"357":{"start":{"line":782,"column":2},"end":{"line":782,"column":15}},"358":{"start":{"line":785,"column":0},"end":{"line":791,"column":2}},"359":{"start":{"line":786,"column":2},"end":{"line":786,"column":44}},"360":{"start":{"line":787,"column":2},"end":{"line":789,"column":5}},"361":{"start":{"line":788,"column":4},"end":{"line":788,"column":25}},"362":{"start":{"line":790,"column":2},"end":{"line":790,"column":27}},"363":{"start":{"line":793,"column":0},"end":{"line":795,"column":2}},"364":{"start":{"line":794,"column":2},"end":{"line":794,"column":21}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"2":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"5":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":19}},{"start":{"line":82,"column":23},"end":{"line":82,"column":51}}]},"6":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":19}},{"start":{"line":102,"column":23},"end":{"line":102,"column":25}}]},"7":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":26},"end":{"line":106,"column":49}},{"start":{"line":106,"column":53},"end":{"line":106,"column":55}}]},"8":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":17},"end":{"line":107,"column":30}},{"start":{"line":107,"column":35},"end":{"line":107,"column":66}}]},"9":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":36},"end":{"line":107,"column":55}},{"start":{"line":107,"column":59},"end":{"line":107,"column":61}}]},"10":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":26},"end":{"line":110,"column":49}},{"start":{"line":110,"column":53},"end":{"line":110,"column":54}}]},"11":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"12":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"13":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":10}},{"start":{"line":198,"column":14},"end":{"line":198,"column":33}}]},"14":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"15":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"16":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":4},"end":{"line":242,"column":4}},{"start":{"line":242,"column":4},"end":{"line":242,"column":4}}]},"17":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]},"18":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":12},"end":{"line":310,"column":16}},{"start":{"line":310,"column":20},"end":{"line":310,"column":39}}]},"19":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]},"20":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":6},"end":{"line":315,"column":13}},{"start":{"line":315,"column":17},"end":{"line":315,"column":43}}]},"21":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":12},"end":{"line":319,"column":19}},{"start":{"line":319,"column":23},"end":{"line":319,"column":25}}]},"22":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":11},"end":{"line":320,"column":17}},{"start":{"line":320,"column":21},"end":{"line":320,"column":23}}]},"23":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"24":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":9},"end":{"line":328,"column":9}},{"start":{"line":328,"column":9},"end":{"line":328,"column":9}}]},"25":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":13},"end":{"line":328,"column":19}},{"start":{"line":328,"column":23},"end":{"line":328,"column":43}}]},"26":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":9},"end":{"line":332,"column":9}},{"start":{"line":332,"column":9},"end":{"line":332,"column":9}}]},"27":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":6},"end":{"line":341,"column":6}},{"start":{"line":341,"column":6},"end":{"line":341,"column":6}}]},"28":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"29":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":28},"end":{"line":363,"column":61}},{"start":{"line":363,"column":65},"end":{"line":363,"column":67}}]},"30":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"31":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":6},"end":{"line":368,"column":6}},{"start":{"line":368,"column":6},"end":{"line":368,"column":6}}]},"32":{"line":378,"type":"cond-expr","locations":[{"start":{"line":378,"column":34},"end":{"line":378,"column":51}},{"start":{"line":378,"column":54},"end":{"line":378,"column":71}}]},"33":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":10},"end":{"line":381,"column":10}},{"start":{"line":381,"column":10},"end":{"line":381,"column":10}}]},"34":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":8},"end":{"line":390,"column":8}},{"start":{"line":390,"column":8},"end":{"line":390,"column":8}}]},"35":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":8},"end":{"line":393,"column":8}},{"start":{"line":393,"column":8},"end":{"line":393,"column":8}}]},"36":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":6}},{"start":{"line":401,"column":6},"end":{"line":401,"column":6}}]},"37":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":8},"end":{"line":403,"column":8}},{"start":{"line":403,"column":8},"end":{"line":403,"column":8}}]},"38":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":15},"end":{"line":408,"column":15}},{"start":{"line":408,"column":15},"end":{"line":408,"column":15}}]},"39":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":8},"end":{"line":419,"column":8}},{"start":{"line":419,"column":8},"end":{"line":419,"column":8}}]},"40":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":4},"end":{"line":447,"column":4}},{"start":{"line":447,"column":4},"end":{"line":447,"column":4}}]},"41":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":6},"end":{"line":451,"column":6}},{"start":{"line":451,"column":6},"end":{"line":451,"column":6}}]},"42":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":8},"end":{"line":456,"column":8}},{"start":{"line":456,"column":8},"end":{"line":456,"column":8}}]},"43":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":10},"end":{"line":457,"column":10}},{"start":{"line":457,"column":10},"end":{"line":457,"column":10}}]},"44":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":10},"end":{"line":464,"column":10}},{"start":{"line":464,"column":10},"end":{"line":464,"column":10}}]},"45":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":4},"end":{"line":489,"column":4}},{"start":{"line":489,"column":4},"end":{"line":489,"column":4}}]},"46":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":6},"end":{"line":491,"column":6}},{"start":{"line":491,"column":6},"end":{"line":491,"column":6}}]},"47":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":13},"end":{"line":493,"column":13}},{"start":{"line":493,"column":13},"end":{"line":493,"column":13}}]},"48":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":11},"end":{"line":498,"column":11}},{"start":{"line":498,"column":11},"end":{"line":498,"column":11}}]},"49":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":6},"end":{"line":502,"column":6}},{"start":{"line":502,"column":6},"end":{"line":502,"column":6}}]},"50":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":8},"end":{"line":503,"column":8}},{"start":{"line":503,"column":8},"end":{"line":503,"column":8}}]},"51":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":12},"end":{"line":503,"column":27}},{"start":{"line":503,"column":31},"end":{"line":503,"column":60}}]},"52":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":6},"end":{"line":515,"column":6}},{"start":{"line":515,"column":6},"end":{"line":515,"column":6}}]},"53":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":6},"end":{"line":525,"column":6}},{"start":{"line":525,"column":6},"end":{"line":525,"column":6}}]},"54":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":10},"end":{"line":525,"column":26}},{"start":{"line":525,"column":30},"end":{"line":525,"column":62}}]},"55":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":4},"end":{"line":535,"column":4}},{"start":{"line":535,"column":4},"end":{"line":535,"column":4}}]},"56":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":2},"end":{"line":580,"column":2}},{"start":{"line":580,"column":2},"end":{"line":580,"column":2}}]},"57":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":9},"end":{"line":584,"column":9}},{"start":{"line":584,"column":9},"end":{"line":584,"column":9}}]},"58":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":2},"end":{"line":601,"column":2}},{"start":{"line":601,"column":2},"end":{"line":601,"column":2}}]},"59":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":9},"end":{"line":610,"column":9}},{"start":{"line":610,"column":9},"end":{"line":610,"column":9}}]},"60":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":2},"end":{"line":614,"column":2}},{"start":{"line":614,"column":2},"end":{"line":614,"column":2}}]},"61":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":2},"end":{"line":626,"column":2}},{"start":{"line":626,"column":2},"end":{"line":626,"column":2}}]},"62":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":2},"end":{"line":637,"column":2}},{"start":{"line":637,"column":2},"end":{"line":637,"column":2}}]},"63":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":2},"end":{"line":654,"column":2}},{"start":{"line":654,"column":2},"end":{"line":654,"column":2}}]},"64":{"line":654,"type":"binary-expr","locations":[{"start":{"line":654,"column":6},"end":{"line":654,"column":20}},{"start":{"line":654,"column":24},"end":{"line":654,"column":45}}]},"65":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":9},"end":{"line":656,"column":9}},{"start":{"line":656,"column":9},"end":{"line":656,"column":9}}]},"66":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":4},"end":{"line":659,"column":4}},{"start":{"line":659,"column":4},"end":{"line":659,"column":4}}]},"67":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":11},"end":{"line":661,"column":11}},{"start":{"line":661,"column":11},"end":{"line":661,"column":11}}]},"68":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":4},"end":{"line":672,"column":4}},{"start":{"line":672,"column":4},"end":{"line":672,"column":4}}]},"69":{"line":690,"type":"switch","locations":[{"start":{"line":692,"column":4},"end":{"line":692,"column":19}},{"start":{"line":693,"column":4},"end":{"line":696,"column":12}},{"start":{"line":697,"column":4},"end":{"line":700,"column":12}},{"start":{"line":701,"column":4},"end":{"line":704,"column":12}},{"start":{"line":705,"column":4},"end":{"line":708,"column":12}},{"start":{"line":709,"column":4},"end":{"line":711,"column":12}},{"start":{"line":712,"column":4},"end":{"line":715,"column":12}},{"start":{"line":716,"column":4},"end":{"line":718,"column":34}}]},"70":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":4},"end":{"line":729,"column":4}},{"start":{"line":729,"column":4},"end":{"line":729,"column":4}}]},"71":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":2},"end":{"line":734,"column":2}},{"start":{"line":734,"column":2},"end":{"line":734,"column":2}}]},"72":{"line":735,"type":"if","locations":[{"start":{"line":735,"column":4},"end":{"line":735,"column":4}},{"start":{"line":735,"column":4},"end":{"line":735,"column":4}}]},"73":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":11},"end":{"line":737,"column":11}},{"start":{"line":737,"column":11},"end":{"line":737,"column":11}}]},"74":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":4},"end":{"line":760,"column":4}},{"start":{"line":760,"column":4},"end":{"line":760,"column":4}}]},"75":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":6},"end":{"line":769,"column":6}},{"start":{"line":769,"column":6},"end":{"line":769,"column":6}}]},"76":{"line":769,"type":"binary-expr","locations":[{"start":{"line":769,"column":10},"end":{"line":769,"column":33}},{"start":{"line":769,"column":37},"end":{"line":769,"column":75}}]},"77":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":26},"end":{"line":770,"column":69}},{"start":{"line":770,"column":73},"end":{"line":770,"column":75}}]},"78":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":4},"end":{"line":777,"column":4}},{"start":{"line":777,"column":4},"end":{"line":777,"column":4}}]}},"code":["/**"," * class HelpFormatter"," *"," * Formatter for generating usage messages and argument help strings. Only the"," * name of this class is considered a public API. All the methods provided by"," * the class are considered an implementation detail."," *"," * Do not call in your code, use this class only for inherits your own forvatter"," *"," * ToDo add [additonal formatters][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#formatter-class"," **/","'use strict';","","var sprintf = require('sprintf-js').sprintf;","","// Constants","var c = require('../const');","","var $$ = require('../utils');","","","/*:nodoc:* internal"," * new Support(parent, heding)"," * - parent (object): parent section"," * - heading (string): header string"," *"," **/","function Section(parent, heading) {","  this._parent = parent;","  this._heading = heading;","  this._items = [];","}","","/*:nodoc:* internal"," * Section#addItem(callback) -> Void"," * - callback (array): tuple with function and args"," *"," * Add function for single element"," **/","Section.prototype.addItem = function (callback) {","  this._items.push(callback);","};","","/*:nodoc:* internal"," * Section#formatHelp(formatter) -> string"," * - formatter (HelpFormatter): current formatter"," *"," * Form help section string"," *"," **/","Section.prototype.formatHelp = function (formatter) {","  var itemHelp, heading;","","  // format the indented section","  if (this._parent) {","    formatter._indent();","  }","","  itemHelp = this._items.map(function (item) {","    var obj, func, args;","","    obj = formatter;","    func = item[0];","    args = item[1];","    return func.apply(obj, args);","  });","  itemHelp = formatter._joinParts(itemHelp);","","  if (this._parent) {","    formatter._dedent();","  }","","  // return nothing if the section was empty","  if (!itemHelp) {","    return '';","  }","","  // add the heading if the section was non-empty","  heading = '';","  if (this._heading && this._heading !== c.SUPPRESS) {","    var currentIndent = formatter.currentIndent;","    heading = $$.repeat(' ', currentIndent) + this._heading + ':' + c.EOL;","  }","","  // join the section-initialize newline, the heading and the help","  return formatter._joinParts([ c.EOL, heading, itemHelp, c.EOL ]);","};","","/**"," * new HelpFormatter(options)"," *"," * #### Options:"," * - `prog`: program name"," * - `indentIncriment`: indent step, default value 2"," * - `maxHelpPosition`: max help position, default value = 24"," * - `width`: line width"," *"," **/","var HelpFormatter = module.exports = function HelpFormatter(options) {","  options = options || {};","","  this._prog = options.prog;","","  this._maxHelpPosition = options.maxHelpPosition || 24;","  this._width = (options.width || ((process.env.COLUMNS || 80) - 2));","","  this._currentIndent = 0;","  this._indentIncriment = options.indentIncriment || 2;","  this._level = 0;","  this._actionMaxLength = 0;","","  this._rootSection = new Section(null);","  this._currentSection = this._rootSection;","","  this._whitespaceMatcher = new RegExp('\\\\s+', 'g');","  this._longBreakMatcher = new RegExp(c.EOL + c.EOL + c.EOL + '+', 'g');","};","","HelpFormatter.prototype._indent = function () {","  this._currentIndent += this._indentIncriment;","  this._level += 1;","};","","HelpFormatter.prototype._dedent = function () {","  this._currentIndent -= this._indentIncriment;","  this._level -= 1;","  if (this._currentIndent < 0) {","    throw new Error('Indent decreased below 0.');","  }","};","","HelpFormatter.prototype._addItem = function (func, args) {","  this._currentSection.addItem([ func, args ]);","};","","//","// Message building methods","//","","/**"," * HelpFormatter#startSection(heading) -> Void"," * - heading (string): header string"," *"," * Start new help section"," *"," * See alse [code example][1]"," *"," * ##### Example"," *"," *      formatter.startSection(actionGroup.title);"," *      formatter.addText(actionGroup.description);"," *      formatter.addArguments(actionGroup._groupActions);"," *      formatter.endSection();"," *"," **/","HelpFormatter.prototype.startSection = function (heading) {","  this._indent();","  var section = new Section(this._currentSection, heading);","  var func = section.formatHelp.bind(section);","  this._addItem(func, [ this ]);","  this._currentSection = section;","};","","/**"," * HelpFormatter#endSection -> Void"," *"," * End help section"," *"," * ##### Example"," *"," *      formatter.startSection(actionGroup.title);"," *      formatter.addText(actionGroup.description);"," *      formatter.addArguments(actionGroup._groupActions);"," *      formatter.endSection();"," **/","HelpFormatter.prototype.endSection = function () {","  this._currentSection = this._currentSection._parent;","  this._dedent();","};","","/**"," * HelpFormatter#addText(text) -> Void"," * - text (string): plain text"," *"," * Add plain text into current section"," *"," * ##### Example"," *"," *      formatter.startSection(actionGroup.title);"," *      formatter.addText(actionGroup.description);"," *      formatter.addArguments(actionGroup._groupActions);"," *      formatter.endSection();"," *"," **/","HelpFormatter.prototype.addText = function (text) {","  if (text && text !== c.SUPPRESS) {","    this._addItem(this._formatText, [ text ]);","  }","};","","/**"," * HelpFormatter#addUsage(usage, actions, groups, prefix) -> Void"," * - usage (string): usage text"," * - actions (array): actions list"," * - groups (array): groups list"," * - prefix (string): usage prefix"," *"," * Add usage data into current section"," *"," * ##### Example"," *"," *      formatter.addUsage(this.usage, this._actions, []);"," *      return formatter.formatHelp();"," *"," **/","HelpFormatter.prototype.addUsage = function (usage, actions, groups, prefix) {","  if (usage !== c.SUPPRESS) {","    this._addItem(this._formatUsage, [ usage, actions, groups, prefix ]);","  }","};","","/**"," * HelpFormatter#addArgument(action) -> Void"," * - action (object): action"," *"," * Add argument into current section"," *"," * Single variant of [[HelpFormatter#addArguments]]"," **/","HelpFormatter.prototype.addArgument = function (action) {","  if (action.help !== c.SUPPRESS) {","    var self = this;","","    // find all invocations","    var invocations = [ this._formatActionInvocation(action) ];","    var invocationLength = invocations[0].length;","","    var actionLength;","","    if (action._getSubactions) {","      this._indent();","      action._getSubactions().forEach(function (subaction) {","","        var invocationNew = self._formatActionInvocation(subaction);","        invocations.push(invocationNew);","        invocationLength = Math.max(invocationLength, invocationNew.length);","","      });","      this._dedent();","    }","","    // update the maximum item length","    actionLength = invocationLength + this._currentIndent;","    this._actionMaxLength = Math.max(this._actionMaxLength, actionLength);","","    // add the item to the list","    this._addItem(this._formatAction, [ action ]);","  }","};","","/**"," * HelpFormatter#addArguments(actions) -> Void"," * - actions (array): actions list"," *"," * Mass add arguments into current section"," *"," * ##### Example"," *"," *      formatter.startSection(actionGroup.title);"," *      formatter.addText(actionGroup.description);"," *      formatter.addArguments(actionGroup._groupActions);"," *      formatter.endSection();"," *"," **/","HelpFormatter.prototype.addArguments = function (actions) {","  var self = this;","  actions.forEach(function (action) {","    self.addArgument(action);","  });","};","","//","// Help-formatting methods","//","","/**"," * HelpFormatter#formatHelp -> string"," *"," * Format help"," *"," * ##### Example"," *"," *      formatter.addText(this.epilog);"," *      return formatter.formatHelp();"," *"," **/","HelpFormatter.prototype.formatHelp = function () {","  var help = this._rootSection.formatHelp(this);","  if (help) {","    help = help.replace(this._longBreakMatcher, c.EOL + c.EOL);","    help = $$.trimChars(help, c.EOL) + c.EOL;","  }","  return help;","};","","HelpFormatter.prototype._joinParts = function (partStrings) {","  return partStrings.filter(function (part) {","    return (part && part !== c.SUPPRESS);","  }).join('');","};","","HelpFormatter.prototype._formatUsage = function (usage, actions, groups, prefix) {","  if (!prefix && typeof prefix !== 'string') {","    prefix = 'usage: ';","  }","","  actions = actions || [];","  groups = groups || [];","","","  // if usage is specified, use that","  if (usage) {","    usage = sprintf(usage, { prog: this._prog });","","    // if no optionals or positionals are available, usage is just prog","  } else if (!usage && actions.length === 0) {","    usage = this._prog;","","    // if optionals and positionals are available, calculate usage","  } else if (!usage) {","    var prog = this._prog;","    var optionals = [];","    var positionals = [];","    var actionUsage;","    var textWidth;","","    // split optionals from positionals","    actions.forEach(function (action) {","      if (action.isOptional()) {","        optionals.push(action);","      } else {","        positionals.push(action);","      }","    });","","    // build full usage string","    actionUsage = this._formatActionsUsage([].concat(optionals, positionals), groups);","    usage = [ prog, actionUsage ].join(' ');","","    // wrap the usage parts if it's too long","    textWidth = this._width - this._currentIndent;","    if ((prefix.length + usage.length) > textWidth) {","","      // break usage into wrappable parts","      var regexpPart = new RegExp('\\\\(.*?\\\\)+|\\\\[.*?\\\\]+|\\\\S+', 'g');","      var optionalUsage = this._formatActionsUsage(optionals, groups);","      var positionalUsage = this._formatActionsUsage(positionals, groups);","","","      var optionalParts = optionalUsage.match(regexpPart);","      var positionalParts = positionalUsage.match(regexpPart) || [];","","      if (optionalParts.join(' ') !== optionalUsage) {","        throw new Error('assert \"optionalParts.join(\\' \\') === optionalUsage\"');","      }","      if (positionalParts.join(' ') !== positionalUsage) {","        throw new Error('assert \"positionalParts.join(\\' \\') === positionalUsage\"');","      }","","      // helper for wrapping lines","      /*eslint-disable func-style*/ // node 0.10 compat","      var _getLines = function (parts, indent, prefix) {","        var lines = [];","        var line = [];","","        var lineLength = prefix ? prefix.length - 1 : indent.length - 1;","","        parts.forEach(function (part) {","          if (lineLength + 1 + part.length > textWidth) {","            lines.push(indent + line.join(' '));","            line = [];","            lineLength = indent.length - 1;","          }","          line.push(part);","          lineLength += part.length + 1;","        });","","        if (line) {","          lines.push(indent + line.join(' '));","        }","        if (prefix) {","          lines[0] = lines[0].substr(indent.length);","        }","        return lines;","      };","","      var lines, indent, parts;","      // if prog is short, follow it with optionals or positionals","      if (prefix.length + prog.length <= 0.75 * textWidth) {","        indent = $$.repeat(' ', (prefix.length + prog.length + 1));","        if (optionalParts) {","          lines = [].concat(","            _getLines([ prog ].concat(optionalParts), indent, prefix),","            _getLines(positionalParts, indent)","          );","        } else if (positionalParts) {","          lines = _getLines([ prog ].concat(positionalParts), indent, prefix);","        } else {","          lines = [ prog ];","        }","","        // if prog is long, put it on its own line","      } else {","        indent = $$.repeat(' ', prefix.length);","        parts = optionalParts + positionalParts;","        lines = _getLines(parts, indent);","        if (lines.length > 1) {","          lines = [].concat(","            _getLines(optionalParts, indent),","            _getLines(positionalParts, indent)","          );","        }","        lines = [ prog ] + lines;","      }","      // join lines into usage","      usage = lines.join(c.EOL);","    }","  }","","  // prefix with 'usage:'","  return prefix + usage + c.EOL + c.EOL;","};","","HelpFormatter.prototype._formatActionsUsage = function (actions, groups) {","  // find group indices and identify actions in groups","  var groupActions = [];","  var inserts = [];","  var self = this;","","  groups.forEach(function (group) {","    var end;","    var i;","","    var start = actions.indexOf(group._groupActions[0]);","    if (start >= 0) {","      end = start + group._groupActions.length;","","      //if (actions.slice(start, end) === group._groupActions) {","      if ($$.arrayEqual(actions.slice(start, end), group._groupActions)) {","        group._groupActions.forEach(function (action) {","          groupActions.push(action);","        });","","        if (!group.required) {","          if (inserts[start]) {","            inserts[start] += ' [';","          } else {","            inserts[start] = '[';","          }","          inserts[end] = ']';","        } else {","          if (inserts[start]) {","            inserts[start] += ' (';","          } else {","            inserts[start] = '(';","          }","          inserts[end] = ')';","        }","        for (i = start + 1; i < end; i += 1) {","          inserts[i] = '|';","        }","      }","    }","  });","","  // collect all actions format strings","  var parts = [];","","  actions.forEach(function (action, actionIndex) {","    var part;","    var optionString;","    var argsDefault;","    var argsString;","","    // suppressed arguments are marked with None","    // remove | separators for suppressed arguments","    if (action.help === c.SUPPRESS) {","      parts.push(null);","      if (inserts[actionIndex] === '|') {","        inserts.splice(actionIndex, actionIndex);","      } else if (inserts[actionIndex + 1] === '|') {","        inserts.splice(actionIndex + 1, actionIndex + 1);","      }","","      // produce all arg strings","    } else if (!action.isOptional()) {","      part = self._formatArgs(action, action.dest);","","      // if it's in a group, strip the outer []","      if (groupActions.indexOf(action) >= 0) {","        if (part[0] === '[' && part[part.length - 1] === ']') {","          part = part.slice(1, -1);","        }","      }","      // add the action string to the list","      parts.push(part);","","    // produce the first way to invoke the option in brackets","    } else {","      optionString = action.optionStrings[0];","","      // if the Optional doesn't take a value, format is: -s or --long","      if (action.nargs === 0) {","        part = '' + optionString;","","      // if the Optional takes a value, format is: -s ARGS or --long ARGS","      } else {","        argsDefault = action.dest.toUpperCase();","        argsString = self._formatArgs(action, argsDefault);","        part = optionString + ' ' + argsString;","      }","      // make it look optional if it's not required or in a group","      if (!action.required && groupActions.indexOf(action) < 0) {","        part = '[' + part + ']';","      }","      // add the action string to the list","      parts.push(part);","    }","  });","","  // insert things at the necessary indices","  for (var i = inserts.length - 1; i >= 0; --i) {","    if (inserts[i] !== null) {","      parts.splice(i, 0, inserts[i]);","    }","  }","","  // join all the action items with spaces","  var text = parts.filter(function (part) {","    return !!part;","  }).join(' ');","","  // clean up separators for mutually exclusive groups","  text = text.replace(/([\\[(]) /g, '$1'); // remove spaces","  text = text.replace(/ ([\\])])/g, '$1');","  text = text.replace(/\\[ *\\]/g, ''); // remove empty groups","  text = text.replace(/\\( *\\)/g, '');","  text = text.replace(/\\(([^|]*)\\)/g, '$1'); // remove () from single action groups","","  text = text.trim();","","  // return the text","  return text;","};","","HelpFormatter.prototype._formatText = function (text) {","  text = sprintf(text, { prog: this._prog });","  var textWidth = this._width - this._currentIndent;","  var indentIncriment = $$.repeat(' ', this._currentIndent);","  return this._fillText(text, textWidth, indentIncriment) + c.EOL + c.EOL;","};","","HelpFormatter.prototype._formatAction = function (action) {","  var self = this;","","  var helpText;","  var helpLines;","  var parts;","  var indentFirst;","","  // determine the required width and the entry label","  var helpPosition = Math.min(this._actionMaxLength + 2, this._maxHelpPosition);","  var helpWidth = this._width - helpPosition;","  var actionWidth = helpPosition - this._currentIndent - 2;","  var actionHeader = this._formatActionInvocation(action);","","  // no help; start on same line and add a final newline","  if (!action.help) {","    actionHeader = $$.repeat(' ', this._currentIndent) + actionHeader + c.EOL;","","  // short action name; start on the same line and pad two spaces","  } else if (actionHeader.length <= actionWidth) {","    actionHeader = $$.repeat(' ', this._currentIndent) +","        actionHeader +","        '  ' +","        $$.repeat(' ', actionWidth - actionHeader.length);","    indentFirst = 0;","","  // long action name; start on the next line","  } else {","    actionHeader = $$.repeat(' ', this._currentIndent) + actionHeader + c.EOL;","    indentFirst = helpPosition;","  }","","  // collect the pieces of the action help","  parts = [ actionHeader ];","","  // if there was help for the action, add lines of help text","  if (action.help) {","    helpText = this._expandHelp(action);","    helpLines = this._splitLines(helpText, helpWidth);","    parts.push($$.repeat(' ', indentFirst) + helpLines[0] + c.EOL);","    helpLines.slice(1).forEach(function (line) {","      parts.push($$.repeat(' ', helpPosition) + line + c.EOL);","    });","","  // or add a newline if the description doesn't end with one","  } else if (actionHeader.charAt(actionHeader.length - 1) !== c.EOL) {","    parts.push(c.EOL);","  }","  // if there are any sub-actions, add their help as well","  if (action._getSubactions) {","    this._indent();","    action._getSubactions().forEach(function (subaction) {","      parts.push(self._formatAction(subaction));","    });","    this._dedent();","  }","  // return a single string","  return this._joinParts(parts);","};","","HelpFormatter.prototype._formatActionInvocation = function (action) {","  if (!action.isOptional()) {","    var format_func = this._metavarFormatter(action, action.dest);","    var metavars = format_func(1);","    return metavars[0];","  }","","  var parts = [];","  var argsDefault;","  var argsString;","","  // if the Optional doesn't take a value, format is: -s, --long","  if (action.nargs === 0) {","    parts = parts.concat(action.optionStrings);","","  // if the Optional takes a value, format is: -s ARGS, --long ARGS","  } else {","    argsDefault = action.dest.toUpperCase();","    argsString = this._formatArgs(action, argsDefault);","    action.optionStrings.forEach(function (optionString) {","      parts.push(optionString + ' ' + argsString);","    });","  }","  return parts.join(', ');","};","","HelpFormatter.prototype._metavarFormatter = function (action, metavarDefault) {","  var result;","","  if (action.metavar || action.metavar === '') {","    result = action.metavar;","  } else if (action.choices) {","    var choices = action.choices;","","    if (typeof choices === 'string') {","      choices = choices.split('').join(', ');","    } else if (Array.isArray(choices)) {","      choices = choices.join(',');","    } else {","      choices = Object.keys(choices).join(',');","    }","    result = '{' + choices + '}';","  } else {","    result = metavarDefault;","  }","","  return function (size) {","    if (Array.isArray(result)) {","      return result;","    }","","    var metavars = [];","    for (var i = 0; i < size; i += 1) {","      metavars.push(result);","    }","    return metavars;","  };","};","","HelpFormatter.prototype._formatArgs = function (action, metavarDefault) {","  var result;","  var metavars;","","  var buildMetavar = this._metavarFormatter(action, metavarDefault);","","  switch (action.nargs) {","    /*eslint-disable no-undefined*/","    case undefined:","    case null:","      metavars = buildMetavar(1);","      result = '' + metavars[0];","      break;","    case c.OPTIONAL:","      metavars = buildMetavar(1);","      result = '[' + metavars[0] + ']';","      break;","    case c.ZERO_OR_MORE:","      metavars = buildMetavar(2);","      result = '[' + metavars[0] + ' [' + metavars[1] + ' ...]]';","      break;","    case c.ONE_OR_MORE:","      metavars = buildMetavar(2);","      result = '' + metavars[0] + ' [' + metavars[1] + ' ...]';","      break;","    case c.REMAINDER:","      result = '...';","      break;","    case c.PARSER:","      metavars = buildMetavar(1);","      result = metavars[0] + ' ...';","      break;","    default:","      metavars = buildMetavar(action.nargs);","      result = metavars.join(' ');","  }","  return result;","};","","HelpFormatter.prototype._expandHelp = function (action) {","  var params = { prog: this._prog };","","  Object.keys(action).forEach(function (actionProperty) {","    var actionValue = action[actionProperty];","","    if (actionValue !== c.SUPPRESS) {","      params[actionProperty] = actionValue;","    }","  });","","  if (params.choices) {","    if (typeof params.choices === 'string') {","      params.choices = params.choices.split('').join(', ');","    } else if (Array.isArray(params.choices)) {","      params.choices = params.choices.join(', ');","    } else {","      params.choices = Object.keys(params.choices).join(', ');","    }","  }","","  return sprintf(this._getHelpString(action), params);","};","","HelpFormatter.prototype._splitLines = function (text, width) {","  var lines = [];","  var delimiters = [ ' ', '.', ',', '!', '?' ];","  var re = new RegExp('[' + delimiters.join('') + '][^' + delimiters.join('') + ']*$');","","  text = text.replace(/[\\n\\|\\t]/g, ' ');","","  text = text.trim();","  text = text.replace(this._whitespaceMatcher, ' ');","","  // Wraps the single paragraph in text (a string) so every line","  // is at most width characters long.","  text.split(c.EOL).forEach(function (line) {","    if (width >= line.length) {","      lines.push(line);","      return;","    }","","    var wrapStart = 0;","    var wrapEnd = width;","    var delimiterIndex = 0;","    while (wrapEnd <= line.length) {","      if (wrapEnd !== line.length && delimiters.indexOf(line[wrapEnd] < -1)) {","        delimiterIndex = (re.exec(line.substring(wrapStart, wrapEnd)) || {}).index;","        wrapEnd = wrapStart + delimiterIndex + 1;","      }","      lines.push(line.substring(wrapStart, wrapEnd));","      wrapStart = wrapEnd;","      wrapEnd += width;","    }","    if (wrapStart < line.length) {","      lines.push(line.substring(wrapStart, wrapEnd));","    }","  });","","  return lines;","};","","HelpFormatter.prototype._fillText = function (text, width, indent) {","  var lines = this._splitLines(text, width);","  lines = lines.map(function (line) {","    return indent + line;","  });","  return lines.join(c.EOL);","};","","HelpFormatter.prototype._getHelpString = function (action) {","  return action.help;","};",""],"l":{"16":1,"19":1,"21":1,"30":1,"31":0,"32":0,"33":0,"42":1,"43":0,"53":1,"54":0,"57":0,"58":0,"61":0,"62":0,"64":0,"65":0,"66":0,"67":0,"69":0,"71":0,"72":0,"76":0,"77":0,"81":0,"82":0,"83":0,"84":0,"88":0,"101":1,"102":0,"104":0,"106":0,"107":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"117":0,"118":0,"121":1,"122":0,"123":0,"126":1,"127":0,"128":0,"129":0,"130":0,"134":1,"135":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"178":1,"179":0,"180":0,"197":1,"198":0,"199":0,"218":1,"219":0,"220":0,"232":1,"233":0,"234":0,"237":0,"238":0,"240":0,"242":0,"243":0,"244":0,"246":0,"247":0,"248":0,"251":0,"255":0,"256":0,"259":0,"277":1,"278":0,"279":0,"280":0,"299":1,"300":0,"301":0,"302":0,"303":0,"305":0,"308":1,"309":0,"310":0,"314":1,"315":0,"316":0,"319":0,"320":0,"324":0,"325":0,"328":0,"329":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"340":0,"341":0,"342":0,"344":0,"349":0,"350":0,"353":0,"354":0,"357":0,"358":0,"359":0,"362":0,"363":0,"365":0,"366":0,"368":0,"369":0,"374":0,"375":0,"376":0,"378":0,"380":0,"381":0,"382":0,"383":0,"384":0,"386":0,"387":0,"390":0,"391":0,"393":0,"394":0,"396":0,"399":0,"401":0,"402":0,"403":0,"404":0,"408":0,"409":0,"411":0,"416":0,"417":0,"418":0,"419":0,"420":0,"425":0,"428":0,"433":0,"436":1,"438":0,"439":0,"440":0,"442":0,"443":0,"444":0,"446":0,"447":0,"448":0,"451":0,"452":0,"453":0,"456":0,"457":0,"458":0,"460":0,"462":0,"464":0,"465":0,"467":0,"469":0,"471":0,"472":0,"479":0,"481":0,"482":0,"483":0,"484":0,"485":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"498":0,"499":0,"502":0,"503":0,"504":0,"508":0,"512":0,"515":0,"516":0,"520":0,"521":0,"522":0,"525":0,"526":0,"529":0,"534":0,"535":0,"536":0,"541":0,"542":0,"546":0,"547":0,"548":0,"549":0,"550":0,"552":0,"555":0,"558":1,"559":0,"560":0,"561":0,"562":0,"565":1,"566":0,"568":0,"569":0,"570":0,"571":0,"574":0,"575":0,"576":0,"577":0,"580":0,"581":0,"584":0,"585":0,"589":0,"593":0,"594":0,"598":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"610":0,"611":0,"614":0,"615":0,"616":0,"617":0,"619":0,"622":0,"625":1,"626":0,"627":0,"628":0,"629":0,"632":0,"633":0,"634":0,"637":0,"638":0,"642":0,"643":0,"644":0,"645":0,"648":0,"651":1,"652":0,"654":0,"655":0,"656":0,"657":0,"659":0,"660":0,"661":0,"662":0,"664":0,"666":0,"668":0,"671":0,"672":0,"673":0,"676":0,"677":0,"678":0,"680":0,"684":1,"685":0,"686":0,"688":0,"690":0,"694":0,"695":0,"696":0,"698":0,"699":0,"700":0,"702":0,"703":0,"704":0,"706":0,"707":0,"708":0,"710":0,"711":0,"713":0,"714":0,"715":0,"717":0,"718":0,"720":0,"723":1,"724":0,"726":0,"727":0,"729":0,"730":0,"734":0,"735":0,"736":0,"737":0,"738":0,"740":0,"744":0,"747":1,"748":0,"749":0,"750":0,"752":0,"754":0,"755":0,"759":0,"760":0,"761":0,"762":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"773":0,"774":0,"775":0,"777":0,"778":0,"782":0,"785":1,"786":0,"787":0,"788":0,"790":0,"793":1,"794":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/namespace.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/namespace.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Namespace","line":20,"loc":{"start":{"line":20,"column":33},"end":{"line":20,"column":61}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":28},"end":{"line":30,"column":43}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":26},"end":{"line":42,"column":48}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":26},"end":{"line":58,"column":55}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":28},"end":{"line":69,"column":57}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":20,"column":0},"end":{"line":22,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":27}},"4":{"start":{"line":30,"column":0},"end":{"line":32,"column":2}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":27}},"6":{"start":{"line":42,"column":0},"end":{"line":49,"column":2}},"7":{"start":{"line":43,"column":2},"end":{"line":47,"column":3}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":25}},"9":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":14}},"11":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}},"12":{"start":{"line":59,"column":2},"end":{"line":59,"column":47}},"13":{"start":{"line":69,"column":0},"end":{"line":76,"column":2}},"14":{"start":{"line":70,"column":2},"end":{"line":70,"column":24}},"15":{"start":{"line":71,"column":2},"end":{"line":74,"column":3}},"16":{"start":{"line":72,"column":4},"end":{"line":72,"column":21}},"17":{"start":{"line":73,"column":4},"end":{"line":73,"column":17}},"18":{"start":{"line":75,"column":2},"end":{"line":75,"column":22}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":22},"end":{"line":59,"column":34}},{"start":{"line":59,"column":37},"end":{"line":59,"column":46}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]}},"code":["/**"," * class Namespace"," *"," * Simple object for storing attributes. Implements equality by attribute names"," * and values, and provides a simple string representation."," *"," * See also [original guide][1]"," *"," * [1]:http://docs.python.org/dev/library/argparse.html#the-namespace-object"," **/","'use strict';","","var $$ = require('./utils');","","/**"," * new Namespace(options)"," * - options(object): predefined propertis for result object"," *"," **/","var Namespace = module.exports = function Namespace(options) {","  $$.extend(this, options);","};","","/**"," * Namespace#isset(key) -> Boolean"," * - key (string|number): property name"," *"," * Tells whenever `namespace` contains given `key` or not."," **/","Namespace.prototype.isset = function (key) {","  return $$.has(this, key);","};","","/**"," * Namespace#set(key, value) -> self"," * -key (string|number|object): propery name"," * -value (mixed): new property value"," *"," * Set the property named key with value."," * If key object then set all key properties to namespace object"," **/","Namespace.prototype.set = function (key, value) {","  if (typeof (key) === 'object') {","    $$.extend(this, key);","  } else {","    this[key] = value;","  }","  return this;","};","","/**"," * Namespace#get(key, defaultValue) -> mixed"," * - key (string|number): property name"," * - defaultValue (mixed): default value"," *"," * Return the property key or defaulValue if not set"," **/","Namespace.prototype.get = function (key, defaultValue) {","  return !this[key] ? defaultValue : this[key];","};","","/**"," * Namespace#unset(key, defaultValue) -> mixed"," * - key (string|number): property name"," * - defaultValue (mixed): default value"," *"," * Return data[key](and delete it) or defaultValue"," **/","Namespace.prototype.unset = function (key, defaultValue) {","  var value = this[key];","  if (value !== null) {","    delete this[key];","    return value;","  }","  return defaultValue;","};",""],"l":{"13":1,"20":1,"21":0,"30":1,"31":0,"42":1,"43":0,"44":0,"46":0,"48":0,"58":1,"59":0,"69":1,"70":0,"71":0,"72":0,"73":0,"75":0}},"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/help/added_formatters.js":{"path":"/home/travis/build/npmtest/node-npmtest-argparse/node_modules/argparse/lib/help/added_formatters.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":1,"29":1,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"ArgumentDefaultsHelpFormatter","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":57},"end":{"line":27,"column":75}}},"3":{"name":"RawDescriptionHelpFormatter","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":46}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":50},"end":{"line":58,"column":81}}},"5":{"name":"(anonymous_5)","line":60,"loc":{"start":{"line":60,"column":20},"end":{"line":60,"column":36}}},"6":{"name":"RawTextHelpFormatter","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":39}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":45},"end":{"line":83,"column":61}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":46}},"5":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":36}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":60}},"8":{"start":{"line":27,"column":0},"end":{"line":38,"column":2}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":25}},"10":{"start":{"line":29,"column":2},"end":{"line":36,"column":3}},"11":{"start":{"line":30,"column":4},"end":{"line":35,"column":5}},"12":{"start":{"line":31,"column":6},"end":{"line":31,"column":60}},"13":{"start":{"line":32,"column":6},"end":{"line":34,"column":7}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":47}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":14}},"16":{"start":{"line":40,"column":0},"end":{"line":40,"column":77}},"17":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"18":{"start":{"line":53,"column":2},"end":{"line":53,"column":36}},"19":{"start":{"line":56,"column":0},"end":{"line":56,"column":58}},"20":{"start":{"line":58,"column":0},"end":{"line":64,"column":2}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":31}},"22":{"start":{"line":60,"column":2},"end":{"line":62,"column":5}},"23":{"start":{"line":61,"column":4},"end":{"line":61,"column":37}},"24":{"start":{"line":63,"column":2},"end":{"line":63,"column":26}},"25":{"start":{"line":65,"column":0},"end":{"line":65,"column":73}},"26":{"start":{"line":77,"column":0},"end":{"line":79,"column":1}},"27":{"start":{"line":78,"column":2},"end":{"line":78,"column":50}},"28":{"start":{"line":81,"column":0},"end":{"line":81,"column":65}},"29":{"start":{"line":83,"column":0},"end":{"line":85,"column":2}},"30":{"start":{"line":84,"column":2},"end":{"line":84,"column":26}},"31":{"start":{"line":87,"column":0},"end":{"line":87,"column":59}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"4":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":29}},{"start":{"line":32,"column":34},"end":{"line":32,"column":77}}]}},"code":["'use strict';","","var util    = require('util');","","// Constants","var c = require('../const');","","var $$ = require('../utils');","var HelpFormatter = require('./formatter.js');","","/**"," * new RawDescriptionHelpFormatter(options)"," * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})"," *"," * Help message formatter which adds default values to argument help."," *"," * Only the name of this class is considered a public API. All the methods"," * provided by the class are considered an implementation detail."," **/","","function ArgumentDefaultsHelpFormatter(options) {","  HelpFormatter.call(this, options);","}","","util.inherits(ArgumentDefaultsHelpFormatter, HelpFormatter);","","ArgumentDefaultsHelpFormatter.prototype._getHelpString = function (action) {","  var help = action.help;","  if (action.help.indexOf('%(defaultValue)s') === -1) {","    if (action.defaultValue !== c.SUPPRESS) {","      var defaulting_nargs = [ c.OPTIONAL, c.ZERO_OR_MORE ];","      if (action.isOptional() || (defaulting_nargs.indexOf(action.nargs) >= 0)) {","        help += ' (default: %(defaultValue)s)';","      }","    }","  }","  return help;","};","","module.exports.ArgumentDefaultsHelpFormatter = ArgumentDefaultsHelpFormatter;","","/**"," * new RawDescriptionHelpFormatter(options)"," * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})"," *"," * Help message formatter which retains any formatting in descriptions."," *"," * Only the name of this class is considered a public API. All the methods"," * provided by the class are considered an implementation detail."," **/","","function RawDescriptionHelpFormatter(options) {","  HelpFormatter.call(this, options);","}","","util.inherits(RawDescriptionHelpFormatter, HelpFormatter);","","RawDescriptionHelpFormatter.prototype._fillText = function (text, width, indent) {","  var lines = text.split('\\n');","  lines = lines.map(function (line) {","    return $$.trimEnd(indent + line);","  });","  return lines.join('\\n');","};","module.exports.RawDescriptionHelpFormatter = RawDescriptionHelpFormatter;","","/**"," * new RawTextHelpFormatter(options)"," * new ArgumentParser({formatterClass: argparse.RawTextHelpFormatter, ...})"," *"," * Help message formatter which retains formatting of all help text."," *"," * Only the name of this class is considered a public API. All the methods"," * provided by the class are considered an implementation detail."," **/","","function RawTextHelpFormatter(options) {","  RawDescriptionHelpFormatter.call(this, options);","}","","util.inherits(RawTextHelpFormatter, RawDescriptionHelpFormatter);","","RawTextHelpFormatter.prototype._splitLines = function (text) {","  return text.split('\\n');","};","","module.exports.RawTextHelpFormatter = RawTextHelpFormatter;",""],"l":{"3":1,"6":1,"8":1,"9":1,"21":1,"22":0,"25":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"37":0,"40":1,"52":1,"53":0,"56":1,"58":1,"59":0,"60":0,"61":0,"63":0,"65":1,"77":1,"78":0,"81":1,"83":1,"84":0,"87":1}}}